{
    "pipes": [
        {
            "name": "LeadingZerosPipe",
            "id": "pipe-LeadingZerosPipe-c86328a6d52ecff17e9492ad2d34c935573937733b15e74e9a720f0c2aaea7fb17d563e52d5aa68181efe0a7682fa994f427e3a889dd0743be1d17c5d6681bab",
            "file": "src/app/shared/modules/weather/pipes/leading-zeros.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "totalLength",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "totalLength",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "leadingZeros",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'leadingZeros'\n})\nexport class LeadingZerosPipe implements PipeTransform {\n\n  transform(value: number, totalLength: number): string {\n    return String(value).padStart(totalLength, '0');\n  }\n\n}\n"
        },
        {
            "name": "LongHandDayPipe",
            "id": "pipe-LongHandDayPipe-3154b0b5510365e69e22734a51a1ab6151f16b07c18caf29fc126cfad34037e11856d942b107616ff7eaae04a74a9367c201560ceb9d3f28c335ec1b7e743ffc",
            "file": "src/app/shared/modules/weather/pipes/long-hand-day.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "longHandDay",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'longHandDay'\n})\nexport class LongHandDayPipe implements PipeTransform {\n  transform(value: number): string {\n    switch (value) {\n      case 0:\n        return 'Sunday';\n      case 1:\n        return 'Monday';\n      case 2:\n        return 'Tuesday';\n      case 3:\n        return 'Wednesday';\n      case 4:\n        return 'Thursday';\n      case 5:\n        return 'Friday';\n      case 6:\n        return 'Saturday';\n    }\n\n    return '';\n  }\n\n}\n"
        },
        {
            "name": "ShortHandDayPipe",
            "id": "pipe-ShortHandDayPipe-66552fe283071ca20793ee92c91376f40e13fc172f9fae35d8f149a504df97d59311cf9814938c91943cb30dc8d57b3a04b72afbf528b78ce31e9dbb3461752f",
            "file": "src/app/shared/modules/weather/pipes/short-hand-day.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | number",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "shortHandDay",
            "sourceCode": "import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'shortHandDay'\n})\nexport class ShortHandDayPipe implements PipeTransform {\n  transform(value: string | number): string | number {\n    let lowerCasedValue = value;\n    if (typeof value === 'string')\n      lowerCasedValue = value.toLowerCase()\n\n    switch (lowerCasedValue) {\n      case 6:\n        return 'Sun';\n      case 'sunday':\n        return 'Sun';\n\n      case 0:\n        return 'Mon';\n      case 'monday':\n        return 'Mon';\n\n      case 1:\n        return 'Tue';\n      case 'tuesday':\n        return 'Tue';\n\n      case 2:\n        return 'Wed';\n      case 'wednesday':\n        return 'Wed';\n\n      case 3:\n        return 'Thu';\n      case 'thursday':\n        return 'Thu';\n\n      case 4:\n        return 'Fri';\n      case 'friday':\n        return 'Fri';\n\n      case 5:\n        return 'Sat';\n      case 'saturday':\n        return 'Sat';\n    }\n    return value;\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "IAutoBehaviorSubject",
            "id": "interface-IAutoBehaviorSubject-8668317620b2a8d72976ad742fe5ecea3094425ab9cb889b4505f1669bdf5f55636b7d5fef68abfe57850c6dae2236ede88b4234c9777fae83f011691d6c6df8",
            "file": "src/app/shared/utilities/IAutoBehaviorSubject.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {BehaviorSubject} from \"rxjs\";\r\n\r\nexport interface IAutoBehaviorSubject<T> {\r\n  subject: BehaviorSubject<T>;\r\n  get value(): T;\r\n  set value(value: T);\r\n}\r\n",
            "properties": [
                {
                    "name": "subject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<T>",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": []
        },
        {
            "name": "IHasWindInformation",
            "id": "interface-IHasWindInformation-f181deb95ffcd0baa3fb3e17cd360cab337cf5f71777179b7b56497dfce70151be4a0ccd042837e712452d775f33efe3a899212b66884fdc2ee288f85918e7b9",
            "file": "src/app/shared/models/IHasWindInformation.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IHasWindInformation {\r\n  wind_mph: number;\r\n  wind_kph: number;\r\n  wind_dir: string;\r\n  time: Date;\r\n}\r\n",
            "properties": [
                {
                    "name": "time",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "wind_dir",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "wind_kph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "wind_mph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ILocationInformation",
            "id": "interface-ILocationInformation-1a8c852592b05ea0b125da6a3d880f69516444a33c42a262f238286d79aa39e368b3aa476eefacf27b7e46998624b41043eaef6ebcfad75d08cda9b8770001e5",
            "file": "src/app/shared/models/ILocationInformation.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ILocationInformation {\r\n  name: string;\r\n  region: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "region",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ILocationInformation",
            "id": "interface-ILocationInformation-05d83f35ca4f35599e8b4ba6253ef7919614aa8fecee22b879ed0874756d10d7d7ca936fcb93dd91cf19493eeb62bb34e7b6773f2a8a2cc434eb8cddad078955-1",
            "file": "src/app/shared/models/IWeatherLocationInfo.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {WeatherCondition} from \"./WeatherCondition\";\r\n\r\nexport interface IWeatherLocationInfo {\r\n  // get chanceOfRain(): number;\r\n  get date(): Date;\r\n  get temp_f(): number;\r\n  get temp_c(): number;\r\n  get humidity(): number;\r\n  get wind_mph(): number;\r\n  get wind_kph(): number;\r\n  get condition(): WeatherCondition;\r\n  get precipitationIn(): number;\r\n  get precipitationMm(): number;\r\n}\r\n\r\nexport interface IWeatherThumbnailInfo {\r\n  date: Date;\r\n  temperatureHighF: number;\r\n  temperatureLowF: number;\r\n  temperatureHighC: number;\r\n  temperatureLowC: number;\r\n  condition: WeatherCondition;\r\n  selected: boolean;\r\n}\r\n\r\nexport interface ILocationInformation {\r\n\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ILocationInformation-1"
        },
        {
            "name": "IWeatherLocationInfo",
            "id": "interface-IWeatherLocationInfo-05d83f35ca4f35599e8b4ba6253ef7919614aa8fecee22b879ed0874756d10d7d7ca936fcb93dd91cf19493eeb62bb34e7b6773f2a8a2cc434eb8cddad078955",
            "file": "src/app/shared/models/IWeatherLocationInfo.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {WeatherCondition} from \"./WeatherCondition\";\r\n\r\nexport interface IWeatherLocationInfo {\r\n  // get chanceOfRain(): number;\r\n  get date(): Date;\r\n  get temp_f(): number;\r\n  get temp_c(): number;\r\n  get humidity(): number;\r\n  get wind_mph(): number;\r\n  get wind_kph(): number;\r\n  get condition(): WeatherCondition;\r\n  get precipitationIn(): number;\r\n  get precipitationMm(): number;\r\n}\r\n\r\nexport interface IWeatherThumbnailInfo {\r\n  date: Date;\r\n  temperatureHighF: number;\r\n  temperatureLowF: number;\r\n  temperatureHighC: number;\r\n  temperatureLowC: number;\r\n  condition: WeatherCondition;\r\n  selected: boolean;\r\n}\r\n\r\nexport interface ILocationInformation {\r\n\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 171,
            "methods": []
        },
        {
            "name": "IWeatherThumbnailInfo",
            "id": "interface-IWeatherThumbnailInfo-05d83f35ca4f35599e8b4ba6253ef7919614aa8fecee22b879ed0874756d10d7d7ca936fcb93dd91cf19493eeb62bb34e7b6773f2a8a2cc434eb8cddad078955",
            "file": "src/app/shared/models/IWeatherLocationInfo.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {WeatherCondition} from \"./WeatherCondition\";\r\n\r\nexport interface IWeatherLocationInfo {\r\n  // get chanceOfRain(): number;\r\n  get date(): Date;\r\n  get temp_f(): number;\r\n  get temp_c(): number;\r\n  get humidity(): number;\r\n  get wind_mph(): number;\r\n  get wind_kph(): number;\r\n  get condition(): WeatherCondition;\r\n  get precipitationIn(): number;\r\n  get precipitationMm(): number;\r\n}\r\n\r\nexport interface IWeatherThumbnailInfo {\r\n  date: Date;\r\n  temperatureHighF: number;\r\n  temperatureLowF: number;\r\n  temperatureHighC: number;\r\n  temperatureLowC: number;\r\n  condition: WeatherCondition;\r\n  selected: boolean;\r\n}\r\n\r\nexport interface ILocationInformation {\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "condition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WeatherCondition",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "temperatureHighC",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "temperatureHighF",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "temperatureLowC",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "temperatureLowF",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "LoadingService",
            "id": "injectable-LoadingService-661b7480a05613a7303d204b363c84349c12ffc1661ccdb90aaa103daeb3ef221cd2f1a57e3c9c2afe60da90bdd0b950c12d15ae1545427dbbc7b32eddee6f33",
            "file": "src/app/shared/services/loading.service.ts",
            "properties": [
                {
                    "name": "loadingProgressBar",
                    "defaultValue": "new AutoBehaviorSubject(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadingProgressWheel",
                    "defaultValue": "new AutoBehaviorSubject(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {AutoBehaviorSubject} from \"../utilities/AutoBehaviorSubject\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  public loadingProgressWheel = new AutoBehaviorSubject(false);\n  public loadingProgressBar = new AutoBehaviorSubject(false);\n\n  constructor() { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "type": "injectable"
        },
        {
            "name": "WeatherService",
            "id": "injectable-WeatherService-57aff1694f22d66fe71b6581f8e2452bbe8ca92baba796fb4d8598d3682960bbcb1dac9202b5a8d37bce79859b136b36e218321cf9c6bb23fd812755d449e127",
            "file": "src/app/shared/modules/weather/services/weather.service.ts",
            "properties": [
                {
                    "name": "forecasts",
                    "defaultValue": "new AutoBehaviorSubject<Forecast[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "userWeatherLocations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAutoBehaviorSubject<WeatherLocationSearchResult[]>",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "weatherLocations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAutoBehaviorSubject<WeatherLocationSearchResult[]>",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methods": [
                {
                    "name": "addUserWeatherLocation",
                    "args": [
                        {
                            "name": "location",
                            "type": "WeatherLocationSearchResult",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "location",
                            "type": "WeatherLocationSearchResult",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getWeatherForecast",
                    "args": [
                        {
                            "name": "locationLookup",
                            "type": "LocationLookup",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "numOfDays",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "3"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "locationLookup",
                            "type": "LocationLookup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "numOfDays",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "3",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getWeatherForecasts",
                    "args": [
                        {
                            "name": "locationLookups",
                            "type": "LocationLookup[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "numOfDays",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "3"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "locationLookups",
                            "type": "LocationLookup[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "numOfDays",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "3",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getWeatherLocations",
                    "args": [
                        {
                            "name": "searchString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "searchString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeUserWeatherLocation",
                    "args": [
                        {
                            "name": "locationLookup",
                            "type": "LocationLookup",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "locationLookup",
                            "type": "LocationLookup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "requestCurrentWeatherForecast",
                    "args": [
                        {
                            "name": "locationLookup",
                            "type": "LocationLookup",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CurrentForecast>",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "locationLookup",
                            "type": "LocationLookup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "requestWeatherForecasts",
                    "args": [
                        {
                            "name": "locationLookup",
                            "type": "LocationLookup",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "numOfDays",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "3"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Forecast>",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "locationLookup",
                            "type": "LocationLookup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "numOfDays",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "3",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {Forecast} from \"../../../models/Forecast\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../../../../environments/environment\";\nimport {AutoBehaviorSubject} from \"../../../utilities/AutoBehaviorSubject\";\nimport {LocalStorageAutoBehaviorSubject} from \"../../../utilities/LocalStorageAutoBehaviorSubject\";\nimport {IAutoBehaviorSubject} from \"../../../utilities/IAutoBehaviorSubject\";\nimport {forkJoin, Observable} from \"rxjs\";\nimport { plainToClass } from 'class-transformer';\nimport {WeatherLocationSearchResult} from \"../../../models/WeatherLocationSearchResult\";\nimport {CurrentForecast} from \"../../../models/CurrentForecast\";\n\nexport class LocationLookup {\n  public name: string;\n  public region: string;\n\n  constructor(name: string, region: string) {\n    this.name = name;\n    this.region = region;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n  forecasts = new AutoBehaviorSubject<Forecast[]>([]);\n  userWeatherLocations: IAutoBehaviorSubject<WeatherLocationSearchResult[]>;\n  weatherLocations: IAutoBehaviorSubject<WeatherLocationSearchResult[]>;\n\n  constructor(private httpClient: HttpClient) {\n    this.userWeatherLocations = new LocalStorageAutoBehaviorSubject<WeatherLocationSearchResult[]>(\n      'user-weather-locations',\n      [])\n\n    this.weatherLocations = new AutoBehaviorSubject<WeatherLocationSearchResult[]>([\n      {\n        \"id\": 2634070,\n        \"name\": \"Portland\",\n        \"region\": \"Oregon\",\n        \"country\": \"United States of America\",\n        \"lat\": 45.52,\n        \"lon\": -122.68,\n        \"url\": \"portland-oregon-united-states-of-america\"\n      } as WeatherLocationSearchResult,\n      {\n        \"id\": 2633488,\n        \"name\": \"East Portland\",\n        \"region\": \"Oregon\",\n        \"country\": \"United States of America\",\n        \"lat\": 45.52,\n        \"lon\": -122.66,\n        \"url\": \"east-portland-oregon-united-states-of-america\"\n      } as WeatherLocationSearchResult,\n      {\n        \"id\": 2633147,\n        \"name\": \"Albina\",\n        \"region\": \"Oregon\",\n        \"country\": \"United States of America\",\n        \"lat\": 45.54,\n        \"lon\": -122.67,\n        \"url\": \"albina-oregon-united-states-of-america\"\n      } as WeatherLocationSearchResult,\n      {\n        \"id\": 2633767,\n        \"name\": \"Kings Heights\",\n        \"region\": \"Oregon\",\n        \"country\": \"United States of America\",\n        \"lat\": 45.53,\n        \"lon\": -122.71,\n        \"url\": \"kings-heights-oregon-united-states-of-america\"\n      } as WeatherLocationSearchResult\n    ])\n  }\n\n\n  public requestCurrentWeatherForecast(locationLookup: LocationLookup): Observable<CurrentForecast> {\n    const key = environment.weatherApiKey;\n    const getAlerts: \"yes\" | \"no\" = \"no\";\n    const getAqi: \"yes\" | \"no\" = \"no\";\n    const queryParams = `?key=${key}&q=${locationLookup.name}, ${locationLookup.region}&aqi=${getAqi}`;\n    return this.httpClient.get<Forecast>(`https://api.weatherapi.com/v1/current.json${queryParams}`);\n  }\n\n  public requestWeatherForecasts(locationLookup: LocationLookup, numOfDays = 3): Observable<Forecast> {\n    const key = environment.weatherApiKey;\n    const getAlerts: \"yes\" | \"no\" = \"no\";\n    const getAqi: \"yes\" | \"no\" = \"no\";\n    const queryParams = `?key=${key}&q=${locationLookup.name}, ${locationLookup.region}&days=${numOfDays}&aqi=${getAqi}&alerts=${getAlerts}`;\n    return this.httpClient.get<Forecast>(`https://api.weatherapi.com/v1/forecast.json${queryParams}`);\n  }\n\n  public getWeatherForecast(locationLookup: LocationLookup, numOfDays = 3): void {\n    this.requestWeatherForecasts(locationLookup, numOfDays)\n      .subscribe(forecast => {\n        const forecastValues = this.forecasts.value;\n        const forecastIndex = forecastValues.findIndex(z => z.location.name === forecast.location.name && z.location.region === z.location.region);\n        const newForecast = new Forecast(\n          forecast.location,\n          forecast.current,\n          forecast.forecast);\n\n        if (forecastIndex > -1) {\n          forecastValues[forecastIndex] = newForecast;\n        }\n        else {\n          forecastValues.push(newForecast);\n        }\n\n        this.forecasts.value = forecastValues;\n      });\n  }\n\n  public getWeatherForecasts(locationLookups: LocationLookup[], numOfDays = 3): void {\n    const key = environment.weatherApiKey;\n    const getAlerts: \"yes\" | \"no\" = \"no\";\n    const getAqi: \"yes\" | \"no\" = \"no\";\n\n    const requests: Observable<Forecast>[] = [];\n    for (const locationLookup of locationLookups) {\n      if (!locationLookup || !locationLookup.name || !locationLookup.region)\n        continue;\n\n      requests.push(this.requestWeatherForecasts(locationLookup, numOfDays));\n    }\n\n    forkJoin(requests)\n    .subscribe(forecasts => {\n      const newForecasts = forecasts.map(forecast => {\n        return new Forecast(\n          forecast.location,\n          forecast.current,\n          forecast.forecast);\n      })\n\n      this.forecasts.value = [...newForecasts];\n    });\n  }\n\n  public getWeatherLocations(searchString: string): void {\n    const key = environment.weatherApiKey;\n    const queryParams = `?key=${key}&q=${searchString}`;\n    this.httpClient\n      .get<WeatherLocationSearchResult[]>(`https://api.weatherapi.com/v1/search.json${queryParams}`)\n      .subscribe(locations => {\n        this.weatherLocations.value = locations;\n      });\n  }\n\n  public addUserWeatherLocation(location: WeatherLocationSearchResult): boolean {\n    let lastValue = this.userWeatherLocations.value;\n    if (!lastValue.length || lastValue.length == 0) {\n      lastValue = []\n    }\n    if (lastValue.findIndex(z => z.id === location.id) > -1) {\n      return false;\n    }\n\n    lastValue.push(location);\n    this.userWeatherLocations.value = lastValue;\n    return true;\n  }\n\n  removeUserWeatherLocation(locationLookup: LocationLookup) {\n    const validItems = [] as WeatherLocationSearchResult[];\n    this.userWeatherLocations\n      .value\n      .forEach(z => {\n        if (z.name === locationLookup.name && z.region === locationLookup.region) {\n          return;\n        }\n        validItems.push(z);\n      });\n\n    this.userWeatherLocations.value = validItems;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AdvancedViewGraphsData",
            "id": "class-AdvancedViewGraphsData-b111d4e16485aaf33524e7a2c7680048794aa04c722918bf62b074a89653afb74c328a55e99f6043fae6c669324e35aa56a5c5da9a33d21bda0a6d3d7b3b0edb",
            "file": "src/app/shared/models/AdvancedViewGraphsData.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {BasicGraphNode} from \"./BasicGraphNode\";\r\nimport {IHasWindInformation} from \"./IHasWindInformation\";\r\n\r\nexport class AdvancedViewGraphsData {\r\n  temperatures: BasicGraphNode[];\r\n  precipitationChances: BasicGraphNode[];\r\n  windDirectionInfos: IHasWindInformation[];\r\n\r\n  constructor(temperatures: BasicGraphNode[], precipitationChances: BasicGraphNode[], windDirectionInfos: IHasWindInformation[]) {\r\n    this.temperatures = temperatures;\r\n    this.precipitationChances = precipitationChances;\r\n    this.windDirectionInfos = windDirectionInfos;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "temperatures",
                        "type": "BasicGraphNode[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "precipitationChances",
                        "type": "BasicGraphNode[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "windDirectionInfos",
                        "type": "IHasWindInformation[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "temperatures",
                        "type": "BasicGraphNode[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "precipitationChances",
                        "type": "BasicGraphNode[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "windDirectionInfos",
                        "type": "IHasWindInformation[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "precipitationChances",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BasicGraphNode[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "temperatures",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BasicGraphNode[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "windDirectionInfos",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IHasWindInformation[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AdvancedWeatherCard",
            "id": "class-AdvancedWeatherCard-fc74a50e00e910cca0d9092c74a587fb93bb8f5f5440ba0c7175584d47b8e4c32aab204d32dd5070afdf6545659114737118142c0776b348636de9b49f003576",
            "file": "src/app/shared/components/home/home.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {AutoBehaviorSubject} from \"../../utilities/AutoBehaviorSubject\";\nimport {debounceTime, Subject, take, takeUntil} from \"rxjs\";\nimport {\n  Forecast\n} from \"../../models/Forecast\";\nimport {LocationLookup, WeatherService} from \"../../modules/weather/services/weather.service\";\nimport {IAutoBehaviorSubject} from \"../../utilities/IAutoBehaviorSubject\";\nimport {IWeatherLocationInfo, IWeatherThumbnailInfo} from \"../../models/IWeatherLocationInfo\";\nimport {ILocationInformation} from \"../../models/ILocationInformation\";\nimport {BasicGraphNode} from \"../../models/BasicGraphNode\";\nimport {WeatherLocationSearchResult} from \"../../models/WeatherLocationSearchResult\";\nimport {MinimumCurrentForecastInformation} from \"../../models/MinimumCurrentForecastInformation\";\nimport {CurrentForecastInformation} from \"../../models/CurrentForecastInformation\";\nimport {WeatherThumbnailInfo} from \"../../models/WeatherThumbnailInfo\";\nimport {ForecastDay} from \"../../models/ForecastDay\";\nimport {IHasWindInformation} from \"../../models/IHasWindInformation\";\nimport {Node} from \"../../models/Node\";\n\nexport class AdvancedWeatherCard {\n  currentWeatherInfo!: IWeatherLocationInfo;\n  location!: ILocationInformation;\n  forecasts!: IWeatherThumbnailInfo[];\n  temperatures!: BasicGraphNode[];\n  precipitationChances: BasicGraphNode[] = [];\n  windDirections: IHasWindInformation[] = [];\n\n  constructor(currentWeatherInfo: IWeatherLocationInfo,\n              location: ILocationInformation,\n              forecasts: IWeatherThumbnailInfo[],\n              temperatures: BasicGraphNode[],\n              precipitationChances: BasicGraphNode[],\n              windDirections: IHasWindInformation[]) {\n    this.currentWeatherInfo = currentWeatherInfo;\n    this.location = location;\n    this.forecasts = forecasts;\n    this.temperatures = temperatures;\n    this.precipitationChances = precipitationChances;\n    this.windDirections = windDirections;\n  }\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  private destroyed$ = new Subject<boolean>();\n\n  public locationSearchString = new AutoBehaviorSubject<string>(\"\");\n  public selectedSearchLocation = new AutoBehaviorSubject<WeatherLocationSearchResult | undefined>(undefined);\n\n  public userWeatherLocationCardInfos: IAutoBehaviorSubject<Forecast[]>;\n  public selectedBasicWeatherCard: Forecast | undefined = undefined;\n  public selectedAdvancedWeatherCard!: AdvancedWeatherCard;\n\n  public selectedAdvancedViewDate: Date = new Date();\n  private lastAdvancedForecast!: Forecast;\n  private _currentWeatherForSelectedLocation!: CurrentForecastInformation;\n  private _today: Date = new Date();\n\n  public get locationItems(): IAutoBehaviorSubject<WeatherLocationSearchResult[]> {\n    return this.weatherService.weatherLocations;\n  }\n\n  public get userWeatherLocations(): IAutoBehaviorSubject<WeatherLocationSearchResult[]> {\n    return this.weatherService.userWeatherLocations;\n  }\n\n  constructor(private weatherService: WeatherService) {\n    this.userWeatherLocationCardInfos = new AutoBehaviorSubject<Forecast[]>([]);\n\n    this.locationSearchString\n      .subject\n      .pipe(takeUntil(this.destroyed$), debounceTime(250))\n      .subscribe(searchString => {\n        const locationMatches = this.locationItems\n          .value\n          .filter(z => z.name.includes(searchString) || z.country.includes(searchString) || z.region.includes(searchString))\n\n        if (searchString.length < 3 || locationMatches.length > 0)\n          return;\n\n        weatherService.getWeatherLocations(searchString);\n      })\n\n    weatherService.forecasts\n      .subject\n      .subscribe(forecasts => {\n        const alreadyAdded = [] as string[];\n        const newForecasts = [] as Forecast[];\n        const currentValues = this.userWeatherLocations.value;\n        for (const forecast of forecasts) {\n          const locationKey = forecast.location.name + '-' + forecast.location.region;\n          const isAlreadyAdded = !alreadyAdded.includes(locationKey);\n          const isValidToAdd = currentValues.find(z => z.name === forecast.location.name && z.region === forecast.location.region) !== undefined;\n\n          if (isValidToAdd && isAlreadyAdded) {\n            newForecasts.push(forecast);\n            alreadyAdded.push();\n          }\n        }\n\n        this.userWeatherLocationCardInfos.value = newForecasts;\n\n        if (!this.selectedAdvancedWeatherCard) {\n          if (!this.selectedBasicWeatherCard) {\n            this.selectedBasicWeatherCard = this.userWeatherLocationCardInfos.value[0];\n          }\n          this.initSelectedAdvancedWeatherCardInfo(this.selectedBasicWeatherCard);\n        }\n      });\n  }\n\n  ngOnInit(): void {\n    if (!this.userWeatherLocations.value || this.userWeatherLocations.value?.length === 0 || !this.userWeatherLocations.value?.length)\n      return;\n\n    const locationsToLoad = this.userWeatherLocations.value?.map(z => new LocationLookup(z.name, z.region));\n    this.weatherService.getWeatherForecasts(locationsToLoad, 3);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n  }\n\n  public createLocation($event: WeatherLocationSearchResult | undefined) {\n    if (!$event)\n      return;\n\n    const added = this.weatherService.addUserWeatherLocation($event);\n    if (added)\n      this.weatherService.getWeatherForecast(new LocationLookup($event.name, $event.region), 3);\n  }\n\n  public onBasicWeatherCardClick($event: Forecast) {\n    const values = this.userWeatherLocationCardInfos.value;\n    values.forEach(z => {\n      z.selected = z === $event;\n    })\n\n    this.userWeatherLocationCardInfos.value = values;\n    this.selectedBasicWeatherCard = $event;\n\n    this.initSelectedAdvancedWeatherCardInfo($event);\n  }\n\n  public removeLocation() {\n    if (!this.selectedBasicWeatherCard)\n      return;\n\n    const locationLookup = new LocationLookup(this.selectedBasicWeatherCard.location.name, this.selectedBasicWeatherCard.location.region);\n    this.weatherService.removeUserWeatherLocation(locationLookup);\n\n    const validLocations = [] as Forecast[];\n    const currentLocations = this.userWeatherLocationCardInfos.value;\n\n    currentLocations.forEach(z => {\n      if (z.location.name === locationLookup.name && z.location.region === locationLookup.region) {\n        return;\n      }\n\n      validLocations.push(z)\n    });\n\n    this.userWeatherLocationCardInfos.value = validLocations;\n  }\n\n  public clickedOutside() {\n    const values = this.userWeatherLocationCardInfos.value;\n    values.forEach(z => {\n      z.selected = false;\n    })\n\n    this.userWeatherLocationCardInfos.value = values;\n    this.selectedBasicWeatherCard = undefined;\n  }\n\n  private initSelectedAdvancedWeatherCardInfo(incomingForecast: Forecast) {\n    if (!incomingForecast)\n      return;\n\n    this.weatherService\n      .requestWeatherForecasts(new LocationLookup(incomingForecast.location.name, incomingForecast.location.region), 7)\n      .pipe(take(1))\n      .subscribe(forecast => {\n        let forecastIndex = 0;\n        const newForecast = new Forecast(forecast.location, forecast.current, forecast.forecast);\n        const advancedViewGraphsData = Forecast.getGraphData(newForecast.forecast.forecastday, newForecast.current);\n        this.lastAdvancedForecast = forecast;\n        this.selectedAdvancedWeatherCard = new AdvancedWeatherCard(\n          newForecast.current,\n          newForecast.location,\n          newForecast.forecast.forecastday.map(z => {\n            const x = new ForecastDay(new Date(z.date), z.date_epoch, z.day, z.astro, z.hour);\n            const selected = forecastIndex === 0;\n\n            forecastIndex++;\n            return new WeatherThumbnailInfo(\n              x.condition,\n              new Date(x.date),\n              x.day.maxtemp_c,\n              x.day.maxtemp_f,\n              x.day.mintemp_c,\n              x.day.mintemp_f,\n              selected);\n          }),\n          advancedViewGraphsData.temperatures,\n          advancedViewGraphsData.precipitationChances,\n          advancedViewGraphsData.windDirectionInfos);\n\n        this._currentWeatherForSelectedLocation = newForecast.current;\n      })\n  }\n\n  onAdvancedThumbnailSelected($event: IWeatherThumbnailInfo) {\n    const date = new Date(new Date($event.date));\n    const newForecastIndex = this.lastAdvancedForecast.forecast.forecastday.findIndex(z => {\n      const x = new Date(z.date);\n      const matches = x.getUTCFullYear() === date.getUTCFullYear() &&\n                      x.getUTCMonth()    === date.getUTCMonth() &&\n                      x.getUTCDate()     === date.getUTCDate()\n      return matches;\n    });\n    const oldForecast = this.lastAdvancedForecast.forecast.forecastday[newForecastIndex];\n    const newForecast = new ForecastDay(oldForecast.date, oldForecast.date_epoch, oldForecast.day, oldForecast.astro, oldForecast.hour, true);\n\n    let newItem: IWeatherLocationInfo | undefined = undefined;\n    if (newForecastIndex > 0) {\n      console.log('none 0 day', newForecast);\n      newItem = new MinimumCurrentForecastInformation(\n        newForecast!.day.condition,\n        new Date(newForecast!.date),\n        newForecast!.humidity,\n        newForecast!.precipitationIn,\n        newForecast!.precipitationMm,\n        newForecast!.day.maxtemp_c,\n        newForecast!.day.maxtemp_f,\n        newForecast!.wind_kph,\n        newForecast!.wind_mph);\n    }\n    else if (newForecastIndex > -1) {\n      const newCurrentForecast = this._currentWeatherForSelectedLocation;\n      console.log('0 day', newCurrentForecast);\n      newItem = new MinimumCurrentForecastInformation(\n        newCurrentForecast!.condition,\n        date,\n        newCurrentForecast!.humidity,\n        newCurrentForecast!.precipitationIn,\n        newCurrentForecast!.precipitationMm,\n        newCurrentForecast!.temp_c,\n        newCurrentForecast!.temp_f,\n        newCurrentForecast!.wind_kph,\n        newCurrentForecast!.wind_mph);\n    }\n    if (!newItem)\n      return;\n\n    this.lastAdvancedForecast.date = new Date(this.lastAdvancedForecast.date);\n    const advancedViewGraphsData = Forecast.getGraphData(\n      this.lastAdvancedForecast.forecast.forecastday,\n      newItem!);\n\n    this.selectedAdvancedWeatherCard.currentWeatherInfo = newItem;\n    this.selectedAdvancedWeatherCard.temperatures = advancedViewGraphsData.temperatures;\n    this.selectedAdvancedWeatherCard.precipitationChances = advancedViewGraphsData.precipitationChances;\n    this.selectedAdvancedWeatherCard.windDirections = advancedViewGraphsData.windDirectionInfos;\n\n    console.log('new day selected', this.selectedAdvancedWeatherCard)\n    console.log('new day selected', newItem)\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "currentWeatherInfo",
                        "type": "IWeatherLocationInfo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "location",
                        "type": "ILocationInformation",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "forecasts",
                        "type": "IWeatherThumbnailInfo[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "temperatures",
                        "type": "BasicGraphNode[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "precipitationChances",
                        "type": "BasicGraphNode[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "windDirections",
                        "type": "IHasWindInformation[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "currentWeatherInfo",
                        "type": "IWeatherLocationInfo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "location",
                        "type": "ILocationInformation",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "forecasts",
                        "type": "IWeatherThumbnailInfo[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "temperatures",
                        "type": "BasicGraphNode[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "precipitationChances",
                        "type": "BasicGraphNode[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "windDirections",
                        "type": "IHasWindInformation[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "currentWeatherInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IWeatherLocationInfo",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "forecasts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IWeatherThumbnailInfo[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ILocationInformation",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "precipitationChances",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BasicGraphNode[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "temperatures",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BasicGraphNode[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "windDirections",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IHasWindInformation[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AirQuality",
            "id": "class-AirQuality-b8d7ac935af40874d41e8599eae0f22744b22ffa88218a1619bbf3755dc835b5905a37c9ab8fdd5c84954afc06e33ae3b9eea0590fc7c69e9e1b55592fa7fa82",
            "file": "src/app/shared/models/AirQuality.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class AirQuality {\r\n  co: number = 186.89999389648438;\r\n  no2: number = 19.200000762939453;\r\n  o3: number = 67.19999694824219;\r\n  so2: number = 7.599999904632568;\r\n  pm2_5: number = 12.0;\r\n  pm10: number = 15.800000190734863;\r\n  usEpaIndex: number = 1;\r\n  gbDefraIndex: number = 2;\r\n}\r\n",
            "properties": [
                {
                    "name": "co",
                    "defaultValue": "186.89999389648438",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "gbDefraIndex",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "no2",
                    "defaultValue": "19.200000762939453",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "o3",
                    "defaultValue": "67.19999694824219",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "pm10",
                    "defaultValue": "15.800000190734863",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "pm2_5",
                    "defaultValue": "12.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "so2",
                    "defaultValue": "7.599999904632568",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "usEpaIndex",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Alert",
            "id": "class-Alert-d807d8440c1fdb83131afdf974dc9eb0c15a43163a8e22fcbe890a875e916d0b435f6ea9d7b31814fb8addd4c195b9ff50f163b2956b0d5a0f76f8038701d6c5",
            "file": "src/app/shared/models/Alert.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Alert {\r\n  public readonly headline: string;\r\n  public readonly msgtype: string;\r\n  public readonly severity: string;\r\n  public readonly urgency: string;\r\n  public readonly areas: string;\r\n  public readonly category: string;\r\n  public readonly certainty: string;\r\n  public readonly event: string;\r\n  public readonly note: string;\r\n  public readonly effective: string;\r\n  public readonly expires: string;\r\n  public readonly desc: string;\r\n  public readonly instruction: string;\r\n\r\n  constructor(headline: string,\r\n              msgtype: string,\r\n              severity: string,\r\n              urgency: string,\r\n              areas: string,\r\n              category: string,\r\n              certainty: string,\r\n              event: string,\r\n              note: string,\r\n              effective: string,\r\n              expires: string,\r\n              desc: string,\r\n              instruction: string) {\r\n    this.headline = headline;\r\n    this.msgtype = msgtype;\r\n    this.severity = severity;\r\n    this.urgency = urgency;\r\n    this.areas = areas;\r\n    this.category = category;\r\n    this.certainty = certainty;\r\n    this.event = event;\r\n    this.note = note;\r\n    this.effective = effective;\r\n    this.expires = expires;\r\n    this.desc = desc;\r\n    this.instruction = instruction;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "headline",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msgtype",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "severity",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "urgency",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "areas",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "category",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "certainty",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "event",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "note",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "effective",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "expires",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "desc",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "instruction",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "headline",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msgtype",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "severity",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "urgency",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "areas",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "category",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "certainty",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "event",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "note",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "effective",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "expires",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "desc",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "instruction",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "areas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "certainty",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "desc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "effective",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "event",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "expires",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "headline",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "instruction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "msgtype",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "note",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "severity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "urgency",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AstroInformation",
            "id": "class-AstroInformation-1086622cf114f3797bff27f15400c52106de158027ae95f17609907831dad95e1327e906ee9df162b8107c7804e0d76c45b2e2833676fe00e84e8a5c1be0ffbb",
            "file": "src/app/shared/models/AstroInformation.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class AstroInformation {\r\n  sunrise: string;\r\n  sunset: string;\r\n  moonrise: string;\r\n  moonset: string;\r\n  moon_phase: string;\r\n  moon_illumination: number;\r\n\r\n  constructor(sunrise: string, sunset: string, moonrise: string, moonset: string, moon_phase: string, moon_illumination: number) {\r\n    this.sunrise = sunrise;\r\n    this.sunset = sunset;\r\n    this.moonrise = moonrise;\r\n    this.moonset = moonset;\r\n    this.moon_phase = moon_phase;\r\n    this.moon_illumination = moon_illumination;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sunrise",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sunset",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "moonrise",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "moonset",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "moon_phase",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "moon_illumination",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "sunrise",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sunset",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "moonrise",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "moonset",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "moon_phase",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "moon_illumination",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "moon_illumination",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "moon_phase",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "moonrise",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "moonset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "sunrise",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "sunset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AutoBehaviorSubject",
            "id": "class-AutoBehaviorSubject-851a0559a5f84b10243b2eadc4962caa95ca2b446b3968f61289482145f78e7813a20e1799f09db44515293adf4245b1b49d9409f8339c92a6f2a40804b1e38c",
            "file": "src/app/shared/utilities/AutoBehaviorSubject.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {BehaviorSubject} from \"rxjs\";\r\nimport {IAutoBehaviorSubject} from \"./IAutoBehaviorSubject\";\r\n\r\nexport class AutoBehaviorSubject<T> implements IAutoBehaviorSubject<T> {\r\n  private readonly _behaviorT: BehaviorSubject<T>;\r\n  public get subject(): BehaviorSubject<T> { return this._behaviorT; }\r\n  public get value(): T { return this._behaviorT.getValue(); }\r\n  public set value(value: T) { this._behaviorT.next(value); }\r\n\r\n  constructor(initialValue: T) {\r\n    this._behaviorT = new BehaviorSubject<T>(initialValue);\r\n  }\r\n}\r\n\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "initialValue",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "initialValue",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_behaviorT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<T>",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        121,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "accessors": {
                "subject": {
                    "name": "subject",
                    "getSignature": {
                        "name": "subject",
                        "type": "",
                        "returnType": "BehaviorSubject<T>",
                        "line": 6
                    }
                },
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "T",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 8,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "T",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "T",
                        "line": 7
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IAutoBehaviorSubject"
            ]
        },
        {
            "name": "BasicGraphNode",
            "id": "class-BasicGraphNode-d5ead4bb5b43ac879435b5c06de94082a6b25a37a87cd7e554b3e0a8597a36c11e221f28e5670f690bb122a7d4940456fdf88344ca4e6c73d0345cd0f5a858c4",
            "file": "src/app/shared/models/BasicGraphNode.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {Node} from \"./Node\";\r\n\r\nexport class BasicGraphNode {\r\n  name: string;\r\n  series: Node[];\r\n\r\n  constructor(name: string, series: Node[]) {\r\n    this.name = name;\r\n    this.series = series;\r\n  }\r\n}\r\n\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "series",
                        "type": "Node[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "series",
                        "type": "Node[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "series",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Node[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CurrentForecast",
            "id": "class-CurrentForecast-b45611c42e179af4394b306f7f52a8be98790c92b444e06797b9679c3cf0499b2656b8c4295824338c486077da9c8a8a82ded4dfdee457707b98c27c71ff3399",
            "file": "src/app/shared/models/CurrentForecast.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {IWeatherLocationInfo} from \"./IWeatherLocationInfo\";\r\nimport {WeatherLocation} from \"./WeatherLocation\";\r\nimport {CurrentForecastInformation} from \"./CurrentForecastInformation\";\r\nimport {WeatherCondition} from \"./WeatherCondition\";\r\n\r\nexport class CurrentForecast implements IWeatherLocationInfo {\r\n  public readonly location: WeatherLocation;\r\n  public readonly current: CurrentForecastInformation;\r\n\r\n  get condition(): WeatherCondition {\r\n    return this.current.condition;\r\n  }\r\n\r\n  set date(value: Date) {\r\n    this.current.last_updated = new Date(value);\r\n  }\r\n\r\n  get date(): Date {\r\n    return this.current.date;\r\n  }\r\n\r\n  get humidity(): number {\r\n    return this.current.humidity;\r\n  }\r\n\r\n  get precipitationIn(): number {\r\n    return this.current.precip_in;\r\n  }\r\n\r\n  get precipitationMm(): number {\r\n    return this.current.precip_mm;\r\n  }\r\n\r\n  get temp_c(): number {\r\n    return this.current.temp_c;\r\n  }\r\n\r\n  get temp_f(): number {\r\n    return this.current.temp_f;\r\n  }\r\n\r\n  get wind_kph(): number {\r\n    return this.current.wind_kph;\r\n  }\r\n\r\n  get wind_mph(): number {\r\n    return this.current.wind_mph;\r\n  }\r\n\r\n  constructor(location: WeatherLocation, current: CurrentForecastInformation) {\r\n    this.location = new WeatherLocation(\r\n      location.name,\r\n      location.region,\r\n      location.country,\r\n      location.lat,\r\n      location.lon,\r\n      location.tz_id,\r\n      location.localtime_epoch,\r\n      location.localtime\r\n    );\r\n\r\n    this.current = new CurrentForecastInformation(\r\n      current.humidity,\r\n      current.date,\r\n      current.last_updated_epoch,\r\n      current.last_updated,\r\n      current.temp_c,\r\n      current.temp_f,\r\n      current.is_day,\r\n      current.condition,\r\n      current.wind_mph,\r\n      current.wind_kph,\r\n      current.wind_degree,\r\n      current.wind_dir,\r\n      current.pressure_mb,\r\n      current.pressure_in,\r\n      current.precip_mm,\r\n      current.precip_in,\r\n      current.cloud,\r\n      current.feelslike_c,\r\n      current.feelslike_f,\r\n      current.vis_km,\r\n      current.vis_miles,\r\n      current.uv,\r\n      current.gust_mph,\r\n      current.gust_kph);\r\n\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "location",
                        "type": "WeatherLocation",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "current",
                        "type": "CurrentForecastInformation",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "location",
                        "type": "WeatherLocation",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "current",
                        "type": "CurrentForecastInformation",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "current",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CurrentForecastInformation",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WeatherLocation",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123,
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "accessors": {
                "condition": {
                    "name": "condition",
                    "getSignature": {
                        "name": "condition",
                        "type": "",
                        "returnType": "WeatherCondition",
                        "line": 10
                    }
                },
                "date": {
                    "name": "date",
                    "setSignature": {
                        "name": "date",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "Date",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 14,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "Date",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "date",
                        "type": "",
                        "returnType": "Date",
                        "line": 18
                    }
                },
                "humidity": {
                    "name": "humidity",
                    "getSignature": {
                        "name": "humidity",
                        "type": "number",
                        "returnType": "number",
                        "line": 22
                    }
                },
                "precipitationIn": {
                    "name": "precipitationIn",
                    "getSignature": {
                        "name": "precipitationIn",
                        "type": "number",
                        "returnType": "number",
                        "line": 26
                    }
                },
                "precipitationMm": {
                    "name": "precipitationMm",
                    "getSignature": {
                        "name": "precipitationMm",
                        "type": "number",
                        "returnType": "number",
                        "line": 30
                    }
                },
                "temp_c": {
                    "name": "temp_c",
                    "getSignature": {
                        "name": "temp_c",
                        "type": "number",
                        "returnType": "number",
                        "line": 34
                    }
                },
                "temp_f": {
                    "name": "temp_f",
                    "getSignature": {
                        "name": "temp_f",
                        "type": "number",
                        "returnType": "number",
                        "line": 38
                    }
                },
                "wind_kph": {
                    "name": "wind_kph",
                    "getSignature": {
                        "name": "wind_kph",
                        "type": "number",
                        "returnType": "number",
                        "line": 42
                    }
                },
                "wind_mph": {
                    "name": "wind_mph",
                    "getSignature": {
                        "name": "wind_mph",
                        "type": "number",
                        "returnType": "number",
                        "line": 46
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IWeatherLocationInfo"
            ]
        },
        {
            "name": "CurrentForecastInformation",
            "id": "class-CurrentForecastInformation-e68a69dcc6928fcc5997592285eff1eba846775b5d0fb52364dc06133cfdd9e19bd7467e8aa7a31b1781318c58fe95b551b96ed6dc6e91d2329e4433ba3b5558",
            "file": "src/app/shared/models/CurrentForecastInformation.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {IWeatherLocationInfo} from \"./IWeatherLocationInfo\";\r\nimport {WeatherCondition} from \"./WeatherCondition\";\r\n\r\nexport class CurrentForecastInformation implements IWeatherLocationInfo {\r\n  last_updated_epoch: number = 1659195000;\r\n  last_updated: Date;\r\n  temp_c: number = 21.1;\r\n  temp_f: number = 70.0;\r\n  is_day: number = 1;\r\n  condition: WeatherCondition;\r\n  wind_mph: number = 2.2;\r\n  wind_kph: number = 3.6;\r\n  wind_degree: number = 10;\r\n  wind_dir: string = \"N\";\r\n  pressure_mb: number = 1012.0;\r\n  pressure_in: number = 29.88;\r\n  precip_mm: number = 0.0;\r\n  precip_in: number = 0.0;\r\n  humidity: number = 76;\r\n  cloud: number = 0;\r\n  feelslike_c: number = 21.1;\r\n  feelslike_f: number = 70.0;\r\n  vis_km: number = 16.0;\r\n  vis_miles: number = 9.0;\r\n  uv: number = 5.0;\r\n  gust_mph: number = 4.3;\r\n  gust_kph: number = 6.8;\r\n\r\n  get precipitationIn(): number {\r\n    return this.precip_in;\r\n  }\r\n\r\n  get precipitationMm(): number {\r\n    return this.precip_mm;\r\n  }\r\n\r\n  get date(): Date {\r\n    return this.last_updated;\r\n  }\r\n\r\n  constructor(\r\n    humidity: number,\r\n    date: Date,\r\n    last_updated_epoch: number,\r\n    last_updated: Date,\r\n    temp_c: number,\r\n    temp_f: number,\r\n    is_day: number,\r\n    condition: WeatherCondition,\r\n    wind_mph: number,\r\n    wind_kph: number,\r\n    wind_degree: number,\r\n    wind_dir: string,\r\n    pressure_mb: number,\r\n    pressure_in: number,\r\n    precip_mm: number,\r\n    precip_in: number,\r\n    cloud: number,\r\n    feelslike_c: number,\r\n    feelslike_f: number,\r\n    vis_km: number,\r\n    vis_miles: number,\r\n    uv: number,\r\n    gust_mph: number,\r\n    gust_kph: number) {\r\n    this.last_updated_epoch = last_updated_epoch;\r\n    this.last_updated = new Date(last_updated);\r\n    this.temp_c = temp_c;\r\n    this.temp_f = temp_f;\r\n    this.is_day = is_day;\r\n    this.condition = condition;\r\n    this.wind_mph = wind_mph;\r\n    this.wind_kph = wind_kph;\r\n    this.wind_degree = wind_degree;\r\n    this.wind_dir = wind_dir;\r\n    this.pressure_mb = pressure_mb;\r\n    this.pressure_in = pressure_in;\r\n    this.precip_mm = precip_mm;\r\n    this.precip_in = precip_in;\r\n    this.humidity = humidity;\r\n    this.cloud = cloud;\r\n    this.feelslike_c = feelslike_c;\r\n    this.feelslike_f = feelslike_f;\r\n    this.vis_km = vis_km;\r\n    this.vis_miles = vis_miles;\r\n    this.uv = uv;\r\n    this.gust_mph = gust_mph;\r\n    this.gust_kph = gust_kph;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "humidity",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "date",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "last_updated_epoch",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "last_updated",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "temp_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "temp_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "is_day",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "condition",
                        "type": "WeatherCondition",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "wind_mph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "wind_kph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "wind_degree",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "wind_dir",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pressure_mb",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pressure_in",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "precip_mm",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "precip_in",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cloud",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "feelslike_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "feelslike_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "vis_km",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "vis_miles",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "uv",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "gust_mph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "gust_kph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "humidity",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "date",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "last_updated_epoch",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "last_updated",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "temp_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "temp_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "is_day",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "condition",
                        "type": "WeatherCondition",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "wind_mph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "wind_kph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "wind_degree",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "wind_dir",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pressure_mb",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pressure_in",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "precip_mm",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "precip_in",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cloud",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "feelslike_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "feelslike_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "vis_km",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "vis_miles",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "uv",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "gust_mph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "gust_kph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "cloud",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "condition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WeatherCondition",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "feelslike_c",
                    "defaultValue": "21.1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "feelslike_f",
                    "defaultValue": "70.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "gust_kph",
                    "defaultValue": "6.8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "gust_mph",
                    "defaultValue": "4.3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "humidity",
                    "defaultValue": "76",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "is_day",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "last_updated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "last_updated_epoch",
                    "defaultValue": "1659195000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "precip_in",
                    "defaultValue": "0.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "precip_mm",
                    "defaultValue": "0.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "pressure_in",
                    "defaultValue": "29.88",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "pressure_mb",
                    "defaultValue": "1012.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "temp_c",
                    "defaultValue": "21.1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "temp_f",
                    "defaultValue": "70.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "uv",
                    "defaultValue": "5.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "vis_km",
                    "defaultValue": "16.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "vis_miles",
                    "defaultValue": "9.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "wind_degree",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "wind_dir",
                    "defaultValue": "\"N\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "wind_kph",
                    "defaultValue": "3.6",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "wind_mph",
                    "defaultValue": "2.2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "accessors": {
                "precipitationIn": {
                    "name": "precipitationIn",
                    "getSignature": {
                        "name": "precipitationIn",
                        "type": "number",
                        "returnType": "number",
                        "line": 29
                    }
                },
                "precipitationMm": {
                    "name": "precipitationMm",
                    "getSignature": {
                        "name": "precipitationMm",
                        "type": "number",
                        "returnType": "number",
                        "line": 33
                    }
                },
                "date": {
                    "name": "date",
                    "getSignature": {
                        "name": "date",
                        "type": "",
                        "returnType": "Date",
                        "line": 37
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IWeatherLocationInfo"
            ]
        },
        {
            "name": "DayForecastInformation",
            "id": "class-DayForecastInformation-2acf9603d2de191fc16b9b1aedfa79b749bde9996bb1624a82565219dc5a18e815d6ad6a447b32ad72ecb82c215c00dae42f36f16d53993b8ba219dad5af27a6",
            "file": "src/app/shared/models/DayForecastInformation.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {WeatherCondition} from \"./WeatherCondition\";\r\n\r\nexport class DayForecastInformation {\r\n  maxtemp_c: number = 39.9;\r\n  maxtemp_f: number = 103.8;\r\n  mintemp_c: number = 17.5;\r\n  mintemp_f: number = 63.5;\r\n  avgtemp_c: number = 27.6;\r\n  avgtemp_f: number = 81.7;\r\n  maxwind_mph: number = 10.3;\r\n  maxwind_kph: number = 16.6;\r\n  totalprecip_mm: number = 0.0;\r\n  totalprecip_in: number = 0.0;\r\n  avgvis_km: number = 10.0;\r\n  avgvis_miles: number = 6.0;\r\n  avghumidity: number = 51.0;\r\n  daily_will_it_rain: number = 0;\r\n  daily_chance_of_rain: number = 0;\r\n  daily_will_it_snow: number = 0;\r\n  daily_chance_of_snow: number = 0;\r\n  condition: WeatherCondition;\r\n  uv: number = 7.0;\r\n\r\n  constructor(\r\n    maxtemp_c: number,\r\n    maxtemp_f: number,\r\n    mintemp_c: number,\r\n    mintemp_f: number,\r\n    avgtemp_c: number,\r\n    avgtemp_f: number,\r\n    maxwind_mph: number,\r\n    maxwind_kph: number,\r\n    totalprecip_mm: number,\r\n    totalprecip_in: number,\r\n    avgvis_km: number,\r\n    avgvis_miles: number,\r\n    avghumidity: number,\r\n    daily_will_it_rain: number,\r\n    daily_chance_of_rain: number,\r\n    daily_will_it_snow: number,\r\n    daily_chance_of_snow: number,\r\n    condition: WeatherCondition,\r\n    uv: number) {\r\n    this.maxtemp_c = maxtemp_c;\r\n    this.maxtemp_f = maxtemp_f;\r\n    this.mintemp_c = mintemp_c;\r\n    this.mintemp_f = mintemp_f;\r\n    this.avgtemp_c = avgtemp_c;\r\n    this.avgtemp_f = avgtemp_f;\r\n    this.maxwind_mph = maxwind_mph;\r\n    this.maxwind_kph = maxwind_kph;\r\n    this.totalprecip_mm = totalprecip_mm;\r\n    this.totalprecip_in = totalprecip_in;\r\n    this.avgvis_km = avgvis_km;\r\n    this.avgvis_miles = avgvis_miles;\r\n    this.avghumidity = avghumidity;\r\n    this.daily_will_it_rain = daily_will_it_rain;\r\n    this.daily_chance_of_rain = daily_chance_of_rain;\r\n    this.daily_will_it_snow = daily_will_it_snow;\r\n    this.daily_chance_of_snow = daily_chance_of_snow;\r\n    this.condition = condition;\r\n    this.uv = uv;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "maxtemp_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "maxtemp_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mintemp_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "mintemp_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "avgtemp_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "avgtemp_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "maxwind_mph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "maxwind_kph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "totalprecip_mm",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "totalprecip_in",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "avgvis_km",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "avgvis_miles",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "avghumidity",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "daily_will_it_rain",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "daily_chance_of_rain",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "daily_will_it_snow",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "daily_chance_of_snow",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "condition",
                        "type": "WeatherCondition",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "uv",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "maxtemp_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "maxtemp_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mintemp_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "mintemp_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "avgtemp_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "avgtemp_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "maxwind_mph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "maxwind_kph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "totalprecip_mm",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "totalprecip_in",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "avgvis_km",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "avgvis_miles",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "avghumidity",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "daily_will_it_rain",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "daily_chance_of_rain",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "daily_will_it_snow",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "daily_chance_of_snow",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "condition",
                        "type": "WeatherCondition",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "uv",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "avghumidity",
                    "defaultValue": "51.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "avgtemp_c",
                    "defaultValue": "27.6",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "avgtemp_f",
                    "defaultValue": "81.7",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "avgvis_km",
                    "defaultValue": "10.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "avgvis_miles",
                    "defaultValue": "6.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "condition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WeatherCondition",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "daily_chance_of_rain",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "daily_chance_of_snow",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "daily_will_it_rain",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "daily_will_it_snow",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "maxtemp_c",
                    "defaultValue": "39.9",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "maxtemp_f",
                    "defaultValue": "103.8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "maxwind_kph",
                    "defaultValue": "16.6",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "maxwind_mph",
                    "defaultValue": "10.3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "mintemp_c",
                    "defaultValue": "17.5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "mintemp_f",
                    "defaultValue": "63.5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "totalprecip_in",
                    "defaultValue": "0.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "totalprecip_mm",
                    "defaultValue": "0.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "uv",
                    "defaultValue": "7.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Forecast",
            "id": "class-Forecast-dcd4db7a7a20dd6406a9d95e3248c2a381e0a99103fb3fa7ba2421a3353e3965d221303eb94fae6cc51c911d70b88c786544ac195016fb95f15e32f6ec0258f8",
            "file": "src/app/shared/models/Forecast.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {CurrentForecast} from \"./CurrentForecast\";\r\nimport {Forecasts} from \"./Forecasts\";\r\nimport {WeatherLocation} from \"./WeatherLocation\";\r\nimport {CurrentForecastInformation} from \"./CurrentForecastInformation\";\r\nimport {ForecastDay} from \"./ForecastDay\";\r\nimport {IWeatherLocationInfo} from \"./IWeatherLocationInfo\";\r\nimport {AdvancedViewGraphsData} from \"./AdvancedViewGraphsData\";\r\nimport {IHasWindInformation} from \"./IHasWindInformation\";\r\nimport {Node} from \"./Node\";\r\nimport {BasicGraphNode} from \"./BasicGraphNode\";\r\n\r\nexport class Forecast extends CurrentForecast {\r\n  public readonly forecast: Forecasts;\r\n  public selected = false;\r\n\r\n  constructor(location: WeatherLocation, current: CurrentForecastInformation, forecast: Forecasts, selected: boolean = false) {\r\n    super(location, current);\r\n    this.forecast = new Forecasts(forecast.forecastday);\r\n    this.selected = selected;\r\n  }\r\n\r\n  public static getGraphData(forecastday: ForecastDay[], current: IWeatherLocationInfo): AdvancedViewGraphsData  {\r\n    const todaysForecast = forecastday.find(z => {\r\n      const date = new Date(z.date);\r\n      return date.getFullYear() === current.date.getFullYear() &&\r\n             date.getMonth()    === current.date.getMonth()    &&\r\n             date.getDate()     === current.date.getDate()\r\n    });\r\n\r\n    let hourIndex = 0;\r\n    let fakeRainChance = 0;\r\n\r\n    const returnTemperatureSeries: Node[] = [];\r\n    const returnPrecipitationSeries: Node[] = [];\r\n    const windDirectionData: IHasWindInformation[] = [];\r\n\r\n    for (const hour of todaysForecast!.hour) {\r\n      if (hourIndex % 3 === 0) {\r\n        hour.time = new Date(hour.time);\r\n        returnTemperatureSeries.push(new Node(hour.temp_f, hour.time));\r\n        const precipitationChance = hour.chance_of_rain === 0 || !hour.chance_of_rain ? hour.chance_of_snow : hour.chance_of_rain;\r\n        returnPrecipitationSeries.push(new Node(precipitationChance, new Date(\r\n          hour.time.getFullYear(),\r\n          hour.time.getMonth(),\r\n          hour.time.getDate(),\r\n          hour.time.getHours(),\r\n          hour.time.getMinutes(),\r\n          hour.time.getSeconds(),\r\n          hour.time.getMilliseconds()\r\n        )));\r\n\r\n        windDirectionData.push({\r\n          wind_mph: hour.wind_mph,\r\n          wind_kph: hour.wind_kph,\r\n          wind_dir: hour.wind_dir,\r\n          time: hour.time\r\n        } as IHasWindInformation);\r\n        fakeRainChance++;\r\n      }\r\n\r\n      hourIndex++;\r\n    }\r\n\r\n    return new AdvancedViewGraphsData(\r\n      [new BasicGraphNode(\"\", returnTemperatureSeries)],\r\n      [new BasicGraphNode(\"test\", returnPrecipitationSeries)],\r\n      windDirectionData);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "location",
                        "type": "WeatherLocation",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "current",
                        "type": "CurrentForecastInformation",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "forecast",
                        "type": "Forecasts",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "selected",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "false"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "location",
                        "type": "WeatherLocation",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "current",
                        "type": "CurrentForecastInformation",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "forecast",
                        "type": "Forecasts",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "selected",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "false",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "forecast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Forecasts",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123,
                        144
                    ]
                },
                {
                    "name": "selected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "current",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CurrentForecastInformation",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123,
                        144
                    ],
                    "inheritance": {
                        "file": "CurrentForecast"
                    }
                },
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WeatherLocation",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123,
                        144
                    ],
                    "inheritance": {
                        "file": "CurrentForecast"
                    }
                }
            ],
            "methods": [
                {
                    "name": "getGraphData",
                    "args": [
                        {
                            "name": "forecastday",
                            "type": "ForecastDay[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "current",
                            "type": "IWeatherLocationInfo",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AdvancedViewGraphsData",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "forecastday",
                            "type": "ForecastDay[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "current",
                            "type": "IWeatherLocationInfo",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "CurrentForecast",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ForecastDay",
            "id": "class-ForecastDay-ae2056cc5ed9b899c339d54901f53ce8a8d0a557e54f569c9a244ee1a7f363cfe4babcc72bb867eb971a7af0f62d250f1cd471ce731efe4b62913285dc9efcdc",
            "file": "src/app/shared/models/ForecastDay.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {IWeatherLocationInfo, IWeatherThumbnailInfo} from \"./IWeatherLocationInfo\";\r\nimport {DayForecastInformation} from \"./DayForecastInformation\";\r\nimport {AstroInformation} from \"./AstroInformation\";\r\nimport {HourForecastInformation} from \"./HourForecastInformation\";\r\nimport {WeatherCondition} from \"./WeatherCondition\";\r\n\r\nexport class ForecastDay implements IWeatherLocationInfo, IWeatherThumbnailInfo {\r\n  date: Date;\r\n  date_epoch: number;\r\n  day: DayForecastInformation;\r\n  astro: AstroInformation;\r\n  hour: HourForecastInformation[];\r\n  selected: boolean\r\n\r\n  constructor(date: Date,\r\n              date_epoch: number,\r\n              day: DayForecastInformation,\r\n              astro: AstroInformation,\r\n              hour: HourForecastInformation[],\r\n              selected = false) {\r\n    this.selected = selected;\r\n    this.date = new Date(date);\r\n    this.date_epoch = date_epoch;\r\n\r\n    this.day = new DayForecastInformation(\r\n      day.maxtemp_c,\r\n      day.maxtemp_f,\r\n      day.mintemp_c,\r\n      day.mintemp_f,\r\n      day.avgtemp_c,\r\n      day.avgtemp_f,\r\n      day.maxwind_mph,\r\n      day.maxwind_kph,\r\n      day.totalprecip_mm,\r\n      day.totalprecip_in,\r\n      day.avgvis_km,\r\n      day.avgvis_miles,\r\n      day.avghumidity,\r\n      day.daily_will_it_rain,\r\n      day.daily_chance_of_rain,\r\n      day.daily_will_it_snow,\r\n      day.daily_chance_of_snow,\r\n      day.condition,\r\n      day.uv\r\n    );\r\n\r\n    this.astro = astro;\r\n    this.hour = hour.map(z => new HourForecastInformation(\r\n      z.time_epoch,\r\n      z.time,\r\n      z.temp_c,\r\n      z.temp_f,\r\n      z.is_day,\r\n      z.condition,\r\n      z.wind_mph,\r\n      z.wind_kph,\r\n      z.wind_degree,\r\n      z.wind_dir,\r\n      z.pressure_mb,\r\n      z.pressure_in,\r\n      z.precip_mm,\r\n      z.precip_in,\r\n      z.humidity,\r\n      z.cloud,\r\n      z.feelslike_c,\r\n      z.feelslike_f,\r\n      z.windchill_c,\r\n      z.windchill_f,\r\n      z.heatindex_c,\r\n      z.heatindex_f,\r\n      z.dewpoint_c,\r\n      z.dewpoint_f,\r\n      z.will_it_rain,\r\n      z.chance_of_rain,\r\n      z.will_it_snow,\r\n      z.chance_of_snow,\r\n      z.vis_km,\r\n      z.vis_miles,\r\n      z.gust_mph,\r\n      z.gust_kph,\r\n      z.uv,\r\n      z.air_quality,\r\n      new Date(z.date)\r\n    ));\r\n  }\r\n\r\n  get condition(): WeatherCondition {\r\n    return this.day.condition;\r\n  }\r\n\r\n  get humidity(): number {\r\n    return this.day.avghumidity;\r\n  }\r\n\r\n  get temp_c(): number {\r\n    return this.day.avgtemp_c;\r\n  }\r\n\r\n  get temp_f(): number {\r\n    return this.day.avgtemp_f;\r\n  }\r\n\r\n  get temperatureHighF(): number {\r\n    return this.day.maxtemp_f;\r\n  }\r\n\r\n  get temperatureLowF(): number {\r\n    return this.day.mintemp_f;\r\n  }\r\n\r\n  get temperatureHighC(): number {\r\n    return this.day.maxtemp_c;\r\n  }\r\n\r\n  get temperatureLowC(): number {\r\n    return this.day.mintemp_c;\r\n  }\r\n\r\n  get wind_kph(): number {\r\n    return this.day.maxwind_kph;\r\n  }\r\n\r\n  get wind_mph(): number {\r\n    return this.day.maxwind_mph;\r\n  }\r\n\r\n  get precipitationIn(): number {\r\n    return this.day.totalprecip_in;\r\n  }\r\n\r\n  get precipitationMm(): number {\r\n    return this.day.totalprecip_mm;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "date",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "date_epoch",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "day",
                        "type": "DayForecastInformation",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "astro",
                        "type": "AstroInformation",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "hour",
                        "type": "HourForecastInformation[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "selected",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "false"
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "date",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "date_epoch",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "day",
                        "type": "DayForecastInformation",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "astro",
                        "type": "AstroInformation",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "hour",
                        "type": "HourForecastInformation[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "selected",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "false",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "astro",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AstroInformation",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "date_epoch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "day",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DayForecastInformation",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "hour",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HourForecastInformation[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "accessors": {
                "condition": {
                    "name": "condition",
                    "getSignature": {
                        "name": "condition",
                        "type": "",
                        "returnType": "WeatherCondition",
                        "line": 87
                    }
                },
                "humidity": {
                    "name": "humidity",
                    "getSignature": {
                        "name": "humidity",
                        "type": "number",
                        "returnType": "number",
                        "line": 91
                    }
                },
                "temp_c": {
                    "name": "temp_c",
                    "getSignature": {
                        "name": "temp_c",
                        "type": "number",
                        "returnType": "number",
                        "line": 95
                    }
                },
                "temp_f": {
                    "name": "temp_f",
                    "getSignature": {
                        "name": "temp_f",
                        "type": "number",
                        "returnType": "number",
                        "line": 99
                    }
                },
                "temperatureHighF": {
                    "name": "temperatureHighF",
                    "getSignature": {
                        "name": "temperatureHighF",
                        "type": "number",
                        "returnType": "number",
                        "line": 103
                    }
                },
                "temperatureLowF": {
                    "name": "temperatureLowF",
                    "getSignature": {
                        "name": "temperatureLowF",
                        "type": "number",
                        "returnType": "number",
                        "line": 107
                    }
                },
                "temperatureHighC": {
                    "name": "temperatureHighC",
                    "getSignature": {
                        "name": "temperatureHighC",
                        "type": "number",
                        "returnType": "number",
                        "line": 111
                    }
                },
                "temperatureLowC": {
                    "name": "temperatureLowC",
                    "getSignature": {
                        "name": "temperatureLowC",
                        "type": "number",
                        "returnType": "number",
                        "line": 115
                    }
                },
                "wind_kph": {
                    "name": "wind_kph",
                    "getSignature": {
                        "name": "wind_kph",
                        "type": "number",
                        "returnType": "number",
                        "line": 119
                    }
                },
                "wind_mph": {
                    "name": "wind_mph",
                    "getSignature": {
                        "name": "wind_mph",
                        "type": "number",
                        "returnType": "number",
                        "line": 123
                    }
                },
                "precipitationIn": {
                    "name": "precipitationIn",
                    "getSignature": {
                        "name": "precipitationIn",
                        "type": "number",
                        "returnType": "number",
                        "line": 127
                    }
                },
                "precipitationMm": {
                    "name": "precipitationMm",
                    "getSignature": {
                        "name": "precipitationMm",
                        "type": "number",
                        "returnType": "number",
                        "line": 131
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IWeatherLocationInfo",
                "IWeatherThumbnailInfo"
            ]
        },
        {
            "name": "Forecasts",
            "id": "class-Forecasts-7271136c96033c6f0dadc27941dbf978962dddaf9a7b8a474cab6351de6224ac3353fbb8fbf13513fd30260b7e111534b65802d568b50c4dd1bebe87e395fd8e",
            "file": "src/app/shared/models/Forecasts.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {ForecastDay} from \"./ForecastDay\";\r\n\r\nexport class Forecasts {\r\n  forecastday: ForecastDay[]\r\n\r\n  constructor(forecast: ForecastDay[]) {\r\n    this.forecastday = forecast.map(z => new ForecastDay(z.date, z.date_epoch, z.day, z.astro, z.hour));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "forecast",
                        "type": "ForecastDay[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "forecast",
                        "type": "ForecastDay[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "forecastday",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ForecastDay[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "HourForecastInformation",
            "id": "class-HourForecastInformation-57865b1884119f2e9a08c33c303b5fe3ada8e2a037b2e339f822035ce5fd2e7be6afa4b88e65dd2d375f69453bf569798958841546b0f6f0c9383ac6db5e7cf0",
            "file": "src/app/shared/models/HourForecastInformation.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {IWeatherLocationInfo} from \"./IWeatherLocationInfo\";\r\nimport {WeatherCondition} from \"./WeatherCondition\";\r\nimport {AirQuality} from \"./AirQuality\";\r\nimport {IHasWindInformation} from \"./IHasWindInformation\";\r\n\r\nexport class HourForecastInformation implements IHasWindInformation, IWeatherLocationInfo {\r\n  time_epoch: number = 1659135600;\r\n  time: Date = new Date(\"2022-07-30 00:00\");\r\n  temp_c: number = 18.8;\r\n  temp_f: number = 65.8;\r\n  is_day: number = 0;\r\n  condition: WeatherCondition = {\r\n    \"text\": \"Clear\",\r\n    \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n    \"code\": 1000\r\n  } as WeatherCondition;\r\n  wind_mph: number = 8.1;\r\n  wind_kph: number = 13.0;\r\n  wind_degree: number = 188;\r\n  wind_dir: string = \"S\";\r\n  pressure_mb: number = 1019.0;\r\n  pressure_in: number = 30.09;\r\n  precip_mm: number = 0.0;\r\n  precip_in: number = 0.0;\r\n  humidity: number = 57;\r\n  cloud: number = 20;\r\n  feelslike_c: number = 18.8;\r\n  feelslike_f: number = 65.8;\r\n  windchill_c: number = 18.8;\r\n  windchill_f: number = 65.8;\r\n  heatindex_c: number = 18.8;\r\n  heatindex_f: number = 65.8;\r\n  dewpoint_c: number = 10.1;\r\n  dewpoint_f: number = 50.2;\r\n  will_it_rain: number = 0;\r\n  chance_of_rain: number = 0;\r\n  will_it_snow: number = 0;\r\n  chance_of_snow: number = 0;\r\n  vis_km: number = 10.0;\r\n  vis_miles: number = 6.0;\r\n  gust_mph: number = 11.9;\r\n  gust_kph: number = 19.1;\r\n  uv: number = 1.0;\r\n  air_quality: AirQuality = {\r\n    co: 190.3000030517578,\r\n    no2: 19.399999618530273,\r\n    o3: 76.5,\r\n    so2: 8.399999618530273,\r\n    pm2_5: 11.199999809265137,\r\n    pm10: 15.5,\r\n    usEpaIndex: 1,\r\n    gbDefraIndex: 1\r\n  } as AirQuality;\r\n  date: Date;\r\n\r\n  get precipitationIn(): number {\r\n    return this.precip_in;\r\n  }\r\n\r\n  get precipitationMm(): number {\r\n    return this.precip_mm;\r\n  }\r\n\r\n  get chanceOfRain(): number {\r\n    return this.chance_of_rain;\r\n  }\r\n\r\n  constructor(time_epoch: number, time: Date, temp_c: number, temp_f: number, is_day: number, condition: WeatherCondition, wind_mph: number, wind_kph: number, wind_degree: number, wind_dir: string, pressure_mb: number, pressure_in: number, precip_mm: number, precip_in: number, humidity: number, cloud: number, feelslike_c: number, feelslike_f: number, windchill_c: number, windchill_f: number, heatindex_c: number, heatindex_f: number, dewpoint_c: number, dewpoint_f: number, will_it_rain: number, chance_of_rain: number, will_it_snow: number, chance_of_snow: number, vis_km: number, vis_miles: number, gust_mph: number, gust_kph: number, uv: number, air_quality: AirQuality, date: Date) {\r\n    this.time_epoch = time_epoch;\r\n    this.time = new Date(time);\r\n    this.temp_c = temp_c;\r\n    this.temp_f = temp_f;\r\n    this.is_day = is_day;\r\n    this.condition = condition;\r\n    this.wind_mph = wind_mph;\r\n    this.wind_kph = wind_kph;\r\n    this.wind_degree = wind_degree;\r\n    this.wind_dir = wind_dir;\r\n    this.pressure_mb = pressure_mb;\r\n    this.pressure_in = pressure_in;\r\n    this.precip_mm = precip_mm;\r\n    this.precip_in = precip_in;\r\n    this.humidity = humidity;\r\n    this.cloud = cloud;\r\n    this.feelslike_c = feelslike_c;\r\n    this.feelslike_f = feelslike_f;\r\n    this.windchill_c = windchill_c;\r\n    this.windchill_f = windchill_f;\r\n    this.heatindex_c = heatindex_c;\r\n    this.heatindex_f = heatindex_f;\r\n    this.dewpoint_c = dewpoint_c;\r\n    this.dewpoint_f = dewpoint_f;\r\n    this.will_it_rain = will_it_rain;\r\n    this.chance_of_rain = chance_of_rain;\r\n    this.will_it_snow = will_it_snow;\r\n    this.chance_of_snow = chance_of_snow;\r\n    this.vis_km = vis_km;\r\n    this.vis_miles = vis_miles;\r\n    this.gust_mph = gust_mph;\r\n    this.gust_kph = gust_kph;\r\n    this.uv = uv;\r\n    this.air_quality = air_quality;\r\n    this.date = new Date(date);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "time_epoch",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "time",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "temp_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "temp_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "is_day",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "condition",
                        "type": "WeatherCondition",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "wind_mph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "wind_kph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "wind_degree",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "wind_dir",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pressure_mb",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pressure_in",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "precip_mm",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "precip_in",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "humidity",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cloud",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "feelslike_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "feelslike_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "windchill_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "windchill_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "heatindex_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "heatindex_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dewpoint_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dewpoint_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "will_it_rain",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "chance_of_rain",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "will_it_snow",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "chance_of_snow",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "vis_km",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "vis_miles",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "gust_mph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "gust_kph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "uv",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "air_quality",
                        "type": "AirQuality",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "date",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 66,
                "jsdoctags": [
                    {
                        "name": "time_epoch",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "time",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "temp_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "temp_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "is_day",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "condition",
                        "type": "WeatherCondition",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "wind_mph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "wind_kph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "wind_degree",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "wind_dir",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pressure_mb",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pressure_in",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "precip_mm",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "precip_in",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "humidity",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cloud",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "feelslike_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "feelslike_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "windchill_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "windchill_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "heatindex_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "heatindex_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dewpoint_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dewpoint_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "will_it_rain",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "chance_of_rain",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "will_it_snow",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "chance_of_snow",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "vis_km",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "vis_miles",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "gust_mph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "gust_kph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "uv",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "air_quality",
                        "type": "AirQuality",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "date",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "air_quality",
                    "defaultValue": "{\r\n    co: 190.3000030517578,\r\n    no2: 19.399999618530273,\r\n    o3: 76.5,\r\n    so2: 8.399999618530273,\r\n    pm2_5: 11.199999809265137,\r\n    pm10: 15.5,\r\n    usEpaIndex: 1,\r\n    gbDefraIndex: 1\r\n  } as AirQuality",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AirQuality",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "chance_of_rain",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "chance_of_snow",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "cloud",
                    "defaultValue": "20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "condition",
                    "defaultValue": "{\r\n    \"text\": \"Clear\",\r\n    \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n    \"code\": 1000\r\n  } as WeatherCondition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WeatherCondition",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "dewpoint_c",
                    "defaultValue": "10.1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "dewpoint_f",
                    "defaultValue": "50.2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "feelslike_c",
                    "defaultValue": "18.8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "feelslike_f",
                    "defaultValue": "65.8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "gust_kph",
                    "defaultValue": "19.1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "gust_mph",
                    "defaultValue": "11.9",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "heatindex_c",
                    "defaultValue": "18.8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "heatindex_f",
                    "defaultValue": "65.8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "humidity",
                    "defaultValue": "57",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "is_day",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "precip_in",
                    "defaultValue": "0.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "precip_mm",
                    "defaultValue": "0.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "pressure_in",
                    "defaultValue": "30.09",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "pressure_mb",
                    "defaultValue": "1019.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "temp_c",
                    "defaultValue": "18.8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "temp_f",
                    "defaultValue": "65.8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "time",
                    "defaultValue": "new Date(\"2022-07-30 00:00\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "time_epoch",
                    "defaultValue": "1659135600",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "uv",
                    "defaultValue": "1.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "vis_km",
                    "defaultValue": "10.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "vis_miles",
                    "defaultValue": "6.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "will_it_rain",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "will_it_snow",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "wind_degree",
                    "defaultValue": "188",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "wind_dir",
                    "defaultValue": "\"S\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "wind_kph",
                    "defaultValue": "13.0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "wind_mph",
                    "defaultValue": "8.1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "windchill_c",
                    "defaultValue": "18.8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "windchill_f",
                    "defaultValue": "65.8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "accessors": {
                "precipitationIn": {
                    "name": "precipitationIn",
                    "getSignature": {
                        "name": "precipitationIn",
                        "type": "number",
                        "returnType": "number",
                        "line": 56
                    }
                },
                "precipitationMm": {
                    "name": "precipitationMm",
                    "getSignature": {
                        "name": "precipitationMm",
                        "type": "number",
                        "returnType": "number",
                        "line": 60
                    }
                },
                "chanceOfRain": {
                    "name": "chanceOfRain",
                    "getSignature": {
                        "name": "chanceOfRain",
                        "type": "number",
                        "returnType": "number",
                        "line": 64
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IHasWindInformation",
                "IWeatherLocationInfo"
            ]
        },
        {
            "name": "LocalStorageAutoBehaviorSubject",
            "id": "class-LocalStorageAutoBehaviorSubject-45f0ead11bd268eef2820e790e81c59317ca0abf87ab58d0069488883bb797f05388bad0098795b7ea7b781837021a3871c190615434cdbc7027f08c1edc3d60",
            "file": "src/app/shared/utilities/LocalStorageAutoBehaviorSubject.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {BehaviorSubject} from \"rxjs\";\r\nimport {IAutoBehaviorSubject} from \"./IAutoBehaviorSubject\";\r\n\r\nexport class LocalStorageAutoBehaviorSubject<T> implements IAutoBehaviorSubject<T> {\r\n  private readonly _storageKey: string;\r\n  private readonly _behaviorT: BehaviorSubject<T>;\r\n\r\n  public get subject(): BehaviorSubject<T> {\r\n    return this._behaviorT;\r\n  }\r\n\r\n  public get value(): T {\r\n    return this._behaviorT.getValue();\r\n  }\r\n\r\n  public set value(value: T) {\r\n    this._behaviorT.next(value);\r\n    this.saveToStorage();\r\n  }\r\n\r\n  constructor(storageKey: string, initValue?: T) {\r\n    this._storageKey = storageKey;\r\n    this._behaviorT = new BehaviorSubject<T>(initValue ? initValue : {} as T);\r\n    this.value = this.loadFromStorage();\r\n  }\r\n\r\n  public loadFromStorage(): T {\r\n    const value = localStorage.getItem(this._storageKey);\r\n    if (value) {\r\n      return JSON.parse(value) as T;\r\n    } else {\r\n      return {} as T;\r\n    }\r\n  }\r\n\r\n  public saveToStorage(): void {\r\n    localStorage.setItem(this._storageKey, JSON.stringify(this.value));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "storageKey",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "initValue",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "storageKey",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "initValue",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_behaviorT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<T>",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "_storageKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        121,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "loadFromStorage",
                    "args": [],
                    "optional": false,
                    "returnType": "T",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "saveToStorage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "indexSignatures": [],
            "accessors": {
                "subject": {
                    "name": "subject",
                    "getSignature": {
                        "name": "subject",
                        "type": "",
                        "returnType": "BehaviorSubject<T>",
                        "line": 8
                    }
                },
                "value": {
                    "name": "value",
                    "setSignature": {
                        "name": "value",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "T",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 16,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "T",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "value",
                        "type": "",
                        "returnType": "T",
                        "line": 12
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IAutoBehaviorSubject"
            ]
        },
        {
            "name": "LocationLookup",
            "id": "class-LocationLookup-57aff1694f22d66fe71b6581f8e2452bbe8ca92baba796fb4d8598d3682960bbcb1dac9202b5a8d37bce79859b136b36e218321cf9c6bb23fd812755d449e127",
            "file": "src/app/shared/modules/weather/services/weather.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {Forecast} from \"../../../models/Forecast\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {environment} from \"../../../../../environments/environment\";\nimport {AutoBehaviorSubject} from \"../../../utilities/AutoBehaviorSubject\";\nimport {LocalStorageAutoBehaviorSubject} from \"../../../utilities/LocalStorageAutoBehaviorSubject\";\nimport {IAutoBehaviorSubject} from \"../../../utilities/IAutoBehaviorSubject\";\nimport {forkJoin, Observable} from \"rxjs\";\nimport { plainToClass } from 'class-transformer';\nimport {WeatherLocationSearchResult} from \"../../../models/WeatherLocationSearchResult\";\nimport {CurrentForecast} from \"../../../models/CurrentForecast\";\n\nexport class LocationLookup {\n  public name: string;\n  public region: string;\n\n  constructor(name: string, region: string) {\n    this.name = name;\n    this.region = region;\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n  forecasts = new AutoBehaviorSubject<Forecast[]>([]);\n  userWeatherLocations: IAutoBehaviorSubject<WeatherLocationSearchResult[]>;\n  weatherLocations: IAutoBehaviorSubject<WeatherLocationSearchResult[]>;\n\n  constructor(private httpClient: HttpClient) {\n    this.userWeatherLocations = new LocalStorageAutoBehaviorSubject<WeatherLocationSearchResult[]>(\n      'user-weather-locations',\n      [])\n\n    this.weatherLocations = new AutoBehaviorSubject<WeatherLocationSearchResult[]>([\n      {\n        \"id\": 2634070,\n        \"name\": \"Portland\",\n        \"region\": \"Oregon\",\n        \"country\": \"United States of America\",\n        \"lat\": 45.52,\n        \"lon\": -122.68,\n        \"url\": \"portland-oregon-united-states-of-america\"\n      } as WeatherLocationSearchResult,\n      {\n        \"id\": 2633488,\n        \"name\": \"East Portland\",\n        \"region\": \"Oregon\",\n        \"country\": \"United States of America\",\n        \"lat\": 45.52,\n        \"lon\": -122.66,\n        \"url\": \"east-portland-oregon-united-states-of-america\"\n      } as WeatherLocationSearchResult,\n      {\n        \"id\": 2633147,\n        \"name\": \"Albina\",\n        \"region\": \"Oregon\",\n        \"country\": \"United States of America\",\n        \"lat\": 45.54,\n        \"lon\": -122.67,\n        \"url\": \"albina-oregon-united-states-of-america\"\n      } as WeatherLocationSearchResult,\n      {\n        \"id\": 2633767,\n        \"name\": \"Kings Heights\",\n        \"region\": \"Oregon\",\n        \"country\": \"United States of America\",\n        \"lat\": 45.53,\n        \"lon\": -122.71,\n        \"url\": \"kings-heights-oregon-united-states-of-america\"\n      } as WeatherLocationSearchResult\n    ])\n  }\n\n\n  public requestCurrentWeatherForecast(locationLookup: LocationLookup): Observable<CurrentForecast> {\n    const key = environment.weatherApiKey;\n    const getAlerts: \"yes\" | \"no\" = \"no\";\n    const getAqi: \"yes\" | \"no\" = \"no\";\n    const queryParams = `?key=${key}&q=${locationLookup.name}, ${locationLookup.region}&aqi=${getAqi}`;\n    return this.httpClient.get<Forecast>(`https://api.weatherapi.com/v1/current.json${queryParams}`);\n  }\n\n  public requestWeatherForecasts(locationLookup: LocationLookup, numOfDays = 3): Observable<Forecast> {\n    const key = environment.weatherApiKey;\n    const getAlerts: \"yes\" | \"no\" = \"no\";\n    const getAqi: \"yes\" | \"no\" = \"no\";\n    const queryParams = `?key=${key}&q=${locationLookup.name}, ${locationLookup.region}&days=${numOfDays}&aqi=${getAqi}&alerts=${getAlerts}`;\n    return this.httpClient.get<Forecast>(`https://api.weatherapi.com/v1/forecast.json${queryParams}`);\n  }\n\n  public getWeatherForecast(locationLookup: LocationLookup, numOfDays = 3): void {\n    this.requestWeatherForecasts(locationLookup, numOfDays)\n      .subscribe(forecast => {\n        const forecastValues = this.forecasts.value;\n        const forecastIndex = forecastValues.findIndex(z => z.location.name === forecast.location.name && z.location.region === z.location.region);\n        const newForecast = new Forecast(\n          forecast.location,\n          forecast.current,\n          forecast.forecast);\n\n        if (forecastIndex > -1) {\n          forecastValues[forecastIndex] = newForecast;\n        }\n        else {\n          forecastValues.push(newForecast);\n        }\n\n        this.forecasts.value = forecastValues;\n      });\n  }\n\n  public getWeatherForecasts(locationLookups: LocationLookup[], numOfDays = 3): void {\n    const key = environment.weatherApiKey;\n    const getAlerts: \"yes\" | \"no\" = \"no\";\n    const getAqi: \"yes\" | \"no\" = \"no\";\n\n    const requests: Observable<Forecast>[] = [];\n    for (const locationLookup of locationLookups) {\n      if (!locationLookup || !locationLookup.name || !locationLookup.region)\n        continue;\n\n      requests.push(this.requestWeatherForecasts(locationLookup, numOfDays));\n    }\n\n    forkJoin(requests)\n    .subscribe(forecasts => {\n      const newForecasts = forecasts.map(forecast => {\n        return new Forecast(\n          forecast.location,\n          forecast.current,\n          forecast.forecast);\n      })\n\n      this.forecasts.value = [...newForecasts];\n    });\n  }\n\n  public getWeatherLocations(searchString: string): void {\n    const key = environment.weatherApiKey;\n    const queryParams = `?key=${key}&q=${searchString}`;\n    this.httpClient\n      .get<WeatherLocationSearchResult[]>(`https://api.weatherapi.com/v1/search.json${queryParams}`)\n      .subscribe(locations => {\n        this.weatherLocations.value = locations;\n      });\n  }\n\n  public addUserWeatherLocation(location: WeatherLocationSearchResult): boolean {\n    let lastValue = this.userWeatherLocations.value;\n    if (!lastValue.length || lastValue.length == 0) {\n      lastValue = []\n    }\n    if (lastValue.findIndex(z => z.id === location.id) > -1) {\n      return false;\n    }\n\n    lastValue.push(location);\n    this.userWeatherLocations.value = lastValue;\n    return true;\n  }\n\n  removeUserWeatherLocation(locationLookup: LocationLookup) {\n    const validItems = [] as WeatherLocationSearchResult[];\n    this.userWeatherLocations\n      .value\n      .forEach(z => {\n        if (z.name === locationLookup.name && z.region === locationLookup.region) {\n          return;\n        }\n        validItems.push(z);\n      });\n\n    this.userWeatherLocations.value = validItems;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "region",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "region",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "region",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MinimumCurrentForecastInformation",
            "id": "class-MinimumCurrentForecastInformation-e62b521197a6916031c923694220d929c78ad2c677ff3304d5e4dc08c1df6fb6a8ca4e544e599f341285cd72883fe4cca60110c6016954458aeb63fd980492a3",
            "file": "src/app/shared/models/MinimumCurrentForecastInformation.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {IWeatherLocationInfo} from \"./IWeatherLocationInfo\";\r\nimport {WeatherCondition} from \"./WeatherCondition\";\r\n\r\nexport class MinimumCurrentForecastInformation implements IWeatherLocationInfo {\r\n  condition: WeatherCondition;\r\n  date: Date;\r\n  humidity: number;\r\n  precipitationIn: number;\r\n  precipitationMm: number;\r\n  temp_c: number;\r\n  temp_f: number;\r\n  wind_kph: number;\r\n  wind_mph: number;\r\n\r\n  // chanceOfRain: number;\r\n\r\n  constructor(condition: WeatherCondition,\r\n              date: Date,\r\n              humidity: number,\r\n              precipitationIn: number,\r\n              precipitationMm: number,\r\n              temp_c: number,\r\n              temp_f: number,\r\n              wind_kph: number,\r\n              wind_mph: number,\r\n              // chanceOfRain: number\r\n  ) {\r\n    this.condition = condition;\r\n    this.date = date;\r\n    this.humidity = humidity;\r\n    this.precipitationIn = precipitationIn;\r\n    this.precipitationMm = precipitationMm;\r\n    this.temp_c = temp_c;\r\n    this.temp_f = temp_f;\r\n    this.wind_kph = wind_kph;\r\n    this.wind_mph = wind_mph;\r\n    // this.chanceOfRain = chanceOfRain;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "condition",
                        "type": "WeatherCondition",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "date",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "humidity",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "precipitationIn",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "precipitationMm",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "temp_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "temp_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "wind_kph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "wind_mph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "condition",
                        "type": "WeatherCondition",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "date",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "humidity",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "precipitationIn",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "precipitationMm",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "temp_c",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "temp_f",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "wind_kph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "wind_mph",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "condition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WeatherCondition",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "humidity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "precipitationIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "precipitationMm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "temp_c",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "temp_f",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "wind_kph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "wind_mph",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IWeatherLocationInfo"
            ]
        },
        {
            "name": "Node",
            "id": "class-Node-8ab99e33658e444187022bf63a558ad91b6742c3578903a68e5d7658975099ae83de401351dfc32a34335816a968b8b35ca3659fc7594e9d5c29b5d5311025bd",
            "file": "src/app/shared/models/Node.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Node {\r\n  value: any;\r\n  name: string | Date;\r\n  extra: {\r\n    [key: string]: any;\r\n  };\r\n\r\n  constructor(value: any, name: string | Date, extra: { [p: string]: any } = {}) {\r\n    this.value = value;\r\n    this.name = name;\r\n    this.extra = extra;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "value",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "name",
                        "type": "string | Date",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "extra",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{}"
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "name",
                        "type": "string | Date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "extra",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "{}",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "extra",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | Date",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "WeatherCondition",
            "id": "class-WeatherCondition-412544215519d592c86e69d3ece1dce733089dfe335c2e98d55bab88bf186645230848455c772d574f0ac95e4cc31608ccb5a79ff40789f897a1b2758ab22b84",
            "file": "src/app/shared/models/WeatherCondition.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class WeatherCondition {\r\n  text: string = \"Clear\";\r\n  icon: string = \"//cdn.weatherapi.com/weather/64x64/night/113.png\";\r\n  code: number = 1000\r\n}\r\n",
            "properties": [
                {
                    "name": "code",
                    "defaultValue": "1000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "icon",
                    "defaultValue": "\"//cdn.weatherapi.com/weather/64x64/night/113.png\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "text",
                    "defaultValue": "\"Clear\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "WeatherLocation",
            "id": "class-WeatherLocation-de3162125adeae393ed33fbd8a465780ce5a7d6117f3811a601f940a3bfc08f4123108456887b4e30790df0d4c1ca6f0bb36609779997ba4dd4ca6a06905457f",
            "file": "src/app/shared/models/WeatherLocation.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class WeatherLocation {\r\n  name: string;\r\n  region: string;\r\n  country: string;\r\n  lat: number;\r\n  lon: number;\r\n  tz_id: string;\r\n  localtime_epoch: number;\r\n  localtime: Date;\r\n\r\n  constructor(name: string, region: string, country: string, lat: number, lon: number, tz_id: string, localtime_epoch: number, localtime: Date) {\r\n    this.name = name;\r\n    this.region = region;\r\n    this.country = country;\r\n    this.lat = lat;\r\n    this.lon = lon;\r\n    this.tz_id = tz_id;\r\n    this.localtime_epoch = localtime_epoch;\r\n    this.localtime = localtime;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "region",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "country",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "lat",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "lon",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "tz_id",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "localtime_epoch",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "localtime",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "region",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "country",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "lat",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "lon",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "tz_id",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "localtime_epoch",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "localtime",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "lat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "localtime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "localtime_epoch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "lon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "region",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "tz_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "WeatherLocationSearchResult",
            "id": "class-WeatherLocationSearchResult-7648018b992944da085148ca1a3f9022853b87a873dbfd3d2e6e0a8e240fc17fd4044efdce8c5f8f1fc3a4a629f606f4722e39d843abd78eef75f092b93a0825",
            "file": "src/app/shared/models/WeatherLocationSearchResult.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class WeatherLocationSearchResult {\r\n  id: number = 2634070;\r\n  name: string = \"Portland\";\r\n  region: string = \"Oregon\";\r\n  country: string = \"United States of America\";\r\n  lat: number = 45.52;\r\n  lon: number = -122.68;\r\n  url: string = \"portland-oregon-united-states-of-america\";\r\n\r\n  constructor(id: number,\r\n              name: string,\r\n              region: string,\r\n              country: string,\r\n              lat: number,\r\n              lon: number,\r\n              url: string) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.region = region;\r\n    this.country = country;\r\n    this.lat = lat;\r\n    this.lon = lon;\r\n    this.url = url;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "region",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "country",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "lat",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "lon",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "url",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "region",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "country",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "lat",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "lon",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "url",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "country",
                    "defaultValue": "\"United States of America\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "defaultValue": "2634070",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "lat",
                    "defaultValue": "45.52",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "lon",
                    "defaultValue": "-122.68",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "name",
                    "defaultValue": "\"Portland\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "region",
                    "defaultValue": "\"Oregon\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "url",
                    "defaultValue": "\"portland-oregon-united-states-of-america\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "WeatherThumbnailInfo",
            "id": "class-WeatherThumbnailInfo-0048b79dd4e5b865adbed8c0f8f1bf146576e9780bcc1f0d2e243c23b879bf2faf4ef077eb68bcca4275ef922184443003d9ae0147de70bdbbf69a3d819d5816",
            "file": "src/app/shared/models/WeatherThumbnailInfo.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {IWeatherThumbnailInfo} from \"./IWeatherLocationInfo\";\r\nimport {WeatherCondition} from \"./WeatherCondition\";\r\n\r\nexport class WeatherThumbnailInfo implements IWeatherThumbnailInfo {\r\n  condition: WeatherCondition;\r\n  date: Date;\r\n  temperatureHighC: number;\r\n  temperatureHighF: number;\r\n  temperatureLowC: number;\r\n  temperatureLowF: number;\r\n  selected: boolean;\r\n\r\n  constructor(condition: WeatherCondition, date: Date, temperatureHighC: number, temperatureHighF: number, temperatureLowC: number, temperatureLowF: number, selected = false) {\r\n    this.condition = condition;\r\n    this.date = date;\r\n    this.temperatureHighC = temperatureHighC;\r\n    this.temperatureHighF = temperatureHighF;\r\n    this.temperatureLowC = temperatureLowC;\r\n    this.temperatureLowF = temperatureLowF;\r\n    this.selected = selected;\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "condition",
                        "type": "WeatherCondition",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "date",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "temperatureHighC",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "temperatureHighF",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "temperatureLowC",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "temperatureLowF",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "selected",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "false"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "condition",
                        "type": "WeatherCondition",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "date",
                        "type": "Date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "temperatureHighC",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "temperatureHighF",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "temperatureLowC",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "temperatureLowF",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "selected",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "false",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "condition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WeatherCondition",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "temperatureHighC",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "temperatureHighF",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "temperatureLowC",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "temperatureLowF",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "IWeatherThumbnailInfo"
            ]
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AdvancedWeatherComponent",
            "id": "component-AdvancedWeatherComponent-738aa12e164eb15694efca0f2af07110abfbc5863776a1266fa17c56b28acbabe7c20a8d9a06cd07b0ba1b4e3dd524bda8ed5af49d1e194316db9d250850b1db",
            "file": "src/app/shared/modules/weather/components/advanced-weather/advanced-weather.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-advanced-weather",
            "styleUrls": [
                "./advanced-weather.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./advanced-weather.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currentWeatherInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "IWeatherLocationInfo",
                    "decorators": []
                },
                {
                    "name": "forecasts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "IWeatherThumbnailInfo[]",
                    "decorators": []
                },
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "ILocationInformation",
                    "decorators": []
                },
                {
                    "name": "precipitationChances",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "BasicGraphNode[]",
                    "decorators": []
                },
                {
                    "name": "temperatures",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "BasicGraphNode[]",
                    "decorators": []
                },
                {
                    "name": "windDirections",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "IHasWindInformation[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onThumbnailSelected",
                    "defaultValue": "new EventEmitter<IWeatherThumbnailInfo>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onThumbnailClick",
                    "args": [
                        {
                            "name": "$event",
                            "type": "IWeatherThumbnailInfo",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "IWeatherThumbnailInfo",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {IWeatherLocationInfo, IWeatherThumbnailInfo} from \"../../../../models/IWeatherLocationInfo\";\nimport {ILocationInformation} from \"../../../../models/ILocationInformation\";\nimport {BasicGraphNode} from \"../../../../models/BasicGraphNode\";\nimport {IHasWindInformation} from \"../../../../models/IHasWindInformation\";\nimport {Node} from \"../../../../models/Node\";\n\n@Component({\n  selector: 'app-advanced-weather',\n  templateUrl: './advanced-weather.component.html',\n  styleUrls: ['./advanced-weather.component.css']\n})\nexport class AdvancedWeatherComponent implements OnInit {\n  @Input() currentWeatherInfo!: IWeatherLocationInfo;\n  @Input() location!: ILocationInformation;\n  @Input() forecasts!: IWeatherThumbnailInfo[];\n  @Input() temperatures!: BasicGraphNode[];\n  @Input() precipitationChances: BasicGraphNode[] = [];\n  @Input() windDirections: IHasWindInformation[] = [];\n  @Output() onThumbnailSelected = new EventEmitter<IWeatherThumbnailInfo>();\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  onThumbnailClick($event: IWeatherThumbnailInfo) {\n    this.forecasts.forEach(forecast =>  forecast.selected = false);\n    $event.selected = !$event.selected;\n    this.onThumbnailSelected.emit($event);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".graph-container {\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 225px;\r\n  z-index: 100;\r\n}\r\n\r\n.selected-thumbnail {\r\n  background: #6a6969;\r\n}\r\n",
                    "styleUrl": "./advanced-weather.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 20
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card>\n  <app-weather-location-information\n    [weatherInfo]=\"currentWeatherInfo\"\n    [location]=\"location\">\n  </app-weather-location-information>\n\n  <mat-tab-group mat-align-tabs=\"start\" style=\"margin-bottom: 1rem\">\n    <mat-tab label=\"Temperature\">\n      <div class=\"graph-container\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <app-temperature-graph [temperatures]=\"temperatures\"></app-temperature-graph>\n      </div>\n    </mat-tab>\n    <mat-tab label=\"Precipitation\">\n      <div class=\"graph-container\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <app-precipitation-graph [precipitationChances]=\"precipitationChances\"></app-precipitation-graph>\n      </div>\n    </mat-tab>\n    <mat-tab label=\"Wind\">\n      <div class=\"graph-container\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <app-wind-direction-card [windDirections]=\"windDirections\"></app-wind-direction-card>\n      </div>\n    </mat-tab>\n  </mat-tab-group>\n\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <span *ngFor=\"let forecast of forecasts\" style=\"margin-right: .5rem\">\n      <mat-card style=\"width: 8rem!important;cursor: pointer;\"\n                (click)=\"onThumbnailClick(forecast)\"\n                [ngClass]=\"{ 'selected-thumbnail': forecast.selected }\"\n                fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <app-weather-thumbnail style=\"display: inline-block!important;\"\n          [forecast]=\"forecast\">\n        </app-weather-thumbnail>\n      </mat-card>\n    </span>\n  </div>\n</mat-card>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-beb7b628ffb935a17d59effadab5a15a51e5306043fcc8e689c9b31c33e90cead536126a9dae94b67eb7066d24ad4e9237879013c744e3973384c3d742c0fa53",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "drawerState",
                    "defaultValue": "\"closed\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"open\" | \"closed\"",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadingProgressBar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AutoBehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadingProgressWheel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AutoBehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleSidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnDestroy} from '@angular/core';\nimport {BehaviorSubject, debounceTime, Subject, takeUntil} from \"rxjs\";\nimport {LoadingService} from \"./shared/services/loading.service\";\nimport {AutoBehaviorSubject} from \"./shared/utilities/AutoBehaviorSubject\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  public title: string;\n  public loadingProgressWheel: AutoBehaviorSubject<boolean>;\n  public loadingProgressBar: AutoBehaviorSubject<boolean>;\n  public drawerState: \"open\" | \"closed\" = \"closed\";\n\n  constructor(private loadingService: LoadingService, public router: Router) {\n    this.title = 'interview-project'\n    this.loadingProgressWheel = this.loadingService.loadingProgressWheel;\n    this.loadingProgressBar = this.loadingService.loadingProgressBar;\n  }\n\n  public toggleSidebar() {\n    this.drawerState = this.drawerState === \"open\"\n      ? \"closed\"\n      : \"open\";\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".loading-wheel-wrapper {\r\n  padding: 12px;\r\n  position: absolute;\r\n  top: 60%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 99999;\r\n}\r\n\r\n.example-sidenav-content {\r\n  display: flex;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.example-container {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.w-100 {\r\n  width: 100%;\r\n}\r\n\r\n.h-100 {\r\n  height: 100%;\r\n}\r\n\r\n.inline-block {\r\n  display: inline-block;\r\n}\r\n\r\n::ng-deep.ngx-charts ::ng-deep.line-highlight {\r\n  display: block !important;\r\n}\r\n\r\n::ng-deep.ngx-charts {\r\n  overflow: visible;\r\n}\r\n",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loadingService",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "loadingService",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<mat-drawer-container class=\"example-container\" autosize>\n  <!-- Toolbar -->\n  <div></div>\n\n  <!-- Sidebar -->\n  <app-nav-menu [drawerState]=\"drawerState\"></app-nav-menu>\n\n  <!-- Loading -->\n  <div>\n    <mat-progress-bar *ngIf=\"loadingProgressBar.subject | async\" mode=\"indeterminate\"></mat-progress-bar>\n  </div>\n\n  <div class=\"loading-wheel-wrapper\">\n    <mat-spinner *ngIf=\"loadingProgressWheel.subject | async\"></mat-spinner>\n  </div>\n\n  <!-- new body -->\n  <div>\n    <router-outlet></router-outlet>\n  </div>\n</mat-drawer-container>\n\n"
        },
        {
            "name": "BasicWeatherCardComponent",
            "id": "component-BasicWeatherCardComponent-f8517144df62584d8b231bb9471fc0786a9c8ba8c61cdd45b6f98d6a8bea08f3d1f52d7ddb3f3396f7876f635cf74f1f6265a53ff2ec4777ad72593b7c792053",
            "file": "src/app/shared/modules/weather/components/basic-weather-card/basic-weather-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-basic-weather-card",
            "styleUrls": [
                "./basic-weather-card.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./basic-weather-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "forecast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Forecast",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Forecast>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "getDateObj",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date | string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Date",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date | string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickCard",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {\n  Forecast\n} from \"../../../../models/Forecast\";\nimport {WeatherLocation} from \"../../../../models/WeatherLocation\";\nimport {CurrentForecastInformation} from \"../../../../models/CurrentForecastInformation\";\nimport {Forecasts} from \"../../../../models/Forecasts\";\n\nexport function getDateObj(string: Date | string): Date {\n  return new Date(string);\n}\n\n@Component({\n  selector: 'app-basic-weather-card',\n  templateUrl: './basic-weather-card.component.html',\n  styleUrls: ['./basic-weather-card.component.css']\n})\nexport class BasicWeatherCardComponent implements OnInit {\n  @Input() forecast!: Forecast;\n  public get currentForecast(): CurrentForecastInformation { return this.forecast.current; }\n  public get forecasts(): Forecasts { return this.forecast.forecast; }\n  public get location(): WeatherLocation { return this.forecast.location; }\n  public get selected(): boolean { return this.forecast.selected; }\n\n  @Output() onClick = new EventEmitter<Forecast>();\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  getDateObj(date: Date | string): Date {\n    return getDateObj(date);\n  }\n\n  onClickCard() {\n    this.onClick.emit(this.forecast);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".weather-card-location-info {\r\n  margin-bottom: .5rem;\r\n}\r\n\r\n.margin-bottom-spacing {\r\n  margin-bottom: .15rem;\r\n}\r\n\r\n.date-spacing {\r\n  margin-right: 4px\r\n}\r\n\r\n.current-condition-image {\r\n  height: 64px;\r\n  margin: 1px 4px 0;\r\n  width: 64px;\r\n}\r\n\r\n.current-temperature-value {\r\n  height: 64px;\r\n  margin: 1px 4px 0;\r\n  width: 64px;\r\n  font-weight: 400;\r\n  line-height: 60px;\r\n  font-size: 48px;\r\n}\r\n\r\n.current-temperature-units {\r\n  height: 64px;\r\n  font-size: 24px;\r\n  line-height: 30px;\r\n  margin-top: 12px;\r\n  margin-right: 8px;\r\n  vertical-align: top;\r\n}\r\n\r\n.misc-font {\r\n  color: #c8cace;\r\n  font-size: 12px;\r\n}\r\n",
                    "styleUrl": "./basic-weather-card.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 25
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "currentForecast": {
                    "name": "currentForecast",
                    "getSignature": {
                        "name": "currentForecast",
                        "type": "",
                        "returnType": "CurrentForecastInformation",
                        "line": 20
                    }
                },
                "forecasts": {
                    "name": "forecasts",
                    "getSignature": {
                        "name": "forecasts",
                        "type": "",
                        "returnType": "Forecasts",
                        "line": 21
                    }
                },
                "location": {
                    "name": "location",
                    "getSignature": {
                        "name": "location",
                        "type": "",
                        "returnType": "WeatherLocation",
                        "line": 22
                    }
                },
                "selected": {
                    "name": "selected",
                    "getSignature": {
                        "name": "selected",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 23
                    }
                }
            },
            "templateData": "<div (click)=\"onClickCard()\">\n  <app-weather-location-information\n    [weatherInfo]=\"currentForecast\"\n    [location]=\"location\">\n  </app-weather-location-information>\n\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <span *ngFor=\"let forecast of forecasts.forecastday\" style=\"width: 5rem!important;margin-right: .5rem\">\n        <app-weather-thumbnail style=\"display: inline-block!important;\"\n          [forecast]=\"forecast\">\n        </app-weather-thumbnail>\n      </span>\n  </div>\n</div>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-3e4b746fe7dd91d7c8682668500d7e396687e4dd96e937dcdcda0b00213401ef71f0e2adaa1f924df54ed641b1729f2b808fd827fde8f111cf6cfb63cd983fab",
            "file": "src/app/shared/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./header.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>header works!</p>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-fc74a50e00e910cca0d9092c74a587fb93bb8f5f5440ba0c7175584d47b8e4c32aab204d32dd5070afdf6545659114737118142c0776b348636de9b49f003576",
            "file": "src/app/shared/components/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_currentWeatherForSelectedLocation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CurrentForecastInformation",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_today",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "lastAdvancedForecast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Forecast",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "locationSearchString",
                    "defaultValue": "new AutoBehaviorSubject<string>(\"\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedAdvancedViewDate",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedAdvancedWeatherCard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AdvancedWeatherCard",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedBasicWeatherCard",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Forecast | undefined",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedSearchLocation",
                    "defaultValue": "new AutoBehaviorSubject<WeatherLocationSearchResult | undefined>(undefined)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "userWeatherLocationCardInfos",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IAutoBehaviorSubject<Forecast[]>",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clickedOutside",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "createLocation",
                    "args": [
                        {
                            "name": "$event",
                            "type": "WeatherLocationSearchResult | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "WeatherLocationSearchResult | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initSelectedAdvancedWeatherCardInfo",
                    "args": [
                        {
                            "name": "incomingForecast",
                            "type": "Forecast",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 180,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "incomingForecast",
                            "type": "Forecast",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAdvancedThumbnailSelected",
                    "args": [
                        {
                            "name": "$event",
                            "type": "IWeatherThumbnailInfo",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 217,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "IWeatherThumbnailInfo",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onBasicWeatherCardClick",
                    "args": [
                        {
                            "name": "$event",
                            "type": "Forecast",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "Forecast",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeLocation",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {AutoBehaviorSubject} from \"../../utilities/AutoBehaviorSubject\";\nimport {debounceTime, Subject, take, takeUntil} from \"rxjs\";\nimport {\n  Forecast\n} from \"../../models/Forecast\";\nimport {LocationLookup, WeatherService} from \"../../modules/weather/services/weather.service\";\nimport {IAutoBehaviorSubject} from \"../../utilities/IAutoBehaviorSubject\";\nimport {IWeatherLocationInfo, IWeatherThumbnailInfo} from \"../../models/IWeatherLocationInfo\";\nimport {ILocationInformation} from \"../../models/ILocationInformation\";\nimport {BasicGraphNode} from \"../../models/BasicGraphNode\";\nimport {WeatherLocationSearchResult} from \"../../models/WeatherLocationSearchResult\";\nimport {MinimumCurrentForecastInformation} from \"../../models/MinimumCurrentForecastInformation\";\nimport {CurrentForecastInformation} from \"../../models/CurrentForecastInformation\";\nimport {WeatherThumbnailInfo} from \"../../models/WeatherThumbnailInfo\";\nimport {ForecastDay} from \"../../models/ForecastDay\";\nimport {IHasWindInformation} from \"../../models/IHasWindInformation\";\nimport {Node} from \"../../models/Node\";\n\nexport class AdvancedWeatherCard {\n  currentWeatherInfo!: IWeatherLocationInfo;\n  location!: ILocationInformation;\n  forecasts!: IWeatherThumbnailInfo[];\n  temperatures!: BasicGraphNode[];\n  precipitationChances: BasicGraphNode[] = [];\n  windDirections: IHasWindInformation[] = [];\n\n  constructor(currentWeatherInfo: IWeatherLocationInfo,\n              location: ILocationInformation,\n              forecasts: IWeatherThumbnailInfo[],\n              temperatures: BasicGraphNode[],\n              precipitationChances: BasicGraphNode[],\n              windDirections: IHasWindInformation[]) {\n    this.currentWeatherInfo = currentWeatherInfo;\n    this.location = location;\n    this.forecasts = forecasts;\n    this.temperatures = temperatures;\n    this.precipitationChances = precipitationChances;\n    this.windDirections = windDirections;\n  }\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  private destroyed$ = new Subject<boolean>();\n\n  public locationSearchString = new AutoBehaviorSubject<string>(\"\");\n  public selectedSearchLocation = new AutoBehaviorSubject<WeatherLocationSearchResult | undefined>(undefined);\n\n  public userWeatherLocationCardInfos: IAutoBehaviorSubject<Forecast[]>;\n  public selectedBasicWeatherCard: Forecast | undefined = undefined;\n  public selectedAdvancedWeatherCard!: AdvancedWeatherCard;\n\n  public selectedAdvancedViewDate: Date = new Date();\n  private lastAdvancedForecast!: Forecast;\n  private _currentWeatherForSelectedLocation!: CurrentForecastInformation;\n  private _today: Date = new Date();\n\n  public get locationItems(): IAutoBehaviorSubject<WeatherLocationSearchResult[]> {\n    return this.weatherService.weatherLocations;\n  }\n\n  public get userWeatherLocations(): IAutoBehaviorSubject<WeatherLocationSearchResult[]> {\n    return this.weatherService.userWeatherLocations;\n  }\n\n  constructor(private weatherService: WeatherService) {\n    this.userWeatherLocationCardInfos = new AutoBehaviorSubject<Forecast[]>([]);\n\n    this.locationSearchString\n      .subject\n      .pipe(takeUntil(this.destroyed$), debounceTime(250))\n      .subscribe(searchString => {\n        const locationMatches = this.locationItems\n          .value\n          .filter(z => z.name.includes(searchString) || z.country.includes(searchString) || z.region.includes(searchString))\n\n        if (searchString.length < 3 || locationMatches.length > 0)\n          return;\n\n        weatherService.getWeatherLocations(searchString);\n      })\n\n    weatherService.forecasts\n      .subject\n      .subscribe(forecasts => {\n        const alreadyAdded = [] as string[];\n        const newForecasts = [] as Forecast[];\n        const currentValues = this.userWeatherLocations.value;\n        for (const forecast of forecasts) {\n          const locationKey = forecast.location.name + '-' + forecast.location.region;\n          const isAlreadyAdded = !alreadyAdded.includes(locationKey);\n          const isValidToAdd = currentValues.find(z => z.name === forecast.location.name && z.region === forecast.location.region) !== undefined;\n\n          if (isValidToAdd && isAlreadyAdded) {\n            newForecasts.push(forecast);\n            alreadyAdded.push();\n          }\n        }\n\n        this.userWeatherLocationCardInfos.value = newForecasts;\n\n        if (!this.selectedAdvancedWeatherCard) {\n          if (!this.selectedBasicWeatherCard) {\n            this.selectedBasicWeatherCard = this.userWeatherLocationCardInfos.value[0];\n          }\n          this.initSelectedAdvancedWeatherCardInfo(this.selectedBasicWeatherCard);\n        }\n      });\n  }\n\n  ngOnInit(): void {\n    if (!this.userWeatherLocations.value || this.userWeatherLocations.value?.length === 0 || !this.userWeatherLocations.value?.length)\n      return;\n\n    const locationsToLoad = this.userWeatherLocations.value?.map(z => new LocationLookup(z.name, z.region));\n    this.weatherService.getWeatherForecasts(locationsToLoad, 3);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next(true);\n  }\n\n  public createLocation($event: WeatherLocationSearchResult | undefined) {\n    if (!$event)\n      return;\n\n    const added = this.weatherService.addUserWeatherLocation($event);\n    if (added)\n      this.weatherService.getWeatherForecast(new LocationLookup($event.name, $event.region), 3);\n  }\n\n  public onBasicWeatherCardClick($event: Forecast) {\n    const values = this.userWeatherLocationCardInfos.value;\n    values.forEach(z => {\n      z.selected = z === $event;\n    })\n\n    this.userWeatherLocationCardInfos.value = values;\n    this.selectedBasicWeatherCard = $event;\n\n    this.initSelectedAdvancedWeatherCardInfo($event);\n  }\n\n  public removeLocation() {\n    if (!this.selectedBasicWeatherCard)\n      return;\n\n    const locationLookup = new LocationLookup(this.selectedBasicWeatherCard.location.name, this.selectedBasicWeatherCard.location.region);\n    this.weatherService.removeUserWeatherLocation(locationLookup);\n\n    const validLocations = [] as Forecast[];\n    const currentLocations = this.userWeatherLocationCardInfos.value;\n\n    currentLocations.forEach(z => {\n      if (z.location.name === locationLookup.name && z.location.region === locationLookup.region) {\n        return;\n      }\n\n      validLocations.push(z)\n    });\n\n    this.userWeatherLocationCardInfos.value = validLocations;\n  }\n\n  public clickedOutside() {\n    const values = this.userWeatherLocationCardInfos.value;\n    values.forEach(z => {\n      z.selected = false;\n    })\n\n    this.userWeatherLocationCardInfos.value = values;\n    this.selectedBasicWeatherCard = undefined;\n  }\n\n  private initSelectedAdvancedWeatherCardInfo(incomingForecast: Forecast) {\n    if (!incomingForecast)\n      return;\n\n    this.weatherService\n      .requestWeatherForecasts(new LocationLookup(incomingForecast.location.name, incomingForecast.location.region), 7)\n      .pipe(take(1))\n      .subscribe(forecast => {\n        let forecastIndex = 0;\n        const newForecast = new Forecast(forecast.location, forecast.current, forecast.forecast);\n        const advancedViewGraphsData = Forecast.getGraphData(newForecast.forecast.forecastday, newForecast.current);\n        this.lastAdvancedForecast = forecast;\n        this.selectedAdvancedWeatherCard = new AdvancedWeatherCard(\n          newForecast.current,\n          newForecast.location,\n          newForecast.forecast.forecastday.map(z => {\n            const x = new ForecastDay(new Date(z.date), z.date_epoch, z.day, z.astro, z.hour);\n            const selected = forecastIndex === 0;\n\n            forecastIndex++;\n            return new WeatherThumbnailInfo(\n              x.condition,\n              new Date(x.date),\n              x.day.maxtemp_c,\n              x.day.maxtemp_f,\n              x.day.mintemp_c,\n              x.day.mintemp_f,\n              selected);\n          }),\n          advancedViewGraphsData.temperatures,\n          advancedViewGraphsData.precipitationChances,\n          advancedViewGraphsData.windDirectionInfos);\n\n        this._currentWeatherForSelectedLocation = newForecast.current;\n      })\n  }\n\n  onAdvancedThumbnailSelected($event: IWeatherThumbnailInfo) {\n    const date = new Date(new Date($event.date));\n    const newForecastIndex = this.lastAdvancedForecast.forecast.forecastday.findIndex(z => {\n      const x = new Date(z.date);\n      const matches = x.getUTCFullYear() === date.getUTCFullYear() &&\n                      x.getUTCMonth()    === date.getUTCMonth() &&\n                      x.getUTCDate()     === date.getUTCDate()\n      return matches;\n    });\n    const oldForecast = this.lastAdvancedForecast.forecast.forecastday[newForecastIndex];\n    const newForecast = new ForecastDay(oldForecast.date, oldForecast.date_epoch, oldForecast.day, oldForecast.astro, oldForecast.hour, true);\n\n    let newItem: IWeatherLocationInfo | undefined = undefined;\n    if (newForecastIndex > 0) {\n      console.log('none 0 day', newForecast);\n      newItem = new MinimumCurrentForecastInformation(\n        newForecast!.day.condition,\n        new Date(newForecast!.date),\n        newForecast!.humidity,\n        newForecast!.precipitationIn,\n        newForecast!.precipitationMm,\n        newForecast!.day.maxtemp_c,\n        newForecast!.day.maxtemp_f,\n        newForecast!.wind_kph,\n        newForecast!.wind_mph);\n    }\n    else if (newForecastIndex > -1) {\n      const newCurrentForecast = this._currentWeatherForSelectedLocation;\n      console.log('0 day', newCurrentForecast);\n      newItem = new MinimumCurrentForecastInformation(\n        newCurrentForecast!.condition,\n        date,\n        newCurrentForecast!.humidity,\n        newCurrentForecast!.precipitationIn,\n        newCurrentForecast!.precipitationMm,\n        newCurrentForecast!.temp_c,\n        newCurrentForecast!.temp_f,\n        newCurrentForecast!.wind_kph,\n        newCurrentForecast!.wind_mph);\n    }\n    if (!newItem)\n      return;\n\n    this.lastAdvancedForecast.date = new Date(this.lastAdvancedForecast.date);\n    const advancedViewGraphsData = Forecast.getGraphData(\n      this.lastAdvancedForecast.forecast.forecastday,\n      newItem!);\n\n    this.selectedAdvancedWeatherCard.currentWeatherInfo = newItem;\n    this.selectedAdvancedWeatherCard.temperatures = advancedViewGraphsData.temperatures;\n    this.selectedAdvancedWeatherCard.precipitationChances = advancedViewGraphsData.precipitationChances;\n    this.selectedAdvancedWeatherCard.windDirections = advancedViewGraphsData.windDirectionInfos;\n\n    console.log('new day selected', this.selectedAdvancedWeatherCard)\n    console.log('new day selected', newItem)\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-viewport {\r\n  height: 68vh;\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./home.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "weatherService",
                        "type": "WeatherService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 69,
                "jsdoctags": [
                    {
                        "name": "weatherService",
                        "type": "WeatherService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "locationItems": {
                    "name": "locationItems",
                    "getSignature": {
                        "name": "locationItems",
                        "type": "",
                        "returnType": "IAutoBehaviorSubject<WeatherLocationSearchResult[]>",
                        "line": 63
                    }
                },
                "userWeatherLocations": {
                    "name": "userWeatherLocations",
                    "getSignature": {
                        "name": "userWeatherLocations",
                        "type": "",
                        "returnType": "IAutoBehaviorSubject<WeatherLocationSearchResult[]>",
                        "line": 67
                    }
                }
            },
            "templateData": "<div>\n  <mat-tab-group mat-align-tabs=\"start\" style=\"margin-bottom: 1rem\">\n    <mat-tab label=\"Advanced Weather View\">\n      <mat-card style=\"margin: .5rem;height: 80vh;min-width: 964px;\">\n        <mat-card-title>\n          Weather Advanced View\n        </mat-card-title>\n        <mat-card-content>\n          <app-advanced-weather *ngIf=\"selectedAdvancedWeatherCard\"\n                                (onThumbnailSelected)=\"onAdvancedThumbnailSelected($event)\"\n                                [currentWeatherInfo]=\"selectedAdvancedWeatherCard.currentWeatherInfo\"\n                                [location]=\"selectedAdvancedWeatherCard.location\"\n                                [forecasts]=\"selectedAdvancedWeatherCard.forecasts\"\n                                [temperatures]=\"selectedAdvancedWeatherCard.temperatures\"\n                                [precipitationChances]=\"selectedAdvancedWeatherCard.precipitationChances\"\n                                [windDirections]=\"selectedAdvancedWeatherCard.windDirections\">\n          </app-advanced-weather>\n        </mat-card-content>\n      </mat-card>\n    </mat-tab>\n    <mat-tab label=\"Manage Weather Locations\">\n      <mat-card style=\"margin-bottom: .25rem;min-width: 634px;\" (click)=\"clickedOutside()\">\n        <mat-card-title>\n          Weather Location Lookup\n        </mat-card-title>\n        <mat-card-content>\n          <div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" style=\"width: 375px\">\n            <app-searchable-dropdown\n              class='w-100'\n              appearance='outline'\n              itemSearchType='object'\n              innerLabelText='Select a clinician to create a profile for.'\n              noOptionsInstruction=\"Begin typing to search for a location\"\n              searchPattern='${name}, ${region}'\n              (itemSearchStringEmitter)=\"locationSearchString.value=$event\"\n              (selectedItemEmitter)=\"selectedSearchLocation.value=$event\"\n              [clearSearchAfterItemUpdate]=\"false\"\n              [errorMessages]='{ \"Clinician Required\": \"Please select a clinician...\" }'\n              [items]='locationItems.subject | async'\n              [outerLabelText]='\"Location\"'>\n            </app-searchable-dropdown>\n            <div>\n              <div style=\"margin-bottom: .15rem\">\n                <button mat-raised-button\n                        style=\"width: 141px\"\n                        [disabled]=\"!selectedSearchLocation.value\"\n                        (click)=\"createLocation(selectedSearchLocation.value)\">\n                  Add Location\n                </button>\n              </div>\n              <div>\n                <button mat-raised-button\n                        style=\"width: 141px\"\n                        [disabled]=\"!selectedBasicWeatherCard\"\n                        (click)=\"removeLocation()\">\n                  Remove Location\n                </button>\n              </div>\n            </div>\n          </div>\n        </mat-card-content>\n      </mat-card>\n      <mat-card style=\"padding-bottom: 5vh;min-width: 634px\">\n        <mat-card-title>Weather Locations</mat-card-title>\n        <mat-card-content>\n          <cdk-virtual-scroll-viewport itemSize=\"5\" class=\"example-viewport\">\n            <mat-card *cdkVirtualFor=\"let forecast of (userWeatherLocationCardInfos.subject | async)\"\n                      class=\"mat-elevation-z8\"\n                      style=\"margin-bottom: .25rem\"\n                      [style]=\"{ 'background-color': forecast.selected ? 'rgba(0, 0, 0, 0.12)' : 'rgb(66, 66, 66)' }\">\n              <app-basic-weather-card\n                [forecast]=\"forecast\"\n                (onClick)=\"onBasicWeatherCardClick($event)\">\n              </app-basic-weather-card>\n            </mat-card>\n          </cdk-virtual-scroll-viewport>\n        </mat-card-content>\n      </mat-card>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n"
        },
        {
            "name": "NavMenuComponent",
            "id": "component-NavMenuComponent-4306c92fa4c35642891f8994dc2d185fb62f61fd203a99afe8eb0c18fb07935a9ff3e12c9f0d6af9051b297eb4dd55f87a6985132d317d246013938d905575c6",
            "file": "src/app/shared/components/nav-menu/nav-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nav-menu",
            "styleUrls": [
                "./nav-menu.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./nav-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "drawerState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "DrawerState",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_drawerState",
                    "defaultValue": "\"open\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DrawerState",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "drawer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'drawer'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit, ViewChild} from '@angular/core';\n\nexport type DrawerState = 'open' | 'closed';\n\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.css']\n})\nexport class NavMenuComponent implements OnInit {\n  @ViewChild('drawer') drawer: any;\n\n  _drawerState: DrawerState = \"open\";\n  get drawerState(): DrawerState {\n    return this._drawerState;\n  }\n  @Input() set drawerState(value: DrawerState) {\n    this._drawerState = value;\n\n    if (this.drawer) {\n      if (this._drawerState === \"open\") {\n        this.drawer.open();\n      }\n      if (this._drawerState === \"closed\") {\n        this.drawer.close();\n      }\n    }\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".example-sidenav {\r\n  padding: 20px;\r\n}\r\n",
                    "styleUrl": "./nav-menu.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 28
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "drawerState": {
                    "name": "drawerState",
                    "setSignature": {
                        "name": "drawerState",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "DrawerState",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 17,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "DrawerState",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "drawerState",
                        "type": "",
                        "returnType": "DrawerState",
                        "line": 14
                    }
                }
            },
            "templateData": "<mat-drawer #drawer class=\"example-sidenav\" mode=\"side\">\n  {{drawer.opened}}\n  <p>Auto-resizing sidenav</p>\n  <!-- <button (click)=\"showFiller = !showFiller\" mat-raised-button>\n    Toggle extra text\n  </button> -->\n</mat-drawer>\n"
        },
        {
            "name": "PrecipitationGraphComponent",
            "id": "component-PrecipitationGraphComponent-bb44050fbc5f4c502b9a56a754e5f54ea753133189d7fa46d1fc08a1210bec7540584283642bf00d1cea0637a43630a5adef0f51ce9eaec2f749474cb1098a5a",
            "file": "src/app/shared/modules/weather/components/precipitation-graph/precipitation-graph.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-precipitation-graph",
            "styleUrls": [
                "./precipitation-graph.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./precipitation-graph.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "precipitationChances",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "BasicGraphNode[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_precipitationChances",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BasicGraphNode[]",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "colorScheme",
                    "defaultValue": "{\n    domain: ['#65ace6']\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "gradient",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "showLegend",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "showXAxis",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "showXAxisLabel",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "showYAxis",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "showYAxisLabel",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "view",
                    "defaultValue": "[700, 190]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[number, number]",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "dateFormatting",
                    "args": [
                        {
                            "name": "yAxisTickLabel",
                            "type": "string | Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "yAxisTickLabel",
                            "type": "string | Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onActivate",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDeactivate",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSelect",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "valueFormatting",
                    "args": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {ChangeDetectorRef, Component, Input, OnInit} from '@angular/core';\nimport {BehaviorSubject, Subject, take, takeUntil} from \"rxjs\";\nimport {DatePipe} from \"@angular/common\";\nimport {BasicGraphNode} from \"../../../../models/BasicGraphNode\";\nimport {Node} from \"../../../../models/Node\";\n\n@Component({\n  selector: 'app-precipitation-graph',\n  templateUrl: './precipitation-graph.component.html',\n  styleUrls: ['./precipitation-graph.component.css']\n})\nexport class PrecipitationGraphComponent implements OnInit {\n  private _precipitationChances: BasicGraphNode[] = [];\n  get precipitationChances(): BasicGraphNode[] {\n    return this._precipitationChances;\n  }\n  @Input() set precipitationChances(value: BasicGraphNode[]) {\n    this._precipitationChances = value;\n    const changePump = new BehaviorSubject<boolean>(false)\n    changePump\n      .pipe(take(10))\n      .subscribe(() => {\n        setTimeout(() => {\n          this.view = [this.view[0]++, this.view[1]++];\n          this.changeDetectorRefs.detectChanges();\n          changePump.next(true);\n        }, 100)\n      });\n  }\n\n\n  view: [number, number] = [700, 190];\n\n  // options\n  showXAxis = true;\n  showYAxis = true;\n  gradient = true;\n  showLegend = false;\n  showXAxisLabel = false;\n  showYAxisLabel = false;\n  colorScheme: any = {\n    domain: ['#65ace6']\n  };\n\n  constructor(private changeDetectorRefs: ChangeDetectorRef) { }\n\n  onSelect(data: any): void { }\n\n  onActivate(data: any): void { }\n\n  onDeactivate(data: any): void { }\n\n  ngOnInit(): void { }\n\n  ngOnDestroy(): void { }\n\n  dateFormatting(yAxisTickLabel: string | Date) {\n    const datepipe: DatePipe = new DatePipe('en-US')\n    return datepipe.transform(yAxisTickLabel, 'h a')\n  }\n\n  valueFormatting(val: any) {\n    return Number(val) * 100 + '%';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./precipitation-graph.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "changeDetectorRefs",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "changeDetectorRefs",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "precipitationChances": {
                    "name": "precipitationChances",
                    "setSignature": {
                        "name": "precipitationChances",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "BasicGraphNode[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 17,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "BasicGraphNode[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "precipitationChances",
                        "type": "[]",
                        "returnType": "BasicGraphNode[]",
                        "line": 14
                    }
                }
            },
            "templateData": "<ngx-charts-area-chart\n  *ngIf='precipitationChances.length > 0'\n  style=\"fill: white;\"\n  [view]=\"view\"\n  [scheme]=\"colorScheme\"\n  [results]=\"precipitationChances\"\n  [gradient]=\"gradient\"\n  [xAxis]=\"showXAxis\"\n  [yAxis]=\"showYAxis\"\n  [legend]=\"showLegend\"\n  [showXAxisLabel]=\"showXAxisLabel\"\n  [showYAxisLabel]=\"showYAxisLabel\"\n  [xAxisTickFormatting]=\"dateFormatting\"\n  (select)=\"onSelect($event)\">\n</ngx-charts-area-chart>\n\n<div *ngIf='precipitationChances.length === 0 || !precipitationChances'>\n  No data available\n</div>\n"
        },
        {
            "name": "SearchableDropdownComponent",
            "id": "component-SearchableDropdownComponent-ee299c9dc853a3926774715ed50bda7fbf8952e0d0b1ed76ab84ef09db8d4ee171ab9dfcfab77e06b198062339a618d55837298cdd4713a78a8c34d87c2557d6",
            "file": "src/app/shared/modules/searchable-dropdown/searchable-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-searchable-dropdown",
            "styleUrls": [
                "./searchable-dropdown.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./searchable-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appearance",
                    "defaultValue": "'outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "\"legacy\" | \"standard\" | \"fill\" | \"outline\"",
                    "decorators": []
                },
                {
                    "name": "clearSearchAfterItemUpdate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "debug",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "errorMessages",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "literal type",
                    "decorators": []
                },
                {
                    "name": "innerLabelText",
                    "defaultValue": "'Inner Label Text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "any[] | null",
                    "decorators": []
                },
                {
                    "name": "itemSearchType",
                    "defaultValue": "'string'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"string\" | \"object\"",
                    "decorators": []
                },
                {
                    "name": "noOptionsInstruction",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "outerLabelText",
                    "defaultValue": "'Outer Label Text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "searchPattern",
                    "defaultValue": "'Id: ${id} Name: ${name}'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "selectedItem",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "widthClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "itemSearchStringEmitter",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter"
                },
                {
                    "name": "selectedItemEmitter",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "displayList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "itemSearchString",
                    "defaultValue": "new BehaviorSubject<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string>",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "applyFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "emitSelectedItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "filterForObjectItem",
                    "args": [
                        {
                            "name": "i",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findAllKeys",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getObjectItem",
                    "args": [
                        {
                            "name": "i",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "itemSearchStringValue",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "logging",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "stringDisplay",
                    "args": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateItemSearchString",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\n\n@Component({\n  selector: 'app-searchable-dropdown',\n  templateUrl: './searchable-dropdown.component.html',\n  styleUrls: ['./searchable-dropdown.component.css']\n})\nexport class SearchableDropdownComponent implements OnInit {\n  @Input() appearance: 'legacy' | 'standard' | 'fill' | 'outline' = 'outline';\n  @Input() outerLabelText = 'Outer Label Text';\n  @Input() innerLabelText = 'Inner Label Text';\n  @Input() noOptionsInstruction: string = '';\n\n  public displayList: any[] = [];\n  @Input() items: any[] | null = [];\n  @Input() itemSearchType: 'string' | 'object' = 'string';\n\n  // Pattern Matching similar to C#'s String Interpolation\n  @Input() searchPattern = 'Id: ${id} Name: ${name}';\n  @Input() widthClass = '';\n  @Input() debug = false;\n  @Input() required = false;\n  @Input() errorMessages: { [name: string]: string } = {};\n\n  @Input() selectedItem: any = undefined;\n  @Output() selectedItemEmitter: EventEmitter<any> = new EventEmitter<string>();\n\n  public itemSearchString: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  @Input() clearSearchAfterItemUpdate: boolean = false;\n  @Output() itemSearchStringEmitter = new EventEmitter<string>()\n\n  constructor() {\n    this.itemSearchString.subscribe(() => {\n      this.applyFilter();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.clearSearchAfterItemUpdate) {\n      this.itemSearchString.next('')\n    }\n\n    this.applyFilter();\n  }\n\n  ngOnInit(): void {\n    this.displayList = this.items ?? [];\n\n    this.itemSearchString.subscribe(() => {\n      this.applyFilter();\n    });\n  }\n\n  public stringDisplay(item: string): string {\n    return item.toString()?.toLowerCase();\n  }\n\n  public emitSelectedItem() {\n    this.selectedItemEmitter.emit(this.selectedItem);\n  }\n\n  public getObjectItem(i: any): string {\n    return this.filterForObjectItem(i).toString().toLowerCase();\n  }\n\n  public logging(e: any) {\n    console.log(e);\n  }\n\n  public filterForObjectItem(i: any) {\n    let returnString = this.searchPattern;\n    const keys = this.findAllKeys();\n    if (keys?.length === 0) return returnString;\n\n    for (const key of keys) {\n      const keyPattern = '${' + key + '}';\n      returnString = returnString?.replace(keyPattern, i[key]?.toString());\n    }\n    return returnString;\n  }\n\n  public updateItemSearchString($event: any) {\n    this.itemSearchString.next($event);\n    this.itemSearchStringEmitter.next($event);\n  }\n\n  private itemSearchStringValue(): string {\n    return this.itemSearchString.getValue().toString().toLowerCase();\n  };\n\n  private applyFilter() {\n    if (!this.items)\n      return;\n\n    const myNewList = [];\n    // Loop through list and get good values\n    for (const i of this.items) {\n      if (this.itemSearchType === 'object') {\n        if (this.getObjectItem(i)?.indexOf(this.itemSearchStringValue()) > -1)\n          myNewList.push(i);\n      } else if (this.stringDisplay(i)?.indexOf(this.itemSearchStringValue()) > -1) {\n        myNewList.push(i);\n      }\n    }\n    // Stuff to do after we get the results from the search\n    // my stuff here:\n    this.displayList = myNewList;\n  }\n\n  private findAllKeys() {\n    const items: RegExpMatchArray | null = this.searchPattern.match(/\\${\\w*\\d*\\s*}/g);\n    const finalItems = [];\n\n    if (items === null) return [];\n    for (const item of items) {\n      finalItems.push(item.toString().substring(2, item.toString().length - 1));\n    }\n    return finalItems;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".search-input {\r\n  overflow-x: hidden;\r\n  height: clamp(3vh, 34px);\r\n  padding: 6px 12px;\r\n  font-size: 14px;\r\n  line-height: 1.42857143;\r\n  color: #555;\r\n  background-color: #fff;\r\n  background-image: none;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.075);\r\n  transition: border-color ease-in-out;\r\n}\r\n.example-form-field {\r\n  width: 200px;\r\n}\r\n::ng-deep.mat-select-panel {\r\n  overflow-x: hidden!important;\r\n}\r\n",
                    "styleUrl": "./searchable-dropdown.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 31
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<!-- NGMODEL BASED SEARCH W/ INPUTS -->\n<mat-form-field style='overflow-x: hidden;' class='w-100' [appearance]='appearance'>\n  <mat-label>{{outerLabelText}}</mat-label>\n  <mat-select\n    id='searchField'\n    style='overflow-x: hidden;'\n    disableOptionCentering\n    ngDefaultControl\n    (keydown)='$event.stopPropagation()'\n    (selectionChange)='emitSelectedItem()'\n    [required]='required'\n    [ngModelOptions]='{standalone: true}'\n    [(ngModel)]='selectedItem'>\n    <div style=\"position: relative\">\n      <div style=\"display: inline-block;width: 100%\">\n        <input matInput\n               type='text'\n               autocomplete='off'\n               class=\"search-input w-100\"\n               ngDefaultControl\n               [placeholder]='innerLabelText'\n               [ngModelOptions]='{standalone: true}'\n               [ngModel]='itemSearchString | async'\n               (ngModelChange)='updateItemSearchString($event)'>\n      </div>\n      <div style=\"display: inline-block; position: absolute;right: 0;top: -5%;\">\n        <button *ngIf=\"itemSearchString | async\"\n                matSuffix\n                mat-icon-button\n                aria-label=\"Clear\"\n                (click)=\"itemSearchString.next('')\">\n          <mat-icon>close</mat-icon>\n        </button>\n      </div>\n    </div>\n\n    <mat-option disabled *ngIf=\"noOptionsInstruction && displayList.length === 0\">{{noOptionsInstruction}}</mat-option>\n    <mat-option>--</mat-option>\n    <mat-option *ngFor='let item of displayList;let i = index'\n                class='soc-clinician-option'\n                ngDefaultControl\n                [id]='\"searchableDropdown-option-\" + i'\n                [value]='item'>\n        <span *ngIf=\"itemSearchType === 'object'\">{{filterForObjectItem(item)}}</span>\n        <span *ngIf=\"itemSearchType === 'string'\">{{stringDisplay(item)}}</span>\n    </mat-option>\n  </mat-select>\n</mat-form-field>\n"
        },
        {
            "name": "TemperatureGraphComponent",
            "id": "component-TemperatureGraphComponent-6fd8f482fa230072beb533d6f58c5f9725d306035f28b8f736ddf9047000e481840de6feff87f58652e4ef4e54cfead53c635bd10b666215c1ee62363eb0cbcb",
            "file": "src/app/shared/modules/weather/components/temperature-graph/temperature-graph.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.Emulated"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-temperature-graph",
            "styleUrls": [
                "./temperature-graph.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./temperature-graph.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "temperatures",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "BasicGraphNode[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_temperatures",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BasicGraphNode[]",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "colorScheme",
                    "defaultValue": "{\n    domain: ['#C7B42C']\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "gradient",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "showLegend",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "showXAxis",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "showXAxisLabel",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "showYAxis",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "showYAxisLabel",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "view",
                    "defaultValue": "[700, 225]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[number, number]",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [
                {
                    "name": "dateFormatting",
                    "args": [
                        {
                            "name": "yAxisTickLabel",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "yAxisTickLabel",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSelect",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "valueFormatting",
                    "args": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnInit,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input,\n  ChangeDetectorRef,\n  OnDestroy\n} from '@angular/core';\nimport {BehaviorSubject, Subject, take, takeUntil} from 'rxjs';\nimport {DatePipe} from \"@angular/common\";\nimport {BasicGraphNode} from \"../../../../models/BasicGraphNode\";\n\n@Component({\n  selector: 'app-temperature-graph',\n  templateUrl: './temperature-graph.component.html',\n  styleUrls: ['./temperature-graph.component.css'],\n  encapsulation: ViewEncapsulation.Emulated,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TemperatureGraphComponent implements OnInit {\n  private _temperatures!: BasicGraphNode[];\n  get temperatures(): BasicGraphNode[] {\n    return this._temperatures;\n  }\n\n  @Input() set temperatures(value: BasicGraphNode[]) {\n    this._temperatures = value;\n\n    // doing this to stop a weird issue where the X Axis tick labels aren't rendering due to a change issue\n    const changePump = new BehaviorSubject<boolean>(false)\n    changePump\n      .pipe(take(10))\n      .subscribe(() => {\n        setTimeout(() => {\n          this.view = [this.view[0]++, this.view[1]++];\n          this.changeDetectorRefs.detectChanges();\n          changePump.next(true);\n        }, 100)\n      });\n  }\n\n  view: [number, number] = [700, 225];\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = false;\n  showXAxisLabel = false;\n  showYAxisLabel = false;\n  colorScheme: any = {\n    domain: ['#C7B42C']\n  };\n\n  constructor(private changeDetectorRefs: ChangeDetectorRef) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSelect(event: any) { }\n\n  dateFormatting(yAxisTickLabel: string) {\n    const datepipe: DatePipe = new DatePipe('en-US')\n    return datepipe.transform(yAxisTickLabel, 'h a')\n  }\n\n  valueFormatting(val: any) {\n    return `${val} F`;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".header {\r\n  margin-bottom: .5rem;\r\n}\r\n.chart-container .ngx-charts .line-highlight {\r\n   display: block !important;\r\n }\r\n\r\n",
                    "styleUrl": "./temperature-graph.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "changeDetectorRefs",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 52,
                "jsdoctags": [
                    {
                        "name": "changeDetectorRefs",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "temperatures": {
                    "name": "temperatures",
                    "setSignature": {
                        "name": "temperatures",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "BasicGraphNode[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 27,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "BasicGraphNode[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "temperatures",
                        "type": "[]",
                        "returnType": "BasicGraphNode[]",
                        "line": 23
                    }
                }
            },
            "templateData": "<ngx-charts-line-chart\n  style=\"fill: white;\"\n  class=\"line-highlight\"\n  *ngIf='temperatures.length > 0'\n  [view]=\"view\"\n  [scheme]=\"colorScheme\"\n  [results]=\"temperatures\"\n  [xAxis]=\"showXAxis\"\n  [yAxis]=\"showYAxis\"\n  [legend]=\"showLegend\"\n  [roundDomains]=\"true\"\n  [tooltipDisabled]=\"false\"\n  [showXAxisLabel]=\"showXAxisLabel\"\n  [showYAxisLabel]=\"showYAxisLabel\"\n  (select)=\"onSelect($event)\"\n  [yAxisTickFormatting]=\"valueFormatting\"\n  [xAxisTickFormatting]=\"dateFormatting\">\n  <ng-template #tooltipTemplate let-model=\"model\">\n    {{model.value}} F\n  </ng-template>\n</ngx-charts-line-chart>\n\n<div *ngIf='temperatures.length === 0 || !temperatures'>\n  No data available\n</div>\n"
        },
        {
            "name": "WeatherLocationInformationComponent",
            "id": "component-WeatherLocationInformationComponent-ca989e6fdd7ddd556352d9f0edf930f91e42986b42eeccbc47b2da692b1425c74a9f4f23fed60b8b4111a5661affbc755de52c9f29c094a97b01c4db6d27b55e",
            "file": "src/app/shared/modules/weather/components/weather-location-information/weather-location-information.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-weather-location-information",
            "styleUrls": [
                "./weather-location-information.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./weather-location-information.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "ILocationInformation",
                    "decorators": []
                },
                {
                    "name": "weatherInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "IWeatherLocationInfo",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_localDate",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_localDateT",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_weatherInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IWeatherLocationInfo",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {IWeatherLocationInfo} from \"../../../../models/IWeatherLocationInfo\";\nimport {ILocationInformation} from \"../../../../models/ILocationInformation\";\nimport {Node} from \"../../../../models/Node\";\n\nexport function getDateObj(string: Date | string): Date {\n  return new Date(string);\n}\n\n@Component({\n  selector: 'app-weather-location-information',\n  templateUrl: './weather-location-information.component.html',\n  styleUrls: ['./weather-location-information.component.css']\n})\nexport class WeatherLocationInformationComponent implements OnInit {\n  private _localDate: Date = new Date();\n  private _localDateT: Date = new Date();\n  private _weatherInfo!: IWeatherLocationInfo;\n  get weatherInfo(): IWeatherLocationInfo {\n    return this._weatherInfo;\n  }\n  @Input() set weatherInfo(value: IWeatherLocationInfo) {\n    this._localDate = new Date(value.date);\n    this._localDateT = new Date(value.date);\n    this._weatherInfo = value;\n  }\n\n  @Input() location!: ILocationInformation;\n\n  get localDate(): Date {\n    return this._localDate;\n  }\n  get localDateT(): Date {\n    return this._localDateT;\n  }\n\n  constructor() { }\n\n  ngOnInit(): void { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".weather-card-location-info {\r\n  margin-bottom: .5rem;\r\n}\r\n\r\n.margin-bottom-spacing {\r\n  margin-bottom: .15rem;\r\n}\r\n\r\n.date-spacing {\r\n  margin-right: 4px\r\n}\r\n\r\n.current-condition-image {\r\n  height: 64px;\r\n  margin: 1px 4px 0;\r\n  width: 64px;\r\n}\r\n\r\n.current-temperature-value {\r\n  height: 64px;\r\n  margin: 1px 4px 0;\r\n  width: 64px;\r\n  font-weight: 400;\r\n  line-height: 60px;\r\n  font-size: 48px;\r\n}\r\n\r\n.current-temperature-units {\r\n  height: 64px;\r\n  font-size: 24px;\r\n  line-height: 30px;\r\n  margin-top: 12px;\r\n  margin-right: 8px;\r\n  vertical-align: top;\r\n}\r\n\r\n.misc-font {\r\n  color: #c8cace;\r\n  font-size: 12px;\r\n}\r\n",
                    "styleUrl": "./weather-location-information.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 35
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "weatherInfo": {
                    "name": "weatherInfo",
                    "setSignature": {
                        "name": "weatherInfo",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "IWeatherLocationInfo",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 22,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "IWeatherLocationInfo",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "weatherInfo",
                        "type": "",
                        "returnType": "IWeatherLocationInfo",
                        "line": 19
                    }
                },
                "localDate": {
                    "name": "localDate",
                    "getSignature": {
                        "name": "localDate",
                        "type": "",
                        "returnType": "Date",
                        "line": 30
                    }
                },
                "localDateT": {
                    "name": "localDateT",
                    "getSignature": {
                        "name": "localDateT",
                        "type": "",
                        "returnType": "Date",
                        "line": 33
                    }
                }
            },
            "templateData": "<div style=\"display: inline-block;width: 50%\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"margin-bottom-spacing\">\n      <span>\n        <img class=\"current-condition-image\"\n             alt=\"{{weatherInfo.condition.text}}\"\n             src=\"{{weatherInfo.condition.icon}}\">\n      </span>\n    <span>\n        <span class=\"current-temperature-value\">{{ weatherInfo.temp_f }}</span>\n        <span class=\"current-temperature-units\">°F</span>\n      </span>\n    <span class=\"inline-block\">\n        <div class=\"misc-font\">\n          Precipitation: {{weatherInfo.precipitationIn | number: '1.2-2'}} in\n        </div>\n        <div class=\"misc-font\">\n          Humidity: {{weatherInfo.humidity}}%\n        </div>\n        <div class=\"misc-font\">\n          Wind: {{weatherInfo.wind_mph}} mph\n        </div>\n    </span>\n  </div>\n</div>\n\n<div style=\"display: inline-block;width: 50%\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"margin-bottom-spacing\">\n    {{location.name}}, {{location.region}}\n  </div>\n<!--  <div>{{localDate}}</div>-->\n<!--  <div>{{localDateT}}</div>-->\n<!--  <div>{{localDate.toUTCString()}}</div>-->\n  <div fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"margin-bottom-spacing misc-font\">\n    <span class=\"date-spacing\">{{localDate.getUTCDay() | longHandDay}}</span>\n    <span>\n      <span>{{localDate.getUTCFullYear()}}/</span>\n      <span>{{localDate.getUTCMonth() | leadingZeros: 2}}/</span>\n      <span>{{localDate.getUTCDate() | leadingZeros: 2}}</span>\n    </span>\n  </div>\n  <div fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"misc-font\">\n    {{weatherInfo.condition.text}}\n  </div>\n</div>\n"
        },
        {
            "name": "WeatherThumbnailComponent",
            "id": "component-WeatherThumbnailComponent-59aaa3300cb6e9afadb0e5f75ef71a649259136bdc51d10be3db931c4b10f59d57965260e2421d84c4eafb5169ca8d5a0dc62c3e7a1aaf67099f7e458da8b78c",
            "file": "src/app/shared/modules/weather/components/weather-thumbnail/weather-thumbnail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-weather-thumbnail",
            "styleUrls": [
                "./weather-thumbnail.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./weather-thumbnail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "forecast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "IWeatherThumbnailInfo",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {IWeatherThumbnailInfo} from \"../../../../models/IWeatherLocationInfo\";\nimport {WeatherCondition} from \"../../../../models/WeatherCondition\";\nimport {ForecastDay} from \"../../../../models/ForecastDay\";\n\n@Component({\n  selector: 'app-weather-thumbnail',\n  templateUrl: './weather-thumbnail.component.html',\n  styleUrls: ['./weather-thumbnail.component.css']\n})\nexport class WeatherThumbnailComponent implements OnInit {\n  @Input() forecast!: IWeatherThumbnailInfo;\n  get date(): Date {\n    return new Date(this.forecast.date);\n  }\n\n  get temperatureHigh(): number {\n    return this.forecast.temperatureHighF;\n  }\n  get temperatureLow(): number {\n    return this.forecast.temperatureLowF;\n  }\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".weather-thumbnail {\r\n  width: 100%;\r\n}\r\n\r\n.day-label {\r\n  color: #e9e9e9;\r\n  line-height: 15px;\r\n  padding-top: 7px;\r\n  /*margin-left: 15px;*/\r\n}\r\n\r\n.day-label-selected {\r\n  color: #222222;\r\n  line-height: 15px;\r\n  padding-top: 7px;\r\n  /*margin-left: 15px;*/\r\n}\r\n\r\n.condition-image-container {\r\n  display: inline-block;\r\n}\r\n\r\n.condition-image {\r\n  height: 48px;\r\n  margin: 1px 4px 0;\r\n  width: 48px;\r\n}\r\n\r\n.temperature-label {\r\n  font-size: 13px;\r\n  font-weight: normal;\r\n  line-height: 15px;\r\n  /*margin-left: 7px;*/\r\n}\r\n\r\n.temperature-high-label {\r\n  color: #e9e9e9;\r\n  padding-right: 5px;\r\n}\r\n\r\n.temperature-low-label {\r\n  color: #a4acb5;\r\n  display: inline-block;\r\n}\r\n",
                    "styleUrl": "./weather-thumbnail.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "date": {
                    "name": "date",
                    "getSignature": {
                        "name": "date",
                        "type": "",
                        "returnType": "Date",
                        "line": 13
                    }
                },
                "temperatureHigh": {
                    "name": "temperatureHigh",
                    "getSignature": {
                        "name": "temperatureHigh",
                        "type": "number",
                        "returnType": "number",
                        "line": 17
                    }
                },
                "temperatureLow": {
                    "name": "temperatureLow",
                    "getSignature": {
                        "name": "temperatureLow",
                        "type": "number",
                        "returnType": "number",
                        "line": 20
                    }
                }
            },
            "templateData": "<div>\n  <span class=\"day-label\"\n       aria-label=\"Saturday\"\n       fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    {{date.getDay() | shortHandDay}}\n  </span>\n\n  <span class=\"condition-image-container\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <img class=\"condition-image\" alt=\"{{forecast.condition.text}}\" src=\"{{forecast.condition.icon}}\">\n  </span>\n\n  <span class=\"temperature-label\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <span class=\"inline-block temperature-high-label\">{{temperatureHigh}}°</span>\n    <span class=\"inline-block temperature-low-label\">{{temperatureLow}}°</span>\n  </span>\n</div>\n"
        },
        {
            "name": "WindDirectionCardComponent",
            "id": "component-WindDirectionCardComponent-85e80c8918aa6e47947d5846b107372623a0eff366732ad15b5577f75687763bb68b892d107adc1f3e3a8ccab9bd072ffa7d24dbe4dca5afdb55a09626949898",
            "file": "src/app/shared/modules/weather/components/wind-direction-card/wind-direction-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-wind-direction-card",
            "styleUrls": [
                "./wind-direction-card.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./wind-direction-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "windDirections",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "IHasWindInformation[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {IHasWindInformation} from \"../../../../models/IHasWindInformation\";\n\n@Component({\n  selector: 'app-wind-direction-card',\n  templateUrl: './wind-direction-card.component.html',\n  styleUrls: ['./wind-direction-card.component.css']\n})\nexport class WindDirectionCardComponent implements OnInit {\n  @Input() windDirections: IHasWindInformation[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".mat-weather-card-container {\r\n  width: 64px;\r\n  height: 96px;\r\n  padding-right: 8px;\r\n  padding-left: 8px;\r\n}\r\n",
                    "styleUrl": "./wind-direction-card.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div style=\"display: inline-block;margin-right: 8px\">\n  <span *ngIf=\"windDirections.length > 0\">\n    <span *ngFor=\"let windDirection of windDirections\"\n         class=\"inline-block mat-weather-card-container\"\n         style=\"display: inline-block;\">\n      <app-wind-direction-thumbnail\n        [windSpeed]=\"windDirection.wind_mph\"\n        [windSpeedUnit]=\"'mph'\"\n        [windDirection]=\"windDirection.wind_dir\"\n        [date]=\"windDirection.time\">\n      </app-wind-direction-thumbnail>\n    </span>\n  </span>\n\n  <div *ngIf=\"!windDirections || windDirections.length === 0\">\n    No data available\n  </div>\n</div>\n"
        },
        {
            "name": "WindDirectionThumbnailComponent",
            "id": "component-WindDirectionThumbnailComponent-5d5aaaedfef826b6c52ae392d9f795affe5935db9ebb4bdb08b19d1555aa6d8dab94e352573f0715c853aa340bc6aa2213708a4f3124012216c3ba0529b95988",
            "file": "src/app/shared/modules/weather/components/wind-direction-thumbnail/wind-direction-thumbnail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-wind-direction-thumbnail",
            "styleUrls": [
                "./wind-direction-thumbnail.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./wind-direction-thumbnail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "date",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "Date",
                    "decorators": []
                },
                {
                    "name": "windDirection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "WindDirection | string",
                    "decorators": []
                },
                {
                    "name": "windSpeed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "windSpeedUnit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "SpeedUnits",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\n\nexport type SpeedUnits = 'mph' | 'kph';\n\nexport type WindDirection =\n  'E'   |\n  'ENE' |\n  'NE'  |\n  'NNE' |\n  'N'   |\n  'NNW' |\n  'NW'  |\n  'WNW' |\n  'W'   |\n  'WSW' |\n  'SW'  |\n  'SSW' |\n  'S'   |\n  'SSE' |\n  'SE'  |\n  'ESE';\n\n@Component({\n  selector: 'app-wind-direction-thumbnail',\n  templateUrl: './wind-direction-thumbnail.component.html',\n  styleUrls: ['./wind-direction-thumbnail.component.css']\n})\nexport class WindDirectionThumbnailComponent implements OnInit {\n  @Input() windSpeed!: number;\n  @Input() windSpeedUnit!: SpeedUnits;\n  @Input() windDirection!: WindDirection | string;\n  @Input() date: Date = new Date();\n  // E   -  0\n  // ENE -  22.5\n  // NE  -  45\n  // NNE -  67.5\n  // N   -  90\n  // NNW -  112.5\n  // NW  -  135\n  // WNW -  157.5\n  // W   -  180\n  // WSW -  202.5\n  // SW  -  225\n  // SSW -  247.5\n  // S   -  270\n  // SSE -  292.5\n  // SE  -  315\n  // ESE -  337.5\n\n  get WindArrowRotationFromDirection(): number {\n    switch (this.windDirection) {\n      case 'E':\n        return 0;\n      case 'ENE':\n        return 337.5;\n      case 'NE':\n        return 315;\n      case 'NNE':\n        return 292.5;\n      case 'N':\n        return 270;\n      case 'NNW':\n        return 247.5;\n      case 'NW':\n        return 225;\n      case 'WNW':\n        return 202.5;\n      case 'W':\n        return 180;\n      case 'WSW':\n        return 155.5;\n      case 'SW':\n        return 135 ;\n      case 'SSW':\n        return 112.5;\n      case 'S':\n        return 90;\n      case 'SSE':\n        return 67.5;\n      case 'SE':\n        return 45;\n      case 'ESE':\n        return 22.5;\n      default:\n        return 0;\n    }\n  }\n\n  get WindArrowSize(): string {\n    let normalizedSpeed = Number(this.windSpeed);\n    if (this.windSpeedUnit == 'kph')\n      normalizedSpeed *= 1.60934;\n\n    if (normalizedSpeed < 5)\n      return '12px';\n    else if (normalizedSpeed < 11)\n      return '16px';\n    else if (normalizedSpeed < 19)\n      return '20px';\n    else if (normalizedSpeed < 27)\n      return '24px';\n    else if (normalizedSpeed < 35)\n      return '28px';\n    else\n      return '32px';\n  }\n\n  constructor() { }\n\n  ngOnInit(): void { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wind-arrow {\r\n  transform-origin: 50% 50%;\r\n}\r\n\r\n.wind-speed {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.wind-arrow-container {\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.image-container {\r\n  height: 38px;\r\n  width: 38px;\r\n}\r\n",
                    "styleUrl": "./wind-direction-thumbnail.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 106
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "WindArrowRotationFromDirection": {
                    "name": "WindArrowRotationFromDirection",
                    "getSignature": {
                        "name": "WindArrowRotationFromDirection",
                        "type": "number",
                        "returnType": "number",
                        "line": 50
                    }
                },
                "WindArrowSize": {
                    "name": "WindArrowSize",
                    "getSignature": {
                        "name": "WindArrowSize",
                        "type": "string",
                        "returnType": "string",
                        "line": 89
                    }
                }
            },
            "templateData": "<div class=\"wind-speed\" aria-label=\"Saturday\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <span>{{windSpeed}} {{windSpeedUnit}}</span>\n</div>\n\n<div class=\"inline-block wind-arrow-container\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <div class=\"image-container\">\n    <span fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <img [style]='{transform: \"rotate(\" + WindArrowRotationFromDirection + \"deg)\", width: WindArrowSize}'\n               class=\"wind-arrow\"\n               alt=\"loading...\" src=\"https://ssl.gstatic.com/m/images/weather/wind_unselected.svg\"></span>\n  </div>\n</div>\n\n<div class=\"temperature-label\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <div class=\"temperature-high-label\">\n    <span class=\"inline-block\">{{date | date: 'h a'}}</span>\n  </div>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-f9935324f9f415ef41d1a7748673b4ba2b87a13e3d1be74821b7c659ffb66dfd4e98fb2682d5122caea697160ab272ffb57865567fc6e79f1a95732608b09740",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HeaderComponent} from './shared/components/header/header.component';\nimport {NavMenuComponent} from './shared/components/nav-menu/nav-menu.component';\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatProgressBarModule} from \"@angular/material/progress-bar\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {SearchableDropdownModule} from \"./shared/modules/searchable-dropdown/searchable-dropdown.module\";\nimport {HomeComponent} from './shared/components/home/home.component';\nimport {RouterModule} from \"@angular/router\";\nimport {AppRoutingModule} from \"./app.routing\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {WeatherModule} from \"./shared/modules/weather/weather.module\";\nimport {FlexModule} from \"@angular/flex-layout\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ScrollingModule} from \"@angular/cdk/scrolling\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    NavMenuComponent,\n    HomeComponent,\n  ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        RouterModule,\n        HttpClientModule,\n        AppRoutingModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatButtonModule,\n        MatSidenavModule,\n        SearchableDropdownModule,\n        WeatherModule,\n        FlexModule,\n        MatCardModule,\n        MatListModule,\n        FormsModule,\n        ScrollingModule,\n        MatTabsModule\n    ],\n  providers: [],\n  exports: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "NavMenuComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "SearchableDropdownModule"
                        },
                        {
                            "name": "WeatherModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-2a86a5231acbdb2399f776fdd14d99135311897b1644333d956df0bb2637ce0008171ad7b715bbd72e2f400c873e8853c901efdf8389331ebadf924231878d37",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.routing.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from \"@angular/core\";\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\nimport {HomeComponent} from \"./shared/components/home/home.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n    data: {\r\n      title: 'Weather Home'\r\n    }\r\n  },\r\n  {\r\n    path: '**',\r\n    component: HomeComponent,\r\n    data: {\r\n      title: 'Weather Home'\r\n    }\r\n  },\r\n];\r\n\r\n// configures NgModule imports and exports\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SearchableDropdownModule",
            "id": "module-SearchableDropdownModule-5800557175079782f21bcfc1a417a78989eef8fb2ca1f07becaafe2b9af8c80d5a800473555e69fe1603af9918b0437bce1321826de3f152c17acc4e24e1da14",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/searchable-dropdown/searchable-dropdown.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SearchableDropdownComponent } from './searchable-dropdown.component';\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatIconModule} from \"@angular/material/icon\";\n\n\n\n@NgModule({\n  declarations: [\n    SearchableDropdownComponent\n  ],\n  exports: [\n    SearchableDropdownComponent\n  ],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatButtonModule,\n    MatIconModule\n  ]\n})\nexport class SearchableDropdownModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SearchableDropdownComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SearchableDropdownComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "WeatherModule",
            "id": "module-WeatherModule-be2e04a62049067d2a51a9da82859ff25ef27bda984f9107b965ca474abf999fe48f6a7be2de61f7b42b25e23ba3b3a7ac4e46cdb3619fe241180883592f3154",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/modules/weather/weather.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WeatherThumbnailComponent } from './components/weather-thumbnail/weather-thumbnail.component';\nimport {ShortHandDayPipe} from \"./pipes/short-hand-day.pipe\";\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\nimport { BasicWeatherCardComponent } from './components/basic-weather-card/basic-weather-card.component';\nimport {MatCardModule} from \"@angular/material/card\";\nimport { LongHandDayPipe } from './pipes/long-hand-day.pipe';\nimport { LeadingZerosPipe } from './pipes/leading-zeros.pipe';\nimport { AdvancedWeatherComponent } from './components/advanced-weather/advanced-weather.component';\nimport { TemperatureGraphComponent } from './components/temperature-graph/temperature-graph.component';\nimport { PrecipitationGraphComponent } from './components/precipitation-graph/precipitation-graph.component';\nimport {AreaChartModule, BarChartModule, LineChartModule} from \"@swimlane/ngx-charts\";\nimport { WindDirectionThumbnailComponent } from './components/wind-direction-thumbnail/wind-direction-thumbnail.component';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport { WindDirectionCardComponent } from './components/wind-direction-card/wind-direction-card.component';\nimport { WeatherLocationInformationComponent } from './components/weather-location-information/weather-location-information.component';\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport {MatListModule} from \"@angular/material/list\";\n\n@NgModule({\n  declarations: [\n    WeatherThumbnailComponent,\n    ShortHandDayPipe,\n    BasicWeatherCardComponent,\n    LongHandDayPipe,\n    LeadingZerosPipe,\n    AdvancedWeatherComponent,\n    TemperatureGraphComponent,\n    PrecipitationGraphComponent,\n    WindDirectionThumbnailComponent,\n    WindDirectionCardComponent,\n    WeatherLocationInformationComponent\n  ],\n  exports: [\n    WindDirectionThumbnailComponent,\n    BasicWeatherCardComponent,\n    AdvancedWeatherComponent\n  ],\n    imports: [\n        CommonModule,\n        FlexLayoutModule,\n        MatCardModule,\n        LineChartModule,\n        BarChartModule,\n        MatIconModule,\n        MatTabsModule,\n        MatListModule,\n        AreaChartModule,\n    ]\n})\nexport class WeatherModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AdvancedWeatherComponent"
                        },
                        {
                            "name": "BasicWeatherCardComponent"
                        },
                        {
                            "name": "LeadingZerosPipe"
                        },
                        {
                            "name": "LongHandDayPipe"
                        },
                        {
                            "name": "PrecipitationGraphComponent"
                        },
                        {
                            "name": "ShortHandDayPipe"
                        },
                        {
                            "name": "TemperatureGraphComponent"
                        },
                        {
                            "name": "WeatherLocationInformationComponent"
                        },
                        {
                            "name": "WeatherThumbnailComponent"
                        },
                        {
                            "name": "WindDirectionCardComponent"
                        },
                        {
                            "name": "WindDirectionThumbnailComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AdvancedWeatherComponent"
                        },
                        {
                            "name": "BasicWeatherCardComponent"
                        },
                        {
                            "name": "WindDirectionThumbnailComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "currentForecastInformation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/data/CurrentForecastInformation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CurrentForecastInformation",
                "defaultValue": "{\r\n  \"last_updated_epoch\": 1659195000,\r\n  \"last_updated\": new Date(\"2022-07-30 08:30\"),\r\n  \"temp_c\": 21.1,\r\n  \"temp_f\": 70.0,\r\n  \"is_day\": 1,\r\n  \"condition\": {\r\n    \"text\": \"Sunny\",\r\n    \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n    \"code\": 1000\r\n  },\r\n  \"wind_mph\": 2.2,\r\n  \"wind_kph\": 3.6,\r\n  \"wind_degree\": 10,\r\n  \"wind_dir\": \"N\",\r\n  \"pressure_mb\": 1012.0,\r\n  \"pressure_in\": 29.88,\r\n  \"precip_mm\": 0.0,\r\n  \"precip_in\": 0.0,\r\n  \"humidity\": 76,\r\n  \"cloud\": 0,\r\n  \"feelslike_c\": 21.1,\r\n  \"feelslike_f\": 70.0,\r\n  \"vis_km\": 16.0,\r\n  \"vis_miles\": 9.0,\r\n  \"uv\": 5.0,\r\n  \"gust_mph\": 4.3,\r\n  \"gust_kph\": 6.8\r\n} as CurrentForecastInformation"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  weatherApiKey: \"51644aeaf59c4a79a4e05701223007\" // This should not be stored here\n                                                  // these calls should most likely go through a thin API that we control\n                                                  // and that will protect our key from being stolen by a hacker.\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  weatherApiKey: \"51644aeaf59c4a79a4e05701223007\" // This should not be stored here\n                                                  // these calls should most likely go through a thin API that we control\n                                                  // and that will protect our key from being stolen by a hacker.\n}"
            },
            {
                "name": "forecasts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/data/Forecasts.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new Forecasts([\r\n  new ForecastDay(\r\n    new Date(\"2022-07-30\"),\r\n    1659139200,\r\n    {\r\n      \"maxtemp_c\": 39.9,\r\n      \"maxtemp_f\": 103.8,\r\n      \"mintemp_c\": 17.5,\r\n      \"mintemp_f\": 63.5,\r\n      \"avgtemp_c\": 27.6,\r\n      \"avgtemp_f\": 81.7,\r\n      \"maxwind_mph\": 10.3,\r\n      \"maxwind_kph\": 16.6,\r\n      \"totalprecip_mm\": 0.0,\r\n      \"totalprecip_in\": 0.0,\r\n      \"avgvis_km\": 10.0,\r\n      \"avgvis_miles\": 6.0,\r\n      \"avghumidity\": 51.0,\r\n      \"daily_will_it_rain\": 0,\r\n      \"daily_chance_of_rain\": 0,\r\n      \"daily_will_it_snow\": 0,\r\n      \"daily_chance_of_snow\": 0,\r\n      \"condition\": {\r\n        \"text\": \"Sunny\",\r\n        \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n        \"code\": 1000\r\n      },\r\n      \"uv\": 7.0\r\n    },\r\n    {\r\n      \"sunrise\": \"05:52 AM\",\r\n      \"sunset\": \"08:42 PM\",\r\n      \"moonrise\": \"07:36 AM\",\r\n      \"moonset\": \"10:10 PM\",\r\n      \"moon_phase\": \"Waxing Crescent\",\r\n      \"moon_illumination\": 8\r\n    },\r\n    [\r\n      {\r\n        \"time_epoch\": 1659164400,\r\n        \"time\": new Date(\"2022-07-30 00:00\"),\r\n        \"temp_c\": 20.8,\r\n        \"temp_f\": 69.4,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.8,\r\n        \"wind_kph\": 6.1,\r\n        \"wind_degree\": 338,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.83,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 74,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 20.8,\r\n        \"feelslike_f\": 69.4,\r\n        \"windchill_c\": 20.8,\r\n        \"windchill_f\": 69.4,\r\n        \"heatindex_c\": 20.8,\r\n        \"heatindex_f\": 69.4,\r\n        \"dewpoint_c\": 15.9,\r\n        \"dewpoint_f\": 60.6,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 8.1,\r\n        \"gust_kph\": 13.0,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659168000,\r\n        \"time\": new Date(\"2022-07-30 01:00\"),\r\n        \"temp_c\": 19.9,\r\n        \"temp_f\": 67.8,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 339,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.84,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 77,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 19.9,\r\n        \"feelslike_f\": 67.8,\r\n        \"windchill_c\": 19.9,\r\n        \"windchill_f\": 67.8,\r\n        \"heatindex_c\": 19.9,\r\n        \"heatindex_f\": 67.8,\r\n        \"dewpoint_c\": 15.7,\r\n        \"dewpoint_f\": 60.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659171600,\r\n        \"time\": new Date(\"2022-07-30 02:00\"),\r\n        \"temp_c\": 19.2,\r\n        \"temp_f\": 66.6,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 348,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.85,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 79,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 19.2,\r\n        \"feelslike_f\": 66.6,\r\n        \"windchill_c\": 19.2,\r\n        \"windchill_f\": 66.6,\r\n        \"heatindex_c\": 19.2,\r\n        \"heatindex_f\": 66.6,\r\n        \"dewpoint_c\": 15.4,\r\n        \"dewpoint_f\": 59.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659175200,\r\n        \"time\": new Date(\"2022-07-30 03:00\"),\r\n        \"temp_c\": 18.6,\r\n        \"temp_f\": 65.5,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.1,\r\n        \"wind_kph\": 5.0,\r\n        \"wind_degree\": 351,\r\n        \"wind_dir\": \"N\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 81,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 18.6,\r\n        \"feelslike_f\": 65.5,\r\n        \"windchill_c\": 18.6,\r\n        \"windchill_f\": 65.5,\r\n        \"heatindex_c\": 18.6,\r\n        \"heatindex_f\": 65.5,\r\n        \"dewpoint_c\": 15.3,\r\n        \"dewpoint_f\": 59.5,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.5,\r\n        \"gust_kph\": 10.4,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659178800,\r\n        \"time\": new Date(\"2022-07-30 04:00\"),\r\n        \"temp_c\": 18.2,\r\n        \"temp_f\": 64.8,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.7,\r\n        \"wind_kph\": 4.3,\r\n        \"wind_degree\": 349,\r\n        \"wind_dir\": \"N\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 83,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 18.2,\r\n        \"feelslike_f\": 64.8,\r\n        \"windchill_c\": 18.2,\r\n        \"windchill_f\": 64.8,\r\n        \"heatindex_c\": 18.2,\r\n        \"heatindex_f\": 64.8,\r\n        \"dewpoint_c\": 15.2,\r\n        \"dewpoint_f\": 59.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.6,\r\n        \"gust_kph\": 9.0,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659182400,\r\n        \"time\": new Date(\"2022-07-30 05:00\"),\r\n        \"temp_c\": 17.9,\r\n        \"temp_f\": 64.2,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.5,\r\n        \"wind_kph\": 4.0,\r\n        \"wind_degree\": 342,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.87,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 85,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 17.9,\r\n        \"feelslike_f\": 64.2,\r\n        \"windchill_c\": 17.9,\r\n        \"windchill_f\": 64.2,\r\n        \"heatindex_c\": 17.9,\r\n        \"heatindex_f\": 64.2,\r\n        \"dewpoint_c\": 15.3,\r\n        \"dewpoint_f\": 59.5,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.1,\r\n        \"gust_kph\": 8.3,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659186000,\r\n        \"time\": new Date(\"2022-07-30 06:00\"),\r\n        \"temp_c\": 17.5,\r\n        \"temp_f\": 63.5,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.7,\r\n        \"wind_kph\": 4.3,\r\n        \"wind_degree\": 343,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.88,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 86,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 17.5,\r\n        \"feelslike_f\": 63.5,\r\n        \"windchill_c\": 17.5,\r\n        \"windchill_f\": 63.5,\r\n        \"heatindex_c\": 17.5,\r\n        \"heatindex_f\": 63.5,\r\n        \"dewpoint_c\": 15.1,\r\n        \"dewpoint_f\": 59.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.6,\r\n        \"gust_kph\": 9.0,\r\n        \"uv\": 5.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659189600,\r\n        \"time\": new Date(\"2022-07-30 07:00\"),\r\n        \"temp_c\": 18.9,\r\n        \"temp_f\": 66.0,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.5,\r\n        \"wind_kph\": 4.0,\r\n        \"wind_degree\": 349,\r\n        \"wind_dir\": \"N\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.89,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 81,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 18.9,\r\n        \"feelslike_f\": 66.0,\r\n        \"windchill_c\": 18.9,\r\n        \"windchill_f\": 66.0,\r\n        \"heatindex_c\": 18.9,\r\n        \"heatindex_f\": 66.0,\r\n        \"dewpoint_c\": 15.5,\r\n        \"dewpoint_f\": 59.9,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 4.3,\r\n        \"gust_kph\": 6.8,\r\n        \"uv\": 5.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659193200,\r\n        \"time\": new Date(\"2022-07-30 08:00\"),\r\n        \"temp_c\": 21.7,\r\n        \"temp_f\": 71.1,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.7,\r\n        \"wind_kph\": 4.3,\r\n        \"wind_degree\": 344,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.89,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 69,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 21.7,\r\n        \"feelslike_f\": 71.1,\r\n        \"windchill_c\": 21.7,\r\n        \"windchill_f\": 71.1,\r\n        \"heatindex_c\": 24.5,\r\n        \"heatindex_f\": 76.1,\r\n        \"dewpoint_c\": 15.8,\r\n        \"dewpoint_f\": 60.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 3.4,\r\n        \"gust_kph\": 5.4,\r\n        \"uv\": 6.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659196800,\r\n        \"time\": new Date(\"2022-07-30 09:00\"),\r\n        \"temp_c\": 24.5,\r\n        \"temp_f\": 76.1,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.5,\r\n        \"wind_kph\": 4.0,\r\n        \"wind_degree\": 337,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.89,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 60,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 25.8,\r\n        \"feelslike_f\": 78.4,\r\n        \"windchill_c\": 24.5,\r\n        \"windchill_f\": 76.1,\r\n        \"heatindex_c\": 25.8,\r\n        \"heatindex_f\": 78.4,\r\n        \"dewpoint_c\": 16.2,\r\n        \"dewpoint_f\": 61.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 2.9,\r\n        \"gust_kph\": 4.7,\r\n        \"uv\": 6.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659200400,\r\n        \"time\": new Date(\"2022-07-30 10:00\"),\r\n        \"temp_c\": 27.4,\r\n        \"temp_f\": 81.3,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.9,\r\n        \"wind_kph\": 4.7,\r\n        \"wind_degree\": 341,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.88,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 51,\r\n        \"cloud\": 5,\r\n        \"feelslike_c\": 28.1,\r\n        \"feelslike_f\": 82.6,\r\n        \"windchill_c\": 27.4,\r\n        \"windchill_f\": 81.3,\r\n        \"heatindex_c\": 28.1,\r\n        \"heatindex_f\": 82.6,\r\n        \"dewpoint_c\": 16.3,\r\n        \"dewpoint_f\": 61.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 3.4,\r\n        \"gust_kph\": 5.4,\r\n        \"uv\": 7.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659204000,\r\n        \"time\": new Date(\"2022-07-30 11:00\"),\r\n        \"temp_c\": 32.9,\r\n        \"temp_f\": 91.2,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.6,\r\n        \"wind_kph\": 5.8,\r\n        \"wind_degree\": 358,\r\n        \"wind_dir\": \"N\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.85,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 43,\r\n        \"cloud\": 15,\r\n        \"feelslike_c\": 34.9,\r\n        \"feelslike_f\": 94.8,\r\n        \"windchill_c\": 32.9,\r\n        \"windchill_f\": 91.2,\r\n        \"heatindex_c\": 34.9,\r\n        \"heatindex_f\": 94.8,\r\n        \"dewpoint_c\": 18.6,\r\n        \"dewpoint_f\": 65.5,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 4.0,\r\n        \"gust_kph\": 6.5,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659207600,\r\n        \"time\": new Date(\"2022-07-30 12:00\"),\r\n        \"temp_c\": 33.6,\r\n        \"temp_f\": 92.5,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 4.5,\r\n        \"wind_kph\": 7.2,\r\n        \"wind_degree\": 334,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.84,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 35,\r\n        \"cloud\": 16,\r\n        \"feelslike_c\": 34.4,\r\n        \"feelslike_f\": 93.9,\r\n        \"windchill_c\": 33.6,\r\n        \"windchill_f\": 92.5,\r\n        \"heatindex_c\": 34.4,\r\n        \"heatindex_f\": 93.9,\r\n        \"dewpoint_c\": 16.2,\r\n        \"dewpoint_f\": 61.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.1,\r\n        \"gust_kph\": 8.3,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659211200,\r\n        \"time\": new Date(\"2022-07-30 13:00\"),\r\n        \"temp_c\": 37.6,\r\n        \"temp_f\": 99.7,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 5.6,\r\n        \"wind_kph\": 9.0,\r\n        \"wind_degree\": 337,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.83,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 29,\r\n        \"cloud\": 8,\r\n        \"feelslike_c\": 39.1,\r\n        \"feelslike_f\": 102.4,\r\n        \"windchill_c\": 37.6,\r\n        \"windchill_f\": 99.7,\r\n        \"heatindex_c\": 39.1,\r\n        \"heatindex_f\": 102.4,\r\n        \"dewpoint_c\": 16.4,\r\n        \"dewpoint_f\": 61.5,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.5,\r\n        \"gust_kph\": 10.4,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659214800,\r\n        \"time\": new Date(\"2022-07-30 14:00\"),\r\n        \"temp_c\": 39.9,\r\n        \"temp_f\": 103.8,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 6.7,\r\n        \"wind_kph\": 10.8,\r\n        \"wind_degree\": 331,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.81,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 23,\r\n        \"cloud\": 12,\r\n        \"feelslike_c\": 40.7,\r\n        \"feelslike_f\": 105.3,\r\n        \"windchill_c\": 39.9,\r\n        \"windchill_f\": 103.8,\r\n        \"heatindex_c\": 40.7,\r\n        \"heatindex_f\": 105.3,\r\n        \"dewpoint_c\": 14.7,\r\n        \"dewpoint_f\": 58.5,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 7.8,\r\n        \"gust_kph\": 12.6,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659218400,\r\n        \"time\": new Date(\"2022-07-30 15:00\"),\r\n        \"temp_c\": 38.8,\r\n        \"temp_f\": 101.8,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Partly cloudy\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/116.png\",\r\n          \"code\": 1003\r\n        },\r\n        \"wind_mph\": 8.1,\r\n        \"wind_kph\": 13.0,\r\n        \"wind_degree\": 338,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.78,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 18,\r\n        \"cloud\": 46,\r\n        \"feelslike_c\": 38.2,\r\n        \"feelslike_f\": 100.8,\r\n        \"windchill_c\": 38.8,\r\n        \"windchill_f\": 101.8,\r\n        \"heatindex_c\": 38.2,\r\n        \"heatindex_f\": 100.8,\r\n        \"dewpoint_c\": 10.3,\r\n        \"dewpoint_f\": 50.5,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 9.2,\r\n        \"gust_kph\": 14.8,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659222000,\r\n        \"time\": new Date(\"2022-07-30 16:00\"),\r\n        \"temp_c\": 39.2,\r\n        \"temp_f\": 102.6,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 8.7,\r\n        \"wind_kph\": 14.0,\r\n        \"wind_degree\": 334,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1008.0,\r\n        \"pressure_in\": 29.76,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 17,\r\n        \"cloud\": 22,\r\n        \"feelslike_c\": 38.8,\r\n        \"feelslike_f\": 101.8,\r\n        \"windchill_c\": 39.2,\r\n        \"windchill_f\": 102.6,\r\n        \"heatindex_c\": 38.8,\r\n        \"heatindex_f\": 101.8,\r\n        \"dewpoint_c\": 9.3,\r\n        \"dewpoint_f\": 48.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 10.1,\r\n        \"gust_kph\": 16.2,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659225600,\r\n        \"time\": new Date(\"2022-07-30 17:00\"),\r\n        \"temp_c\": 38.8,\r\n        \"temp_f\": 101.8,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 10.3,\r\n        \"wind_kph\": 16.6,\r\n        \"wind_degree\": 339,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1007.0,\r\n        \"pressure_in\": 29.75,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 17,\r\n        \"cloud\": 20,\r\n        \"feelslike_c\": 38.2,\r\n        \"feelslike_f\": 100.8,\r\n        \"windchill_c\": 38.8,\r\n        \"windchill_f\": 101.8,\r\n        \"heatindex_c\": 38.2,\r\n        \"heatindex_f\": 100.8,\r\n        \"dewpoint_c\": 9.3,\r\n        \"dewpoint_f\": 48.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 11.9,\r\n        \"gust_kph\": 19.1,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659229200,\r\n        \"time\": new Date(\"2022-07-30 18:00\"),\r\n        \"temp_c\": 38.7,\r\n        \"temp_f\": 101.7,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 8.7,\r\n        \"wind_kph\": 14.0,\r\n        \"wind_degree\": 340,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1007.0,\r\n        \"pressure_in\": 29.75,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 20,\r\n        \"cloud\": 14,\r\n        \"feelslike_c\": 38.2,\r\n        \"feelslike_f\": 100.8,\r\n        \"windchill_c\": 38.7,\r\n        \"windchill_f\": 101.7,\r\n        \"heatindex_c\": 38.2,\r\n        \"heatindex_f\": 100.8,\r\n        \"dewpoint_c\": 12.0,\r\n        \"dewpoint_f\": 53.6,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 10.1,\r\n        \"gust_kph\": 16.2,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659232800,\r\n        \"time\": new Date(\"2022-07-30 19:00\"),\r\n        \"temp_c\": 35.4,\r\n        \"temp_f\": 95.7,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 7.8,\r\n        \"wind_kph\": 12.6,\r\n        \"wind_degree\": 321,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1008.0,\r\n        \"pressure_in\": 29.75,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 27,\r\n        \"cloud\": 7,\r\n        \"feelslike_c\": 35.1,\r\n        \"feelslike_f\": 95.2,\r\n        \"windchill_c\": 35.4,\r\n        \"windchill_f\": 95.7,\r\n        \"heatindex_c\": 35.1,\r\n        \"heatindex_f\": 95.2,\r\n        \"dewpoint_c\": 13.4,\r\n        \"dewpoint_f\": 56.1,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 11.6,\r\n        \"gust_kph\": 18.7,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659236400,\r\n        \"time\": new Date(\"2022-07-30 20:00\"),\r\n        \"temp_c\": 29.9,\r\n        \"temp_f\": 85.8,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 6.9,\r\n        \"wind_kph\": 11.2,\r\n        \"wind_degree\": 302,\r\n        \"wind_dir\": \"WNW\",\r\n        \"pressure_mb\": 1008.0,\r\n        \"pressure_in\": 29.78,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 38,\r\n        \"cloud\": 4,\r\n        \"feelslike_c\": 29.8,\r\n        \"feelslike_f\": 85.6,\r\n        \"windchill_c\": 29.9,\r\n        \"windchill_f\": 85.8,\r\n        \"heatindex_c\": 29.8,\r\n        \"heatindex_f\": 85.6,\r\n        \"dewpoint_c\": 14.1,\r\n        \"dewpoint_f\": 57.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 14.5,\r\n        \"gust_kph\": 23.4,\r\n        \"uv\": 7.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659240000,\r\n        \"time\": new Date(\"2022-07-30 21:00\"),\r\n        \"temp_c\": 26.2,\r\n        \"temp_f\": 79.2,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 5.8,\r\n        \"wind_kph\": 9.4,\r\n        \"wind_degree\": 315,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.8,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 43,\r\n        \"cloud\": 7,\r\n        \"feelslike_c\": 26.4,\r\n        \"feelslike_f\": 79.5,\r\n        \"windchill_c\": 26.2,\r\n        \"windchill_f\": 79.2,\r\n        \"heatindex_c\": 26.4,\r\n        \"heatindex_f\": 79.5,\r\n        \"dewpoint_c\": 12.6,\r\n        \"dewpoint_f\": 54.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 12.3,\r\n        \"gust_kph\": 19.8,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659243600,\r\n        \"time\": new Date(\"2022-07-30 22:00\"),\r\n        \"temp_c\": 24.2,\r\n        \"temp_f\": 75.6,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 5.1,\r\n        \"wind_kph\": 8.3,\r\n        \"wind_degree\": 328,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.82,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 45,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 25.1,\r\n        \"feelslike_f\": 77.2,\r\n        \"windchill_c\": 24.2,\r\n        \"windchill_f\": 75.6,\r\n        \"heatindex_c\": 25.1,\r\n        \"heatindex_f\": 77.2,\r\n        \"dewpoint_c\": 11.6,\r\n        \"dewpoint_f\": 52.9,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 10.7,\r\n        \"gust_kph\": 17.3,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659247200,\r\n        \"time\": new Date(\"2022-07-30 23:00\"),\r\n        \"temp_c\": 22.5,\r\n        \"temp_f\": 72.5,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 4.0,\r\n        \"wind_kph\": 6.5,\r\n        \"wind_degree\": 325,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.84,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 48,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 24.5,\r\n        \"feelslike_f\": 76.1,\r\n        \"windchill_c\": 22.5,\r\n        \"windchill_f\": 72.5,\r\n        \"heatindex_c\": 24.5,\r\n        \"heatindex_f\": 76.1,\r\n        \"dewpoint_c\": 10.8,\r\n        \"dewpoint_f\": 51.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 8.5,\r\n        \"gust_kph\": 13.7,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation\r\n    ]\r\n  ),\r\n  new ForecastDay(\r\n    new Date(\"2022-07-31\"),\r\n    1659225600,\r\n    {\r\n      \"maxtemp_c\": 39.8,\r\n      \"maxtemp_f\": 103.6,\r\n      \"mintemp_c\": 16.6,\r\n      \"mintemp_f\": 61.9,\r\n      \"avgtemp_c\": 26.5,\r\n      \"avgtemp_f\": 79.7,\r\n      \"maxwind_mph\": 8.9,\r\n      \"maxwind_kph\": 14.4,\r\n      \"totalprecip_mm\": 0.0,\r\n      \"totalprecip_in\": 0.0,\r\n      \"avgvis_km\": 10.0,\r\n      \"avgvis_miles\": 6.0,\r\n      \"avghumidity\": 38.0,\r\n      \"daily_will_it_rain\": 0,\r\n      \"daily_chance_of_rain\": 0,\r\n      \"daily_will_it_snow\": 0,\r\n      \"daily_chance_of_snow\": 0,\r\n      \"condition\": {\r\n        \"text\": \"Sunny\",\r\n        \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n        \"code\": 1000\r\n      },\r\n      \"uv\": 7.0\r\n    },\r\n    {\r\n      \"sunrise\": \"05:53 AM\",\r\n      \"sunset\": \"08:40 PM\",\r\n      \"moonrise\": \"08:43 AM\",\r\n      \"moonset\": \"10:30 PM\",\r\n      \"moon_phase\": \"Waxing Crescent\",\r\n      \"moon_illumination\": 12\r\n    },\r\n    [\r\n      {\r\n        \"time_epoch\": 1659250800,\r\n        \"time\": new Date(\"2022-07-31 00:00\"),\r\n        \"temp_c\": 21.0,\r\n        \"temp_f\": 69.8,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 343,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.85,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 49,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 21.0,\r\n        \"feelslike_f\": 69.8,\r\n        \"windchill_c\": 21.0,\r\n        \"windchill_f\": 69.8,\r\n        \"heatindex_c\": 21.0,\r\n        \"heatindex_f\": 69.8,\r\n        \"dewpoint_c\": 10.0,\r\n        \"dewpoint_f\": 50.0,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659254400,\r\n        \"time\": new Date(\"2022-07-31 01:00\"),\r\n        \"temp_c\": 19.9,\r\n        \"temp_f\": 67.8,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 349,\r\n        \"wind_dir\": \"N\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 51,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 19.9,\r\n        \"feelslike_f\": 67.8,\r\n        \"windchill_c\": 19.9,\r\n        \"windchill_f\": 67.8,\r\n        \"heatindex_c\": 19.9,\r\n        \"heatindex_f\": 67.8,\r\n        \"dewpoint_c\": 9.6,\r\n        \"dewpoint_f\": 49.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659258000,\r\n        \"time\": new Date(\"2022-07-31 02:00\"),\r\n        \"temp_c\": 18.9,\r\n        \"temp_f\": 66.0,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 341,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 53,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 18.9,\r\n        \"feelslike_f\": 66.0,\r\n        \"windchill_c\": 18.9,\r\n        \"windchill_f\": 66.0,\r\n        \"heatindex_c\": 18.9,\r\n        \"heatindex_f\": 66.0,\r\n        \"dewpoint_c\": 9.0,\r\n        \"dewpoint_f\": 48.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659261600,\r\n        \"time\": new Date(\"2022-07-31 03:00\"),\r\n        \"temp_c\": 18.0,\r\n        \"temp_f\": 64.4,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.6,\r\n        \"wind_kph\": 5.8,\r\n        \"wind_degree\": 348,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 53,\r\n        \"cloud\": 3,\r\n        \"feelslike_c\": 18.0,\r\n        \"feelslike_f\": 64.4,\r\n        \"windchill_c\": 18.0,\r\n        \"windchill_f\": 64.4,\r\n        \"heatindex_c\": 18.0,\r\n        \"heatindex_f\": 64.4,\r\n        \"dewpoint_c\": 8.4,\r\n        \"dewpoint_f\": 47.1,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 7.6,\r\n        \"gust_kph\": 12.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659265200,\r\n        \"time\": new Date(\"2022-07-31 04:00\"),\r\n        \"temp_c\": 17.4,\r\n        \"temp_f\": 63.3,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.6,\r\n        \"wind_kph\": 5.8,\r\n        \"wind_degree\": 335,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 54,\r\n        \"cloud\": 2,\r\n        \"feelslike_c\": 17.4,\r\n        \"feelslike_f\": 63.3,\r\n        \"windchill_c\": 17.4,\r\n        \"windchill_f\": 63.3,\r\n        \"heatindex_c\": 17.4,\r\n        \"heatindex_f\": 63.3,\r\n        \"dewpoint_c\": 7.9,\r\n        \"dewpoint_f\": 46.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 7.6,\r\n        \"gust_kph\": 12.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659268800,\r\n        \"time\": new Date(\"2022-07-31 05:00\"),\r\n        \"temp_c\": 17.2,\r\n        \"temp_f\": 63.0,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 340,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.87,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 53,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 17.2,\r\n        \"feelslike_f\": 63.0,\r\n        \"windchill_c\": 17.2,\r\n        \"windchill_f\": 63.0,\r\n        \"heatindex_c\": 17.2,\r\n        \"heatindex_f\": 63.0,\r\n        \"dewpoint_c\": 7.7,\r\n        \"dewpoint_f\": 45.9,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659272400,\r\n        \"time\": new Date(\"2022-07-31 06:00\"),\r\n        \"temp_c\": 16.6,\r\n        \"temp_f\": 61.9,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 345,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.88,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 54,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 16.6,\r\n        \"feelslike_f\": 61.9,\r\n        \"windchill_c\": 16.6,\r\n        \"windchill_f\": 61.9,\r\n        \"heatindex_c\": 16.6,\r\n        \"heatindex_f\": 61.9,\r\n        \"dewpoint_c\": 7.3,\r\n        \"dewpoint_f\": 45.1,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 5.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659276000,\r\n        \"time\": new Date(\"2022-07-31 07:00\"),\r\n        \"temp_c\": 17.5,\r\n        \"temp_f\": 63.5,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.1,\r\n        \"wind_kph\": 5.0,\r\n        \"wind_degree\": 343,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.89,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 56,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 17.5,\r\n        \"feelslike_f\": 63.5,\r\n        \"windchill_c\": 17.5,\r\n        \"windchill_f\": 63.5,\r\n        \"heatindex_c\": 17.5,\r\n        \"heatindex_f\": 63.5,\r\n        \"dewpoint_c\": 8.5,\r\n        \"dewpoint_f\": 47.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.5,\r\n        \"gust_kph\": 10.4,\r\n        \"uv\": 5.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659279600,\r\n        \"time\": new Date(\"2022-07-31 08:00\"),\r\n        \"temp_c\": 20.5,\r\n        \"temp_f\": 68.9,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.6,\r\n        \"wind_kph\": 5.8,\r\n        \"wind_degree\": 348,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.89,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 47,\r\n        \"cloud\": 1,\r\n        \"feelslike_c\": 20.5,\r\n        \"feelslike_f\": 68.9,\r\n        \"windchill_c\": 20.5,\r\n        \"windchill_f\": 68.9,\r\n        \"heatindex_c\": 20.5,\r\n        \"heatindex_f\": 68.9,\r\n        \"dewpoint_c\": 8.9,\r\n        \"dewpoint_f\": 48.0,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.1,\r\n        \"gust_kph\": 8.3,\r\n        \"uv\": 6.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659283200,\r\n        \"time\": new Date(\"2022-07-31 09:00\"),\r\n        \"temp_c\": 23.6,\r\n        \"temp_f\": 74.5,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 337,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.88,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 38,\r\n        \"cloud\": 3,\r\n        \"feelslike_c\": 24.5,\r\n        \"feelslike_f\": 76.1,\r\n        \"windchill_c\": 23.6,\r\n        \"windchill_f\": 74.5,\r\n        \"heatindex_c\": 24.5,\r\n        \"heatindex_f\": 76.1,\r\n        \"dewpoint_c\": 8.7,\r\n        \"dewpoint_f\": 47.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 3.8,\r\n        \"gust_kph\": 6.1,\r\n        \"uv\": 6.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659286800,\r\n        \"time\": new Date(\"2022-07-31 10:00\"),\r\n        \"temp_c\": 26.7,\r\n        \"temp_f\": 80.1,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.8,\r\n        \"wind_kph\": 6.1,\r\n        \"wind_degree\": 341,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.87,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 30,\r\n        \"cloud\": 5,\r\n        \"feelslike_c\": 25.9,\r\n        \"feelslike_f\": 78.6,\r\n        \"windchill_c\": 26.7,\r\n        \"windchill_f\": 80.1,\r\n        \"heatindex_c\": 25.9,\r\n        \"heatindex_f\": 78.6,\r\n        \"dewpoint_c\": 7.9,\r\n        \"dewpoint_f\": 46.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 4.5,\r\n        \"gust_kph\": 7.2,\r\n        \"uv\": 7.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659290400,\r\n        \"time\": new Date(\"2022-07-31 11:00\"),\r\n        \"temp_c\": 31.0,\r\n        \"temp_f\": 87.8,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 4.3,\r\n        \"wind_kph\": 6.8,\r\n        \"wind_degree\": 339,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 23,\r\n        \"cloud\": 19,\r\n        \"feelslike_c\": 29.1,\r\n        \"feelslike_f\": 84.4,\r\n        \"windchill_c\": 31.0,\r\n        \"windchill_f\": 87.8,\r\n        \"heatindex_c\": 29.1,\r\n        \"heatindex_f\": 84.4,\r\n        \"dewpoint_c\": 7.6,\r\n        \"dewpoint_f\": 45.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 4.9,\r\n        \"gust_kph\": 7.9,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659294000,\r\n        \"time\": new Date(\"2022-07-31 12:00\"),\r\n        \"temp_c\": 33.3,\r\n        \"temp_f\": 91.9,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Partly cloudy\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/116.png\",\r\n          \"code\": 1003\r\n        },\r\n        \"wind_mph\": 4.7,\r\n        \"wind_kph\": 7.6,\r\n        \"wind_degree\": 335,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.84,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 18,\r\n        \"cloud\": 27,\r\n        \"feelslike_c\": 31.2,\r\n        \"feelslike_f\": 88.2,\r\n        \"windchill_c\": 33.3,\r\n        \"windchill_f\": 91.9,\r\n        \"heatindex_c\": 31.2,\r\n        \"heatindex_f\": 88.2,\r\n        \"dewpoint_c\": 5.7,\r\n        \"dewpoint_f\": 42.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.4,\r\n        \"gust_kph\": 8.6,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659297600,\r\n        \"time\": new Date(\"2022-07-31 13:00\"),\r\n        \"temp_c\": 35.3,\r\n        \"temp_f\": 95.5,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 5.1,\r\n        \"wind_kph\": 8.3,\r\n        \"wind_degree\": 332,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.83,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 14,\r\n        \"cloud\": 23,\r\n        \"feelslike_c\": 33.5,\r\n        \"feelslike_f\": 92.3,\r\n        \"windchill_c\": 35.3,\r\n        \"windchill_f\": 95.5,\r\n        \"heatindex_c\": 33.5,\r\n        \"heatindex_f\": 92.3,\r\n        \"dewpoint_c\": 4.2,\r\n        \"dewpoint_f\": 39.6,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.8,\r\n        \"gust_kph\": 9.4,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659301200,\r\n        \"time\": new Date(\"2022-07-31 14:00\"),\r\n        \"temp_c\": 36.6,\r\n        \"temp_f\": 97.9,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 6.3,\r\n        \"wind_kph\": 10.1,\r\n        \"wind_degree\": 333,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.8,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 12,\r\n        \"cloud\": 24,\r\n        \"feelslike_c\": 35.2,\r\n        \"feelslike_f\": 95.4,\r\n        \"windchill_c\": 36.6,\r\n        \"windchill_f\": 97.9,\r\n        \"heatindex_c\": 35.2,\r\n        \"heatindex_f\": 95.4,\r\n        \"dewpoint_c\": 3.0,\r\n        \"dewpoint_f\": 37.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 7.2,\r\n        \"gust_kph\": 11.5,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659304800,\r\n        \"time\": new Date(\"2022-07-31 15:00\"),\r\n        \"temp_c\": 39.8,\r\n        \"temp_f\": 103.6,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 7.4,\r\n        \"wind_kph\": 11.9,\r\n        \"wind_degree\": 332,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1008.0,\r\n        \"pressure_in\": 29.77,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 12,\r\n        \"cloud\": 6,\r\n        \"feelslike_c\": 39.6,\r\n        \"feelslike_f\": 103.3,\r\n        \"windchill_c\": 39.8,\r\n        \"windchill_f\": 103.6,\r\n        \"heatindex_c\": 39.6,\r\n        \"heatindex_f\": 103.3,\r\n        \"dewpoint_c\": 4.8,\r\n        \"dewpoint_f\": 40.6,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 8.5,\r\n        \"gust_kph\": 13.7,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659308400,\r\n        \"time\": new Date(\"2022-07-31 16:00\"),\r\n        \"temp_c\": 39.7,\r\n        \"temp_f\": 103.5,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 7.6,\r\n        \"wind_kph\": 12.2,\r\n        \"wind_degree\": 337,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1008.0,\r\n        \"pressure_in\": 29.76,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 12,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 39.5,\r\n        \"feelslike_f\": 103.1,\r\n        \"windchill_c\": 39.7,\r\n        \"windchill_f\": 103.5,\r\n        \"heatindex_c\": 39.5,\r\n        \"heatindex_f\": 103.1,\r\n        \"dewpoint_c\": 5.5,\r\n        \"dewpoint_f\": 41.9,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 8.7,\r\n        \"gust_kph\": 14.0,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659312000,\r\n        \"time\": new Date(\"2022-07-31 17:00\"),\r\n        \"temp_c\": 38.8,\r\n        \"temp_f\": 101.8,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 7.4,\r\n        \"wind_kph\": 11.9,\r\n        \"wind_degree\": 329,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1008.0,\r\n        \"pressure_in\": 29.76,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 14,\r\n        \"cloud\": 3,\r\n        \"feelslike_c\": 38.2,\r\n        \"feelslike_f\": 100.8,\r\n        \"windchill_c\": 38.8,\r\n        \"windchill_f\": 101.8,\r\n        \"heatindex_c\": 38.2,\r\n        \"heatindex_f\": 100.8,\r\n        \"dewpoint_c\": 6.8,\r\n        \"dewpoint_f\": 44.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 8.5,\r\n        \"gust_kph\": 13.7,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659315600,\r\n        \"time\": new Date(\"2022-07-31 18:00\"),\r\n        \"temp_c\": 36.7,\r\n        \"temp_f\": 98.1,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 8.9,\r\n        \"wind_kph\": 14.4,\r\n        \"wind_degree\": 323,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1008.0,\r\n        \"pressure_in\": 29.75,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 20,\r\n        \"cloud\": 8,\r\n        \"feelslike_c\": 35.3,\r\n        \"feelslike_f\": 95.5,\r\n        \"windchill_c\": 36.7,\r\n        \"windchill_f\": 98.1,\r\n        \"heatindex_c\": 35.3,\r\n        \"heatindex_f\": 95.5,\r\n        \"dewpoint_c\": 9.8,\r\n        \"dewpoint_f\": 49.6,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 10.3,\r\n        \"gust_kph\": 16.6,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659319200,\r\n        \"time\": new Date(\"2022-07-31 19:00\"),\r\n        \"temp_c\": 32.5,\r\n        \"temp_f\": 90.5,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Partly cloudy\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/116.png\",\r\n          \"code\": 1003\r\n        },\r\n        \"wind_mph\": 6.9,\r\n        \"wind_kph\": 11.2,\r\n        \"wind_degree\": 318,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1008.0,\r\n        \"pressure_in\": 29.78,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 29,\r\n        \"cloud\": 32,\r\n        \"feelslike_c\": 31.7,\r\n        \"feelslike_f\": 89.1,\r\n        \"windchill_c\": 32.5,\r\n        \"windchill_f\": 90.5,\r\n        \"heatindex_c\": 31.7,\r\n        \"heatindex_f\": 89.1,\r\n        \"dewpoint_c\": 12.2,\r\n        \"dewpoint_f\": 54.0,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 10.7,\r\n        \"gust_kph\": 17.3,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659322800,\r\n        \"time\": new Date(\"2022-07-31 20:00\"),\r\n        \"temp_c\": 28.1,\r\n        \"temp_f\": 82.6,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 6.7,\r\n        \"wind_kph\": 10.8,\r\n        \"wind_degree\": 329,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.79,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 41,\r\n        \"cloud\": 13,\r\n        \"feelslike_c\": 28.0,\r\n        \"feelslike_f\": 82.4,\r\n        \"windchill_c\": 28.1,\r\n        \"windchill_f\": 82.6,\r\n        \"heatindex_c\": 28.0,\r\n        \"heatindex_f\": 82.4,\r\n        \"dewpoint_c\": 13.5,\r\n        \"dewpoint_f\": 56.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 13.6,\r\n        \"gust_kph\": 22.0,\r\n        \"uv\": 7.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659326400,\r\n        \"time\": new Date(\"2022-07-31 21:00\"),\r\n        \"temp_c\": 24.3,\r\n        \"temp_f\": 75.7,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 5.8,\r\n        \"wind_kph\": 9.4,\r\n        \"wind_degree\": 334,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.81,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 49,\r\n        \"cloud\": 19,\r\n        \"feelslike_c\": 25.3,\r\n        \"feelslike_f\": 77.5,\r\n        \"windchill_c\": 24.3,\r\n        \"windchill_f\": 75.7,\r\n        \"heatindex_c\": 25.3,\r\n        \"heatindex_f\": 77.5,\r\n        \"dewpoint_c\": 13.0,\r\n        \"dewpoint_f\": 55.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 12.3,\r\n        \"gust_kph\": 19.8,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659330000,\r\n        \"time\": new Date(\"2022-07-31 22:00\"),\r\n        \"temp_c\": 22.2,\r\n        \"temp_f\": 72.0,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 5.1,\r\n        \"wind_kph\": 8.3,\r\n        \"wind_degree\": 337,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.83,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 57,\r\n        \"cloud\": 19,\r\n        \"feelslike_c\": 24.6,\r\n        \"feelslike_f\": 76.3,\r\n        \"windchill_c\": 22.2,\r\n        \"windchill_f\": 72.0,\r\n        \"heatindex_c\": 24.6,\r\n        \"heatindex_f\": 76.3,\r\n        \"dewpoint_c\": 13.3,\r\n        \"dewpoint_f\": 55.9,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 10.7,\r\n        \"gust_kph\": 17.3,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659333600,\r\n        \"time\": new Date(\"2022-07-31 23:00\"),\r\n        \"temp_c\": 21.0,\r\n        \"temp_f\": 69.8,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Partly cloudy\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/116.png\",\r\n          \"code\": 1003\r\n        },\r\n        \"wind_mph\": 4.5,\r\n        \"wind_kph\": 7.2,\r\n        \"wind_degree\": 325,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.83,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 60,\r\n        \"cloud\": 48,\r\n        \"feelslike_c\": 21.0,\r\n        \"feelslike_f\": 69.8,\r\n        \"windchill_c\": 21.0,\r\n        \"windchill_f\": 69.8,\r\n        \"heatindex_c\": 21.0,\r\n        \"heatindex_f\": 69.8,\r\n        \"dewpoint_c\": 13.0,\r\n        \"dewpoint_f\": 55.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 9.4,\r\n        \"gust_kph\": 15.1,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation\r\n    ]\r\n  ),\r\n  new ForecastDay(\r\n    new Date(\"2022-08-01\"),\r\n    1659312000,\r\n    {\r\n      \"maxtemp_c\": 35.6,\r\n      \"maxtemp_f\": 96.1,\r\n      \"mintemp_c\": 16.7,\r\n      \"mintemp_f\": 62.1,\r\n      \"avgtemp_c\": 24.6,\r\n      \"avgtemp_f\": 76.2,\r\n      \"maxwind_mph\": 8.5,\r\n      \"maxwind_kph\": 13.7,\r\n      \"totalprecip_mm\": 0.0,\r\n      \"totalprecip_in\": 0.0,\r\n      \"avgvis_km\": 10.0,\r\n      \"avgvis_miles\": 6.0,\r\n      \"avghumidity\": 55.0,\r\n      \"daily_will_it_rain\": 0,\r\n      \"daily_chance_of_rain\": 0,\r\n      \"daily_will_it_snow\": 0,\r\n      \"daily_chance_of_snow\": 0,\r\n      \"condition\": {\r\n        \"text\": \"Sunny\",\r\n        \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n        \"code\": 1000\r\n      },\r\n      \"uv\": 6.0\r\n    },\r\n    {\r\n      \"sunrise\": \"05:54 AM\",\r\n      \"sunset\": \"08:39 PM\",\r\n      \"moonrise\": \"09:50 AM\",\r\n      \"moonset\": \"10:48 PM\",\r\n      \"moon_phase\": \"Waxing Crescent\",\r\n      \"moon_illumination\": 22\r\n    } as AstroInformation,\r\n    [\r\n      {\r\n        \"time_epoch\": 1659337200,\r\n        \"time\": new Date(\"2022-08-01 00:00\"),\r\n        \"temp_c\": 20.6,\r\n        \"temp_f\": 69.1,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.9,\r\n        \"wind_kph\": 4.7,\r\n        \"wind_degree\": 309,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.84,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 60,\r\n        \"cloud\": 23,\r\n        \"feelslike_c\": 20.6,\r\n        \"feelslike_f\": 69.1,\r\n        \"windchill_c\": 20.6,\r\n        \"windchill_f\": 69.1,\r\n        \"heatindex_c\": 20.6,\r\n        \"heatindex_f\": 69.1,\r\n        \"dewpoint_c\": 12.5,\r\n        \"dewpoint_f\": 54.5,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.0,\r\n        \"gust_kph\": 9.7,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659340800,\r\n        \"time\": new Date(\"2022-08-01 01:00\"),\r\n        \"temp_c\": 19.0,\r\n        \"temp_f\": 66.2,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Partly cloudy\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/116.png\",\r\n          \"code\": 1003\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 331,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.85,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 65,\r\n        \"cloud\": 26,\r\n        \"feelslike_c\": 19.0,\r\n        \"feelslike_f\": 66.2,\r\n        \"windchill_c\": 19.0,\r\n        \"windchill_f\": 66.2,\r\n        \"heatindex_c\": 19.0,\r\n        \"heatindex_f\": 66.2,\r\n        \"dewpoint_c\": 12.3,\r\n        \"dewpoint_f\": 54.1,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659344400,\r\n        \"time\": new Date(\"2022-08-01 02:00\"),\r\n        \"temp_c\": 18.8,\r\n        \"temp_f\": 65.8,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Partly cloudy\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/116.png\",\r\n          \"code\": 1003\r\n        },\r\n        \"wind_mph\": 2.7,\r\n        \"wind_kph\": 4.3,\r\n        \"wind_degree\": 357,\r\n        \"wind_dir\": \"N\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 66,\r\n        \"cloud\": 34,\r\n        \"feelslike_c\": 18.8,\r\n        \"feelslike_f\": 65.8,\r\n        \"windchill_c\": 18.8,\r\n        \"windchill_f\": 65.8,\r\n        \"heatindex_c\": 18.8,\r\n        \"heatindex_f\": 65.8,\r\n        \"dewpoint_c\": 12.4,\r\n        \"dewpoint_f\": 54.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.6,\r\n        \"gust_kph\": 9.0,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659348000,\r\n        \"time\": new Date(\"2022-08-01 03:00\"),\r\n        \"temp_c\": 18.4,\r\n        \"temp_f\": 65.1,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Partly cloudy\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/116.png\",\r\n          \"code\": 1003\r\n        },\r\n        \"wind_mph\": 3.6,\r\n        \"wind_kph\": 5.8,\r\n        \"wind_degree\": 347,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 69,\r\n        \"cloud\": 27,\r\n        \"feelslike_c\": 18.4,\r\n        \"feelslike_f\": 65.1,\r\n        \"windchill_c\": 18.4,\r\n        \"windchill_f\": 65.1,\r\n        \"heatindex_c\": 18.4,\r\n        \"heatindex_f\": 65.1,\r\n        \"dewpoint_c\": 12.6,\r\n        \"dewpoint_f\": 54.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 7.4,\r\n        \"gust_kph\": 11.9,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659351600,\r\n        \"time\": new Date(\"2022-08-01 04:00\"),\r\n        \"temp_c\": 18.5,\r\n        \"temp_f\": 65.3,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 1.6,\r\n        \"wind_kph\": 2.5,\r\n        \"wind_degree\": 270,\r\n        \"wind_dir\": \"W\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.88,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 68,\r\n        \"cloud\": 20,\r\n        \"feelslike_c\": 18.5,\r\n        \"feelslike_f\": 65.3,\r\n        \"windchill_c\": 18.5,\r\n        \"windchill_f\": 65.3,\r\n        \"heatindex_c\": 18.5,\r\n        \"heatindex_f\": 65.3,\r\n        \"dewpoint_c\": 12.5,\r\n        \"dewpoint_f\": 54.5,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 3.1,\r\n        \"gust_kph\": 5.0,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659355200,\r\n        \"time\": new Date(\"2022-08-01 05:00\"),\r\n        \"temp_c\": 17.5,\r\n        \"temp_f\": 63.5,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.2,\r\n        \"wind_kph\": 3.6,\r\n        \"wind_degree\": 356,\r\n        \"wind_dir\": \"N\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.89,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 72,\r\n        \"cloud\": 8,\r\n        \"feelslike_c\": 17.5,\r\n        \"feelslike_f\": 63.5,\r\n        \"windchill_c\": 17.5,\r\n        \"windchill_f\": 63.5,\r\n        \"heatindex_c\": 17.5,\r\n        \"heatindex_f\": 63.5,\r\n        \"dewpoint_c\": 12.4,\r\n        \"dewpoint_f\": 54.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 4.7,\r\n        \"gust_kph\": 7.6,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659358800,\r\n        \"time\": new Date(\"2022-08-01 06:00\"),\r\n        \"temp_c\": 16.8,\r\n        \"temp_f\": 62.2,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.5,\r\n        \"wind_kph\": 4.0,\r\n        \"wind_degree\": 8,\r\n        \"wind_dir\": \"N\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.89,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 76,\r\n        \"cloud\": 8,\r\n        \"feelslike_c\": 16.8,\r\n        \"feelslike_f\": 62.2,\r\n        \"windchill_c\": 16.8,\r\n        \"windchill_f\": 62.2,\r\n        \"heatindex_c\": 16.8,\r\n        \"heatindex_f\": 62.2,\r\n        \"dewpoint_c\": 12.4,\r\n        \"dewpoint_f\": 54.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.1,\r\n        \"gust_kph\": 8.3,\r\n        \"uv\": 5.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659362400,\r\n        \"time\": new Date(\"2022-08-01 07:00\"),\r\n        \"temp_c\": 17.9,\r\n        \"temp_f\": 64.2,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 1.1,\r\n        \"wind_kph\": 1.8,\r\n        \"wind_degree\": 340,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1013.0,\r\n        \"pressure_in\": 29.9,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 73,\r\n        \"cloud\": 5,\r\n        \"feelslike_c\": 17.9,\r\n        \"feelslike_f\": 64.2,\r\n        \"windchill_c\": 17.9,\r\n        \"windchill_f\": 64.2,\r\n        \"heatindex_c\": 17.9,\r\n        \"heatindex_f\": 64.2,\r\n        \"dewpoint_c\": 12.9,\r\n        \"dewpoint_f\": 55.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 1.8,\r\n        \"gust_kph\": 2.9,\r\n        \"uv\": 5.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659366000,\r\n        \"time\": new Date(\"2022-08-01 08:00\"),\r\n        \"temp_c\": 20.2,\r\n        \"temp_f\": 68.4,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 1.3,\r\n        \"wind_kph\": 2.2,\r\n        \"wind_degree\": 321,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1013.0,\r\n        \"pressure_in\": 29.91,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 63,\r\n        \"cloud\": 5,\r\n        \"feelslike_c\": 20.2,\r\n        \"feelslike_f\": 68.4,\r\n        \"windchill_c\": 20.2,\r\n        \"windchill_f\": 68.4,\r\n        \"heatindex_c\": 20.2,\r\n        \"heatindex_f\": 68.4,\r\n        \"dewpoint_c\": 13.0,\r\n        \"dewpoint_f\": 55.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 1.6,\r\n        \"gust_kph\": 2.5,\r\n        \"uv\": 6.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659369600,\r\n        \"time\": new Date(\"2022-08-01 09:00\"),\r\n        \"temp_c\": 22.7,\r\n        \"temp_f\": 72.9,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 0.2,\r\n        \"wind_kph\": 0.4,\r\n        \"wind_degree\": 225,\r\n        \"wind_dir\": \"SW\",\r\n        \"pressure_mb\": 1013.0,\r\n        \"pressure_in\": 29.91,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 55,\r\n        \"cloud\": 5,\r\n        \"feelslike_c\": 24.7,\r\n        \"feelslike_f\": 76.5,\r\n        \"windchill_c\": 22.7,\r\n        \"windchill_f\": 72.9,\r\n        \"heatindex_c\": 24.7,\r\n        \"heatindex_f\": 76.5,\r\n        \"dewpoint_c\": 13.1,\r\n        \"dewpoint_f\": 55.6,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 0.2,\r\n        \"gust_kph\": 0.4,\r\n        \"uv\": 6.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659373200,\r\n        \"time\": new Date(\"2022-08-01 10:00\"),\r\n        \"temp_c\": 25.0,\r\n        \"temp_f\": 77.0,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.0,\r\n        \"wind_kph\": 3.2,\r\n        \"wind_degree\": 172,\r\n        \"wind_dir\": \"S\",\r\n        \"pressure_mb\": 1013.0,\r\n        \"pressure_in\": 29.91,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 47,\r\n        \"cloud\": 6,\r\n        \"feelslike_c\": 25.7,\r\n        \"feelslike_f\": 78.3,\r\n        \"windchill_c\": 25.0,\r\n        \"windchill_f\": 77.0,\r\n        \"heatindex_c\": 25.7,\r\n        \"heatindex_f\": 78.3,\r\n        \"dewpoint_c\": 13.1,\r\n        \"dewpoint_f\": 55.6,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 2.2,\r\n        \"gust_kph\": 3.6,\r\n        \"uv\": 7.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659376800,\r\n        \"time\": new Date(\"2022-08-01 11:00\"),\r\n        \"temp_c\": 30.2,\r\n        \"temp_f\": 86.4,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.0,\r\n        \"wind_kph\": 3.2,\r\n        \"wind_degree\": 192,\r\n        \"wind_dir\": \"SSW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.89,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 41,\r\n        \"cloud\": 6,\r\n        \"feelslike_c\": 30.6,\r\n        \"feelslike_f\": 87.1,\r\n        \"windchill_c\": 30.2,\r\n        \"windchill_f\": 86.4,\r\n        \"heatindex_c\": 30.6,\r\n        \"heatindex_f\": 87.1,\r\n        \"dewpoint_c\": 15.7,\r\n        \"dewpoint_f\": 60.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 2.2,\r\n        \"gust_kph\": 3.6,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659380400,\r\n        \"time\": new Date(\"2022-08-01 12:00\"),\r\n        \"temp_c\": 32.1,\r\n        \"temp_f\": 89.8,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.5,\r\n        \"wind_kph\": 4.0,\r\n        \"wind_degree\": 221,\r\n        \"wind_dir\": \"SW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.88,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 37,\r\n        \"cloud\": 6,\r\n        \"feelslike_c\": 32.5,\r\n        \"feelslike_f\": 90.5,\r\n        \"windchill_c\": 32.1,\r\n        \"windchill_f\": 89.8,\r\n        \"heatindex_c\": 32.5,\r\n        \"heatindex_f\": 90.5,\r\n        \"dewpoint_c\": 15.6,\r\n        \"dewpoint_f\": 60.1,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 2.9,\r\n        \"gust_kph\": 4.7,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659384000,\r\n        \"time\": new Date(\"2022-08-01 13:00\"),\r\n        \"temp_c\": 33.5,\r\n        \"temp_f\": 92.3,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.5,\r\n        \"wind_kph\": 4.0,\r\n        \"wind_degree\": 245,\r\n        \"wind_dir\": \"WSW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 34,\r\n        \"cloud\": 5,\r\n        \"feelslike_c\": 34.0,\r\n        \"feelslike_f\": 93.2,\r\n        \"windchill_c\": 33.5,\r\n        \"windchill_f\": 92.3,\r\n        \"heatindex_c\": 34.0,\r\n        \"heatindex_f\": 93.2,\r\n        \"dewpoint_c\": 15.6,\r\n        \"dewpoint_f\": 60.1,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 2.9,\r\n        \"gust_kph\": 4.7,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659387600,\r\n        \"time\": new Date(\"2022-08-01 14:00\"),\r\n        \"temp_c\": 34.8,\r\n        \"temp_f\": 94.6,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.0,\r\n        \"wind_kph\": 3.2,\r\n        \"wind_degree\": 257,\r\n        \"wind_dir\": \"WSW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.84,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 32,\r\n        \"cloud\": 4,\r\n        \"feelslike_c\": 35.5,\r\n        \"feelslike_f\": 95.9,\r\n        \"windchill_c\": 34.8,\r\n        \"windchill_f\": 94.6,\r\n        \"heatindex_c\": 35.5,\r\n        \"heatindex_f\": 95.9,\r\n        \"dewpoint_c\": 15.7,\r\n        \"dewpoint_f\": 60.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 2.2,\r\n        \"gust_kph\": 3.6,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659391200,\r\n        \"time\": new Date(\"2022-08-01 15:00\"),\r\n        \"temp_c\": 35.6,\r\n        \"temp_f\": 96.1,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.2,\r\n        \"wind_kph\": 3.6,\r\n        \"wind_degree\": 280,\r\n        \"wind_dir\": \"W\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.82,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 31,\r\n        \"cloud\": 5,\r\n        \"feelslike_c\": 36.4,\r\n        \"feelslike_f\": 97.5,\r\n        \"windchill_c\": 35.6,\r\n        \"windchill_f\": 96.1,\r\n        \"heatindex_c\": 36.4,\r\n        \"heatindex_f\": 97.5,\r\n        \"dewpoint_c\": 15.8,\r\n        \"dewpoint_f\": 60.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 2.5,\r\n        \"gust_kph\": 4.0,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659394800,\r\n        \"time\": new Date(\"2022-08-01 16:00\"),\r\n        \"temp_c\": 35.2,\r\n        \"temp_f\": 95.4,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 0.4,\r\n        \"wind_kph\": 0.7,\r\n        \"wind_degree\": 283,\r\n        \"wind_dir\": \"WNW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.8,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 30,\r\n        \"cloud\": 6,\r\n        \"feelslike_c\": 35.7,\r\n        \"feelslike_f\": 96.3,\r\n        \"windchill_c\": 35.2,\r\n        \"windchill_f\": 95.4,\r\n        \"heatindex_c\": 35.7,\r\n        \"heatindex_f\": 96.3,\r\n        \"dewpoint_c\": 15.2,\r\n        \"dewpoint_f\": 59.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 0.4,\r\n        \"gust_kph\": 0.7,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659398400,\r\n        \"time\": new Date(\"2022-08-01 17:00\"),\r\n        \"temp_c\": 34.2,\r\n        \"temp_f\": 93.6,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 4.0,\r\n        \"wind_kph\": 6.5,\r\n        \"wind_degree\": 327,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.78,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 32,\r\n        \"cloud\": 10,\r\n        \"feelslike_c\": 34.5,\r\n        \"feelslike_f\": 94.1,\r\n        \"windchill_c\": 34.2,\r\n        \"windchill_f\": 93.6,\r\n        \"heatindex_c\": 34.5,\r\n        \"heatindex_f\": 94.1,\r\n        \"dewpoint_c\": 14.9,\r\n        \"dewpoint_f\": 58.8,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 4.7,\r\n        \"gust_kph\": 7.6,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659402000,\r\n        \"time\": new Date(\"2022-08-01 18:00\"),\r\n        \"temp_c\": 31.4,\r\n        \"temp_f\": 88.5,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 8.5,\r\n        \"wind_kph\": 13.7,\r\n        \"wind_degree\": 326,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.79,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 37,\r\n        \"cloud\": 10,\r\n        \"feelslike_c\": 31.6,\r\n        \"feelslike_f\": 88.9,\r\n        \"windchill_c\": 31.4,\r\n        \"windchill_f\": 88.5,\r\n        \"heatindex_c\": 31.6,\r\n        \"heatindex_f\": 88.9,\r\n        \"dewpoint_c\": 15.1,\r\n        \"dewpoint_f\": 59.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 9.8,\r\n        \"gust_kph\": 15.8,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659405600,\r\n        \"time\": new Date(\"2022-08-01 19:00\"),\r\n        \"temp_c\": 28.0,\r\n        \"temp_f\": 82.4,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 8.3,\r\n        \"wind_kph\": 13.3,\r\n        \"wind_degree\": 317,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.8,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 45,\r\n        \"cloud\": 7,\r\n        \"feelslike_c\": 28.3,\r\n        \"feelslike_f\": 82.9,\r\n        \"windchill_c\": 28.0,\r\n        \"windchill_f\": 82.4,\r\n        \"heatindex_c\": 28.3,\r\n        \"heatindex_f\": 82.9,\r\n        \"dewpoint_c\": 15.1,\r\n        \"dewpoint_f\": 59.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 10.1,\r\n        \"gust_kph\": 16.2,\r\n        \"uv\": 7.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659409200,\r\n        \"time\": new Date(\"2022-08-01 20:00\"),\r\n        \"temp_c\": 23.8,\r\n        \"temp_f\": 74.8,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 8.1,\r\n        \"wind_kph\": 13.0,\r\n        \"wind_degree\": 306,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.83,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 55,\r\n        \"cloud\": 12,\r\n        \"feelslike_c\": 25.2,\r\n        \"feelslike_f\": 77.4,\r\n        \"windchill_c\": 23.8,\r\n        \"windchill_f\": 74.8,\r\n        \"heatindex_c\": 25.2,\r\n        \"heatindex_f\": 77.4,\r\n        \"dewpoint_c\": 14.3,\r\n        \"dewpoint_f\": 57.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 11.9,\r\n        \"gust_kph\": 19.1,\r\n        \"uv\": 6.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659412800,\r\n        \"time\": new Date(\"2022-08-01 21:00\"),\r\n        \"temp_c\": 20.6,\r\n        \"temp_f\": 69.1,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 6.7,\r\n        \"wind_kph\": 10.8,\r\n        \"wind_degree\": 312,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 65,\r\n        \"cloud\": 21,\r\n        \"feelslike_c\": 20.6,\r\n        \"feelslike_f\": 69.1,\r\n        \"windchill_c\": 20.6,\r\n        \"windchill_f\": 69.1,\r\n        \"heatindex_c\": 20.6,\r\n        \"heatindex_f\": 69.1,\r\n        \"dewpoint_c\": 13.9,\r\n        \"dewpoint_f\": 57.0,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 11.0,\r\n        \"gust_kph\": 17.6,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659416400,\r\n        \"time\": new Date(\"2022-08-01 22:00\"),\r\n        \"temp_c\": 18.5,\r\n        \"temp_f\": 65.3,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 4.0,\r\n        \"wind_kph\": 6.5,\r\n        \"wind_degree\": 320,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.9,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 74,\r\n        \"cloud\": 21,\r\n        \"feelslike_c\": 18.5,\r\n        \"feelslike_f\": 65.3,\r\n        \"windchill_c\": 18.5,\r\n        \"windchill_f\": 65.3,\r\n        \"heatindex_c\": 18.5,\r\n        \"heatindex_f\": 65.3,\r\n        \"dewpoint_c\": 13.7,\r\n        \"dewpoint_f\": 56.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659420000,\r\n        \"time\": new Date(\"2022-08-01 23:00\"),\r\n        \"temp_c\": 16.7,\r\n        \"temp_f\": 62.1,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.0,\r\n        \"wind_kph\": 3.2,\r\n        \"wind_degree\": 290,\r\n        \"wind_dir\": \"WNW\",\r\n        \"pressure_mb\": 1013.0,\r\n        \"pressure_in\": 29.93,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 82,\r\n        \"cloud\": 6,\r\n        \"feelslike_c\": 16.7,\r\n        \"feelslike_f\": 62.1,\r\n        \"windchill_c\": 16.7,\r\n        \"windchill_f\": 62.1,\r\n        \"heatindex_c\": 16.7,\r\n        \"heatindex_f\": 62.1,\r\n        \"dewpoint_c\": 13.7,\r\n        \"dewpoint_f\": 56.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 3.6,\r\n        \"gust_kph\": 5.8,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation\r\n    ]\r\n  )\r\n])"
            },
            {
                "name": "ObjectBasedSearch",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/SearchableDropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateTwo.bind({})"
            },
            {
                "name": "precipitationChances",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/data/PrecipitationChances.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  new BasicGraphNode('', [\r\n    {\r\n      \"name\": \"2016-09-22T00:00:00.474Z\",\r\n      \"value\": .01,\r\n      \"extra\": {\r\n        \"code\": \"de\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T01:00:00.474Z\",\r\n      \"value\": .05,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T02:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T03:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T04:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T05:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T06:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T07:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T08:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T09:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T10:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T11:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T12:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T13:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T14:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T15:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T15:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T16:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T17:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T18:00:00.474Z\",\r\n      \"value\": 0,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T19:00:00.474Z\",\r\n      \"value\": .05,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T20:00:00.474Z\",\r\n      \"value\": .2,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T21:00:00.474Z\",\r\n      \"value\": .3,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    }\r\n  ])\r\n]"
            },
            {
                "name": "PrecipitationGraphTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/graphs/PrecipitationGraph.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/cards/AdvancedWeatherCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/cards/BasicWeatherCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/cards/WindDirectionCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/thumbnails/WeatherThumbnail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/thumbnails/WindDirectionThumbnail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "StringBasedSearch",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/SearchableDropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TemperatureGraphTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/graphs/TemperatureGraph.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "temperatures",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/data/Temperatures.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    \"name\": \"\",\r\n    \"series\": [\r\n      {\r\n        \"value\": 80.0,\r\n        \"name\": \"2016-09-22T00:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 78.0,\r\n        \"name\": \"2016-09-22T01:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 75,\r\n        \"name\": \"2016-09-22T02:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 73,\r\n        \"name\": \"2016-09-22T03:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 70,\r\n        \"name\": \"2016-09-22T04:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 68,\r\n        \"name\": \"2016-09-22T04:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 64,\r\n        \"name\": \"2016-09-22T05:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 63,\r\n        \"name\": \"2016-09-22T06:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 65,\r\n        \"name\": \"2016-09-22T07:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 69,\r\n        \"name\": \"2016-09-22T08:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 71,\r\n        \"name\": \"2016-09-22T09:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 75,\r\n        \"name\": \"2016-09-22T10:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 78,\r\n        \"name\": \"2016-09-22T11:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 81,\r\n        \"name\": \"2016-09-22T12:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 85,\r\n        \"name\": \"2016-09-22T13:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 90,\r\n        \"name\": \"2016-09-22T14:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 92,\r\n        \"name\": \"2016-09-22T15:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 94,\r\n        \"name\": \"2016-09-22T15:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 98,\r\n        \"name\": \"2016-09-22T16:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 93,\r\n        \"name\": \"2016-09-22T17:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 93,\r\n        \"name\": \"2016-09-22T18:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 93,\r\n        \"name\": \"2016-09-22T19:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 93,\r\n        \"name\": \"2016-09-22T20:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 93,\r\n        \"name\": \"2016-09-22T21:00:00.474Z\"\r\n      },\r\n    ]\r\n  } as BasicGraphNode\r\n]"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/SearchableDropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SearchableDropdownComponent>",
                "defaultValue": "(args: SearchableDropdownComponent) => ({\r\n  component: SearchableDropdownComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/cards/AdvancedWeatherCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<AdvancedWeatherComponent>",
                "defaultValue": "(args: AdvancedWeatherComponent) => ({\n  component: AdvancedWeatherComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/cards/BasicWeatherCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<BasicWeatherCardComponent>",
                "defaultValue": "(args: BasicWeatherCardComponent) => ({\n  component: BasicWeatherCardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/cards/WindDirectionCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<WindDirectionCardComponent>",
                "defaultValue": "(args: WindDirectionCardComponent) => ({\n  component: WindDirectionCardComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/graphs/TemperatureGraph.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TemperatureGraphComponent>",
                "defaultValue": "(args: TemperatureGraphComponent) => ({\r\n  component: TemperatureGraphComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/graphs/PrecipitationGraph.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<PrecipitationGraphComponent>",
                "defaultValue": "(args: PrecipitationGraphComponent) => ({\r\n  component: PrecipitationGraphComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/thumbnails/WeatherThumbnail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<WeatherThumbnailComponent>",
                "defaultValue": "(args: WeatherThumbnailComponent) => ({\n  component: WeatherThumbnailComponent,\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/thumbnails/WindDirectionThumbnail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<WindDirectionThumbnailComponent>",
                "defaultValue": "(args: WindDirectionThumbnailComponent) => ({\r\n  component: WindDirectionThumbnailComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "TemplateTwo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/SearchableDropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SearchableDropdownComponent>",
                "defaultValue": "(args: SearchableDropdownComponent) => ({\r\n  component: SearchableDropdownComponent,\r\n  props: args,\r\n})"
            },
            {
                "name": "weatherLocation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/data/WeatherLocation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "WeatherLocation",
                "defaultValue": "{\r\n  \"name\": \"Ridgefield\",\r\n  \"region\": \"Washington\",\r\n  \"country\": \"United States of America\",\r\n  \"lat\": 45.82,\r\n  \"lon\": -122.74,\r\n  \"tz_id\": \"America/Los_Angeles\",\r\n  \"localtime_epoch\": 1659195538,\r\n  \"localtime\": new Date(\"2022-07-30 8:38\")\r\n} as WeatherLocation"
            },
            {
                "name": "windDirections",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/data/WindDirection.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  {\r\n    wind_mph: 15,\r\n    wind_kph: 32.5,\r\n    wind_dir: \"NE\",\r\n    time: new Date('2020-01-01T00:00:00')\r\n  } as IHasWindInformation,\r\n  {\r\n    wind_mph: 5,\r\n    wind_kph: 32.5,\r\n    wind_dir: \"E\",\r\n    time: new Date('2020-01-01T03:00:00')\r\n  } as IHasWindInformation,\r\n  {\r\n    wind_mph: 3,\r\n    wind_kph: 32.5,\r\n    wind_dir: \"E\",\r\n    time: new Date('2020-01-01T06:00:00')\r\n  } as IHasWindInformation,\r\n  {\r\n    wind_mph: 1,\r\n    wind_kph: 32.5,\r\n    wind_dir: \"NE\",\r\n    time: new Date('2020-01-01T09:00:00')\r\n  } as IHasWindInformation,\r\n  {\r\n    wind_mph: 5,\r\n    wind_kph: 32.5,\r\n    wind_dir: \"NE\",\r\n    time: new Date('2020-01-01T12:00:00')\r\n  } as IHasWindInformation,\r\n  {\r\n    wind_mph: 8,\r\n    wind_kph: 32.5,\r\n    wind_dir: \"NE\",\r\n    time: new Date('2020-01-01T15:00:00')\r\n  } as IHasWindInformation,\r\n  {\r\n    wind_mph: 12,\r\n    wind_kph: 32.5,\r\n    wind_dir: \"E\",\r\n    time: new Date('2020-01-01T18:00:00')\r\n  } as IHasWindInformation,\r\n  {\r\n    wind_mph: 18,\r\n    wind_kph: 32.5,\r\n    wind_dir: \"E\",\r\n    time: new Date('2020-01-01T21:00:00')\r\n  } as IHasWindInformation\r\n]"
            }
        ],
        "functions": [
            {
                "name": "convertTemp",
                "file": "src/app/shared/utilities/ConvertTemp.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "temp",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "startingUnit",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "temp",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "startingUnit",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getDateObj",
                "file": "src/app/shared/modules/weather/components/basic-weather-card/basic-weather-card.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Date",
                "jsdoctags": [
                    {
                        "name": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getDateObj",
                "file": "src/app/shared/modules/weather/components/weather-location-information/weather-location-information.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Date",
                "jsdoctags": [
                    {
                        "name": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "DrawerState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"open\" | \"closed\"",
                "file": "src/app/shared/components/nav-menu/nav-menu.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "SpeedUnits",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"mph\" | \"kph\"",
                "file": "src/app/shared/modules/weather/components/wind-direction-thumbnail/wind-direction-thumbnail.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "WindDirection",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"E\" | \"ENE\" | \"NE\" | \"NNE\" | \"N\" | \"NNW\" | \"NW\" | \"WNW\" | \"W\" | \"WSW\" | \"SW\" | \"SSW\" | \"S\" | \"SSE\" | \"SE\" | \"ESE\"",
                "file": "src/app/shared/modules/weather/components/wind-direction-thumbnail/wind-direction-thumbnail.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/stories/data/CurrentForecastInformation.ts": [
                {
                    "name": "currentForecastInformation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/data/CurrentForecastInformation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CurrentForecastInformation",
                    "defaultValue": "{\r\n  \"last_updated_epoch\": 1659195000,\r\n  \"last_updated\": new Date(\"2022-07-30 08:30\"),\r\n  \"temp_c\": 21.1,\r\n  \"temp_f\": 70.0,\r\n  \"is_day\": 1,\r\n  \"condition\": {\r\n    \"text\": \"Sunny\",\r\n    \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n    \"code\": 1000\r\n  },\r\n  \"wind_mph\": 2.2,\r\n  \"wind_kph\": 3.6,\r\n  \"wind_degree\": 10,\r\n  \"wind_dir\": \"N\",\r\n  \"pressure_mb\": 1012.0,\r\n  \"pressure_in\": 29.88,\r\n  \"precip_mm\": 0.0,\r\n  \"precip_in\": 0.0,\r\n  \"humidity\": 76,\r\n  \"cloud\": 0,\r\n  \"feelslike_c\": 21.1,\r\n  \"feelslike_f\": 70.0,\r\n  \"vis_km\": 16.0,\r\n  \"vis_miles\": 9.0,\r\n  \"uv\": 5.0,\r\n  \"gust_mph\": 4.3,\r\n  \"gust_kph\": 6.8\r\n} as CurrentForecastInformation"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  weatherApiKey: \"51644aeaf59c4a79a4e05701223007\" // This should not be stored here\n                                                  // these calls should most likely go through a thin API that we control\n                                                  // and that will protect our key from being stolen by a hacker.\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  weatherApiKey: \"51644aeaf59c4a79a4e05701223007\" // This should not be stored here\n                                                  // these calls should most likely go through a thin API that we control\n                                                  // and that will protect our key from being stolen by a hacker.\n}"
                }
            ],
            "src/stories/data/Forecasts.ts": [
                {
                    "name": "forecasts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/data/Forecasts.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new Forecasts([\r\n  new ForecastDay(\r\n    new Date(\"2022-07-30\"),\r\n    1659139200,\r\n    {\r\n      \"maxtemp_c\": 39.9,\r\n      \"maxtemp_f\": 103.8,\r\n      \"mintemp_c\": 17.5,\r\n      \"mintemp_f\": 63.5,\r\n      \"avgtemp_c\": 27.6,\r\n      \"avgtemp_f\": 81.7,\r\n      \"maxwind_mph\": 10.3,\r\n      \"maxwind_kph\": 16.6,\r\n      \"totalprecip_mm\": 0.0,\r\n      \"totalprecip_in\": 0.0,\r\n      \"avgvis_km\": 10.0,\r\n      \"avgvis_miles\": 6.0,\r\n      \"avghumidity\": 51.0,\r\n      \"daily_will_it_rain\": 0,\r\n      \"daily_chance_of_rain\": 0,\r\n      \"daily_will_it_snow\": 0,\r\n      \"daily_chance_of_snow\": 0,\r\n      \"condition\": {\r\n        \"text\": \"Sunny\",\r\n        \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n        \"code\": 1000\r\n      },\r\n      \"uv\": 7.0\r\n    },\r\n    {\r\n      \"sunrise\": \"05:52 AM\",\r\n      \"sunset\": \"08:42 PM\",\r\n      \"moonrise\": \"07:36 AM\",\r\n      \"moonset\": \"10:10 PM\",\r\n      \"moon_phase\": \"Waxing Crescent\",\r\n      \"moon_illumination\": 8\r\n    },\r\n    [\r\n      {\r\n        \"time_epoch\": 1659164400,\r\n        \"time\": new Date(\"2022-07-30 00:00\"),\r\n        \"temp_c\": 20.8,\r\n        \"temp_f\": 69.4,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.8,\r\n        \"wind_kph\": 6.1,\r\n        \"wind_degree\": 338,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.83,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 74,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 20.8,\r\n        \"feelslike_f\": 69.4,\r\n        \"windchill_c\": 20.8,\r\n        \"windchill_f\": 69.4,\r\n        \"heatindex_c\": 20.8,\r\n        \"heatindex_f\": 69.4,\r\n        \"dewpoint_c\": 15.9,\r\n        \"dewpoint_f\": 60.6,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 8.1,\r\n        \"gust_kph\": 13.0,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659168000,\r\n        \"time\": new Date(\"2022-07-30 01:00\"),\r\n        \"temp_c\": 19.9,\r\n        \"temp_f\": 67.8,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 339,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.84,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 77,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 19.9,\r\n        \"feelslike_f\": 67.8,\r\n        \"windchill_c\": 19.9,\r\n        \"windchill_f\": 67.8,\r\n        \"heatindex_c\": 19.9,\r\n        \"heatindex_f\": 67.8,\r\n        \"dewpoint_c\": 15.7,\r\n        \"dewpoint_f\": 60.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659171600,\r\n        \"time\": new Date(\"2022-07-30 02:00\"),\r\n        \"temp_c\": 19.2,\r\n        \"temp_f\": 66.6,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 348,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.85,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 79,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 19.2,\r\n        \"feelslike_f\": 66.6,\r\n        \"windchill_c\": 19.2,\r\n        \"windchill_f\": 66.6,\r\n        \"heatindex_c\": 19.2,\r\n        \"heatindex_f\": 66.6,\r\n        \"dewpoint_c\": 15.4,\r\n        \"dewpoint_f\": 59.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659175200,\r\n        \"time\": new Date(\"2022-07-30 03:00\"),\r\n        \"temp_c\": 18.6,\r\n        \"temp_f\": 65.5,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.1,\r\n        \"wind_kph\": 5.0,\r\n        \"wind_degree\": 351,\r\n        \"wind_dir\": \"N\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 81,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 18.6,\r\n        \"feelslike_f\": 65.5,\r\n        \"windchill_c\": 18.6,\r\n        \"windchill_f\": 65.5,\r\n        \"heatindex_c\": 18.6,\r\n        \"heatindex_f\": 65.5,\r\n        \"dewpoint_c\": 15.3,\r\n        \"dewpoint_f\": 59.5,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.5,\r\n        \"gust_kph\": 10.4,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659178800,\r\n        \"time\": new Date(\"2022-07-30 04:00\"),\r\n        \"temp_c\": 18.2,\r\n        \"temp_f\": 64.8,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.7,\r\n        \"wind_kph\": 4.3,\r\n        \"wind_degree\": 349,\r\n        \"wind_dir\": \"N\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 83,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 18.2,\r\n        \"feelslike_f\": 64.8,\r\n        \"windchill_c\": 18.2,\r\n        \"windchill_f\": 64.8,\r\n        \"heatindex_c\": 18.2,\r\n        \"heatindex_f\": 64.8,\r\n        \"dewpoint_c\": 15.2,\r\n        \"dewpoint_f\": 59.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.6,\r\n        \"gust_kph\": 9.0,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659182400,\r\n        \"time\": new Date(\"2022-07-30 05:00\"),\r\n        \"temp_c\": 17.9,\r\n        \"temp_f\": 64.2,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.5,\r\n        \"wind_kph\": 4.0,\r\n        \"wind_degree\": 342,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.87,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 85,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 17.9,\r\n        \"feelslike_f\": 64.2,\r\n        \"windchill_c\": 17.9,\r\n        \"windchill_f\": 64.2,\r\n        \"heatindex_c\": 17.9,\r\n        \"heatindex_f\": 64.2,\r\n        \"dewpoint_c\": 15.3,\r\n        \"dewpoint_f\": 59.5,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.1,\r\n        \"gust_kph\": 8.3,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659186000,\r\n        \"time\": new Date(\"2022-07-30 06:00\"),\r\n        \"temp_c\": 17.5,\r\n        \"temp_f\": 63.5,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.7,\r\n        \"wind_kph\": 4.3,\r\n        \"wind_degree\": 343,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.88,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 86,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 17.5,\r\n        \"feelslike_f\": 63.5,\r\n        \"windchill_c\": 17.5,\r\n        \"windchill_f\": 63.5,\r\n        \"heatindex_c\": 17.5,\r\n        \"heatindex_f\": 63.5,\r\n        \"dewpoint_c\": 15.1,\r\n        \"dewpoint_f\": 59.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.6,\r\n        \"gust_kph\": 9.0,\r\n        \"uv\": 5.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659189600,\r\n        \"time\": new Date(\"2022-07-30 07:00\"),\r\n        \"temp_c\": 18.9,\r\n        \"temp_f\": 66.0,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.5,\r\n        \"wind_kph\": 4.0,\r\n        \"wind_degree\": 349,\r\n        \"wind_dir\": \"N\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.89,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 81,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 18.9,\r\n        \"feelslike_f\": 66.0,\r\n        \"windchill_c\": 18.9,\r\n        \"windchill_f\": 66.0,\r\n        \"heatindex_c\": 18.9,\r\n        \"heatindex_f\": 66.0,\r\n        \"dewpoint_c\": 15.5,\r\n        \"dewpoint_f\": 59.9,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 4.3,\r\n        \"gust_kph\": 6.8,\r\n        \"uv\": 5.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659193200,\r\n        \"time\": new Date(\"2022-07-30 08:00\"),\r\n        \"temp_c\": 21.7,\r\n        \"temp_f\": 71.1,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.7,\r\n        \"wind_kph\": 4.3,\r\n        \"wind_degree\": 344,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.89,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 69,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 21.7,\r\n        \"feelslike_f\": 71.1,\r\n        \"windchill_c\": 21.7,\r\n        \"windchill_f\": 71.1,\r\n        \"heatindex_c\": 24.5,\r\n        \"heatindex_f\": 76.1,\r\n        \"dewpoint_c\": 15.8,\r\n        \"dewpoint_f\": 60.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 3.4,\r\n        \"gust_kph\": 5.4,\r\n        \"uv\": 6.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659196800,\r\n        \"time\": new Date(\"2022-07-30 09:00\"),\r\n        \"temp_c\": 24.5,\r\n        \"temp_f\": 76.1,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.5,\r\n        \"wind_kph\": 4.0,\r\n        \"wind_degree\": 337,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.89,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 60,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 25.8,\r\n        \"feelslike_f\": 78.4,\r\n        \"windchill_c\": 24.5,\r\n        \"windchill_f\": 76.1,\r\n        \"heatindex_c\": 25.8,\r\n        \"heatindex_f\": 78.4,\r\n        \"dewpoint_c\": 16.2,\r\n        \"dewpoint_f\": 61.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 2.9,\r\n        \"gust_kph\": 4.7,\r\n        \"uv\": 6.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659200400,\r\n        \"time\": new Date(\"2022-07-30 10:00\"),\r\n        \"temp_c\": 27.4,\r\n        \"temp_f\": 81.3,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.9,\r\n        \"wind_kph\": 4.7,\r\n        \"wind_degree\": 341,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.88,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 51,\r\n        \"cloud\": 5,\r\n        \"feelslike_c\": 28.1,\r\n        \"feelslike_f\": 82.6,\r\n        \"windchill_c\": 27.4,\r\n        \"windchill_f\": 81.3,\r\n        \"heatindex_c\": 28.1,\r\n        \"heatindex_f\": 82.6,\r\n        \"dewpoint_c\": 16.3,\r\n        \"dewpoint_f\": 61.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 3.4,\r\n        \"gust_kph\": 5.4,\r\n        \"uv\": 7.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659204000,\r\n        \"time\": new Date(\"2022-07-30 11:00\"),\r\n        \"temp_c\": 32.9,\r\n        \"temp_f\": 91.2,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.6,\r\n        \"wind_kph\": 5.8,\r\n        \"wind_degree\": 358,\r\n        \"wind_dir\": \"N\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.85,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 43,\r\n        \"cloud\": 15,\r\n        \"feelslike_c\": 34.9,\r\n        \"feelslike_f\": 94.8,\r\n        \"windchill_c\": 32.9,\r\n        \"windchill_f\": 91.2,\r\n        \"heatindex_c\": 34.9,\r\n        \"heatindex_f\": 94.8,\r\n        \"dewpoint_c\": 18.6,\r\n        \"dewpoint_f\": 65.5,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 4.0,\r\n        \"gust_kph\": 6.5,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659207600,\r\n        \"time\": new Date(\"2022-07-30 12:00\"),\r\n        \"temp_c\": 33.6,\r\n        \"temp_f\": 92.5,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 4.5,\r\n        \"wind_kph\": 7.2,\r\n        \"wind_degree\": 334,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.84,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 35,\r\n        \"cloud\": 16,\r\n        \"feelslike_c\": 34.4,\r\n        \"feelslike_f\": 93.9,\r\n        \"windchill_c\": 33.6,\r\n        \"windchill_f\": 92.5,\r\n        \"heatindex_c\": 34.4,\r\n        \"heatindex_f\": 93.9,\r\n        \"dewpoint_c\": 16.2,\r\n        \"dewpoint_f\": 61.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.1,\r\n        \"gust_kph\": 8.3,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659211200,\r\n        \"time\": new Date(\"2022-07-30 13:00\"),\r\n        \"temp_c\": 37.6,\r\n        \"temp_f\": 99.7,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 5.6,\r\n        \"wind_kph\": 9.0,\r\n        \"wind_degree\": 337,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.83,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 29,\r\n        \"cloud\": 8,\r\n        \"feelslike_c\": 39.1,\r\n        \"feelslike_f\": 102.4,\r\n        \"windchill_c\": 37.6,\r\n        \"windchill_f\": 99.7,\r\n        \"heatindex_c\": 39.1,\r\n        \"heatindex_f\": 102.4,\r\n        \"dewpoint_c\": 16.4,\r\n        \"dewpoint_f\": 61.5,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.5,\r\n        \"gust_kph\": 10.4,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659214800,\r\n        \"time\": new Date(\"2022-07-30 14:00\"),\r\n        \"temp_c\": 39.9,\r\n        \"temp_f\": 103.8,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 6.7,\r\n        \"wind_kph\": 10.8,\r\n        \"wind_degree\": 331,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.81,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 23,\r\n        \"cloud\": 12,\r\n        \"feelslike_c\": 40.7,\r\n        \"feelslike_f\": 105.3,\r\n        \"windchill_c\": 39.9,\r\n        \"windchill_f\": 103.8,\r\n        \"heatindex_c\": 40.7,\r\n        \"heatindex_f\": 105.3,\r\n        \"dewpoint_c\": 14.7,\r\n        \"dewpoint_f\": 58.5,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 7.8,\r\n        \"gust_kph\": 12.6,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659218400,\r\n        \"time\": new Date(\"2022-07-30 15:00\"),\r\n        \"temp_c\": 38.8,\r\n        \"temp_f\": 101.8,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Partly cloudy\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/116.png\",\r\n          \"code\": 1003\r\n        },\r\n        \"wind_mph\": 8.1,\r\n        \"wind_kph\": 13.0,\r\n        \"wind_degree\": 338,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.78,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 18,\r\n        \"cloud\": 46,\r\n        \"feelslike_c\": 38.2,\r\n        \"feelslike_f\": 100.8,\r\n        \"windchill_c\": 38.8,\r\n        \"windchill_f\": 101.8,\r\n        \"heatindex_c\": 38.2,\r\n        \"heatindex_f\": 100.8,\r\n        \"dewpoint_c\": 10.3,\r\n        \"dewpoint_f\": 50.5,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 9.2,\r\n        \"gust_kph\": 14.8,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659222000,\r\n        \"time\": new Date(\"2022-07-30 16:00\"),\r\n        \"temp_c\": 39.2,\r\n        \"temp_f\": 102.6,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 8.7,\r\n        \"wind_kph\": 14.0,\r\n        \"wind_degree\": 334,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1008.0,\r\n        \"pressure_in\": 29.76,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 17,\r\n        \"cloud\": 22,\r\n        \"feelslike_c\": 38.8,\r\n        \"feelslike_f\": 101.8,\r\n        \"windchill_c\": 39.2,\r\n        \"windchill_f\": 102.6,\r\n        \"heatindex_c\": 38.8,\r\n        \"heatindex_f\": 101.8,\r\n        \"dewpoint_c\": 9.3,\r\n        \"dewpoint_f\": 48.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 10.1,\r\n        \"gust_kph\": 16.2,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659225600,\r\n        \"time\": new Date(\"2022-07-30 17:00\"),\r\n        \"temp_c\": 38.8,\r\n        \"temp_f\": 101.8,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 10.3,\r\n        \"wind_kph\": 16.6,\r\n        \"wind_degree\": 339,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1007.0,\r\n        \"pressure_in\": 29.75,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 17,\r\n        \"cloud\": 20,\r\n        \"feelslike_c\": 38.2,\r\n        \"feelslike_f\": 100.8,\r\n        \"windchill_c\": 38.8,\r\n        \"windchill_f\": 101.8,\r\n        \"heatindex_c\": 38.2,\r\n        \"heatindex_f\": 100.8,\r\n        \"dewpoint_c\": 9.3,\r\n        \"dewpoint_f\": 48.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 11.9,\r\n        \"gust_kph\": 19.1,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659229200,\r\n        \"time\": new Date(\"2022-07-30 18:00\"),\r\n        \"temp_c\": 38.7,\r\n        \"temp_f\": 101.7,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 8.7,\r\n        \"wind_kph\": 14.0,\r\n        \"wind_degree\": 340,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1007.0,\r\n        \"pressure_in\": 29.75,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 20,\r\n        \"cloud\": 14,\r\n        \"feelslike_c\": 38.2,\r\n        \"feelslike_f\": 100.8,\r\n        \"windchill_c\": 38.7,\r\n        \"windchill_f\": 101.7,\r\n        \"heatindex_c\": 38.2,\r\n        \"heatindex_f\": 100.8,\r\n        \"dewpoint_c\": 12.0,\r\n        \"dewpoint_f\": 53.6,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 10.1,\r\n        \"gust_kph\": 16.2,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659232800,\r\n        \"time\": new Date(\"2022-07-30 19:00\"),\r\n        \"temp_c\": 35.4,\r\n        \"temp_f\": 95.7,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 7.8,\r\n        \"wind_kph\": 12.6,\r\n        \"wind_degree\": 321,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1008.0,\r\n        \"pressure_in\": 29.75,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 27,\r\n        \"cloud\": 7,\r\n        \"feelslike_c\": 35.1,\r\n        \"feelslike_f\": 95.2,\r\n        \"windchill_c\": 35.4,\r\n        \"windchill_f\": 95.7,\r\n        \"heatindex_c\": 35.1,\r\n        \"heatindex_f\": 95.2,\r\n        \"dewpoint_c\": 13.4,\r\n        \"dewpoint_f\": 56.1,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 11.6,\r\n        \"gust_kph\": 18.7,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659236400,\r\n        \"time\": new Date(\"2022-07-30 20:00\"),\r\n        \"temp_c\": 29.9,\r\n        \"temp_f\": 85.8,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 6.9,\r\n        \"wind_kph\": 11.2,\r\n        \"wind_degree\": 302,\r\n        \"wind_dir\": \"WNW\",\r\n        \"pressure_mb\": 1008.0,\r\n        \"pressure_in\": 29.78,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 38,\r\n        \"cloud\": 4,\r\n        \"feelslike_c\": 29.8,\r\n        \"feelslike_f\": 85.6,\r\n        \"windchill_c\": 29.9,\r\n        \"windchill_f\": 85.8,\r\n        \"heatindex_c\": 29.8,\r\n        \"heatindex_f\": 85.6,\r\n        \"dewpoint_c\": 14.1,\r\n        \"dewpoint_f\": 57.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 14.5,\r\n        \"gust_kph\": 23.4,\r\n        \"uv\": 7.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659240000,\r\n        \"time\": new Date(\"2022-07-30 21:00\"),\r\n        \"temp_c\": 26.2,\r\n        \"temp_f\": 79.2,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 5.8,\r\n        \"wind_kph\": 9.4,\r\n        \"wind_degree\": 315,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.8,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 43,\r\n        \"cloud\": 7,\r\n        \"feelslike_c\": 26.4,\r\n        \"feelslike_f\": 79.5,\r\n        \"windchill_c\": 26.2,\r\n        \"windchill_f\": 79.2,\r\n        \"heatindex_c\": 26.4,\r\n        \"heatindex_f\": 79.5,\r\n        \"dewpoint_c\": 12.6,\r\n        \"dewpoint_f\": 54.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 12.3,\r\n        \"gust_kph\": 19.8,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659243600,\r\n        \"time\": new Date(\"2022-07-30 22:00\"),\r\n        \"temp_c\": 24.2,\r\n        \"temp_f\": 75.6,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 5.1,\r\n        \"wind_kph\": 8.3,\r\n        \"wind_degree\": 328,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.82,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 45,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 25.1,\r\n        \"feelslike_f\": 77.2,\r\n        \"windchill_c\": 24.2,\r\n        \"windchill_f\": 75.6,\r\n        \"heatindex_c\": 25.1,\r\n        \"heatindex_f\": 77.2,\r\n        \"dewpoint_c\": 11.6,\r\n        \"dewpoint_f\": 52.9,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 10.7,\r\n        \"gust_kph\": 17.3,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659247200,\r\n        \"time\": new Date(\"2022-07-30 23:00\"),\r\n        \"temp_c\": 22.5,\r\n        \"temp_f\": 72.5,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 4.0,\r\n        \"wind_kph\": 6.5,\r\n        \"wind_degree\": 325,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.84,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 48,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 24.5,\r\n        \"feelslike_f\": 76.1,\r\n        \"windchill_c\": 22.5,\r\n        \"windchill_f\": 72.5,\r\n        \"heatindex_c\": 24.5,\r\n        \"heatindex_f\": 76.1,\r\n        \"dewpoint_c\": 10.8,\r\n        \"dewpoint_f\": 51.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 8.5,\r\n        \"gust_kph\": 13.7,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation\r\n    ]\r\n  ),\r\n  new ForecastDay(\r\n    new Date(\"2022-07-31\"),\r\n    1659225600,\r\n    {\r\n      \"maxtemp_c\": 39.8,\r\n      \"maxtemp_f\": 103.6,\r\n      \"mintemp_c\": 16.6,\r\n      \"mintemp_f\": 61.9,\r\n      \"avgtemp_c\": 26.5,\r\n      \"avgtemp_f\": 79.7,\r\n      \"maxwind_mph\": 8.9,\r\n      \"maxwind_kph\": 14.4,\r\n      \"totalprecip_mm\": 0.0,\r\n      \"totalprecip_in\": 0.0,\r\n      \"avgvis_km\": 10.0,\r\n      \"avgvis_miles\": 6.0,\r\n      \"avghumidity\": 38.0,\r\n      \"daily_will_it_rain\": 0,\r\n      \"daily_chance_of_rain\": 0,\r\n      \"daily_will_it_snow\": 0,\r\n      \"daily_chance_of_snow\": 0,\r\n      \"condition\": {\r\n        \"text\": \"Sunny\",\r\n        \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n        \"code\": 1000\r\n      },\r\n      \"uv\": 7.0\r\n    },\r\n    {\r\n      \"sunrise\": \"05:53 AM\",\r\n      \"sunset\": \"08:40 PM\",\r\n      \"moonrise\": \"08:43 AM\",\r\n      \"moonset\": \"10:30 PM\",\r\n      \"moon_phase\": \"Waxing Crescent\",\r\n      \"moon_illumination\": 12\r\n    },\r\n    [\r\n      {\r\n        \"time_epoch\": 1659250800,\r\n        \"time\": new Date(\"2022-07-31 00:00\"),\r\n        \"temp_c\": 21.0,\r\n        \"temp_f\": 69.8,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 343,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.85,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 49,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 21.0,\r\n        \"feelslike_f\": 69.8,\r\n        \"windchill_c\": 21.0,\r\n        \"windchill_f\": 69.8,\r\n        \"heatindex_c\": 21.0,\r\n        \"heatindex_f\": 69.8,\r\n        \"dewpoint_c\": 10.0,\r\n        \"dewpoint_f\": 50.0,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659254400,\r\n        \"time\": new Date(\"2022-07-31 01:00\"),\r\n        \"temp_c\": 19.9,\r\n        \"temp_f\": 67.8,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 349,\r\n        \"wind_dir\": \"N\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 51,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 19.9,\r\n        \"feelslike_f\": 67.8,\r\n        \"windchill_c\": 19.9,\r\n        \"windchill_f\": 67.8,\r\n        \"heatindex_c\": 19.9,\r\n        \"heatindex_f\": 67.8,\r\n        \"dewpoint_c\": 9.6,\r\n        \"dewpoint_f\": 49.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659258000,\r\n        \"time\": new Date(\"2022-07-31 02:00\"),\r\n        \"temp_c\": 18.9,\r\n        \"temp_f\": 66.0,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 341,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 53,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 18.9,\r\n        \"feelslike_f\": 66.0,\r\n        \"windchill_c\": 18.9,\r\n        \"windchill_f\": 66.0,\r\n        \"heatindex_c\": 18.9,\r\n        \"heatindex_f\": 66.0,\r\n        \"dewpoint_c\": 9.0,\r\n        \"dewpoint_f\": 48.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659261600,\r\n        \"time\": new Date(\"2022-07-31 03:00\"),\r\n        \"temp_c\": 18.0,\r\n        \"temp_f\": 64.4,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.6,\r\n        \"wind_kph\": 5.8,\r\n        \"wind_degree\": 348,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 53,\r\n        \"cloud\": 3,\r\n        \"feelslike_c\": 18.0,\r\n        \"feelslike_f\": 64.4,\r\n        \"windchill_c\": 18.0,\r\n        \"windchill_f\": 64.4,\r\n        \"heatindex_c\": 18.0,\r\n        \"heatindex_f\": 64.4,\r\n        \"dewpoint_c\": 8.4,\r\n        \"dewpoint_f\": 47.1,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 7.6,\r\n        \"gust_kph\": 12.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659265200,\r\n        \"time\": new Date(\"2022-07-31 04:00\"),\r\n        \"temp_c\": 17.4,\r\n        \"temp_f\": 63.3,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.6,\r\n        \"wind_kph\": 5.8,\r\n        \"wind_degree\": 335,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 54,\r\n        \"cloud\": 2,\r\n        \"feelslike_c\": 17.4,\r\n        \"feelslike_f\": 63.3,\r\n        \"windchill_c\": 17.4,\r\n        \"windchill_f\": 63.3,\r\n        \"heatindex_c\": 17.4,\r\n        \"heatindex_f\": 63.3,\r\n        \"dewpoint_c\": 7.9,\r\n        \"dewpoint_f\": 46.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 7.6,\r\n        \"gust_kph\": 12.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659268800,\r\n        \"time\": new Date(\"2022-07-31 05:00\"),\r\n        \"temp_c\": 17.2,\r\n        \"temp_f\": 63.0,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 340,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.87,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 53,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 17.2,\r\n        \"feelslike_f\": 63.0,\r\n        \"windchill_c\": 17.2,\r\n        \"windchill_f\": 63.0,\r\n        \"heatindex_c\": 17.2,\r\n        \"heatindex_f\": 63.0,\r\n        \"dewpoint_c\": 7.7,\r\n        \"dewpoint_f\": 45.9,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659272400,\r\n        \"time\": new Date(\"2022-07-31 06:00\"),\r\n        \"temp_c\": 16.6,\r\n        \"temp_f\": 61.9,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 345,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.88,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 54,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 16.6,\r\n        \"feelslike_f\": 61.9,\r\n        \"windchill_c\": 16.6,\r\n        \"windchill_f\": 61.9,\r\n        \"heatindex_c\": 16.6,\r\n        \"heatindex_f\": 61.9,\r\n        \"dewpoint_c\": 7.3,\r\n        \"dewpoint_f\": 45.1,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 5.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659276000,\r\n        \"time\": new Date(\"2022-07-31 07:00\"),\r\n        \"temp_c\": 17.5,\r\n        \"temp_f\": 63.5,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.1,\r\n        \"wind_kph\": 5.0,\r\n        \"wind_degree\": 343,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.89,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 56,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 17.5,\r\n        \"feelslike_f\": 63.5,\r\n        \"windchill_c\": 17.5,\r\n        \"windchill_f\": 63.5,\r\n        \"heatindex_c\": 17.5,\r\n        \"heatindex_f\": 63.5,\r\n        \"dewpoint_c\": 8.5,\r\n        \"dewpoint_f\": 47.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.5,\r\n        \"gust_kph\": 10.4,\r\n        \"uv\": 5.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659279600,\r\n        \"time\": new Date(\"2022-07-31 08:00\"),\r\n        \"temp_c\": 20.5,\r\n        \"temp_f\": 68.9,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.6,\r\n        \"wind_kph\": 5.8,\r\n        \"wind_degree\": 348,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.89,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 47,\r\n        \"cloud\": 1,\r\n        \"feelslike_c\": 20.5,\r\n        \"feelslike_f\": 68.9,\r\n        \"windchill_c\": 20.5,\r\n        \"windchill_f\": 68.9,\r\n        \"heatindex_c\": 20.5,\r\n        \"heatindex_f\": 68.9,\r\n        \"dewpoint_c\": 8.9,\r\n        \"dewpoint_f\": 48.0,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.1,\r\n        \"gust_kph\": 8.3,\r\n        \"uv\": 6.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659283200,\r\n        \"time\": new Date(\"2022-07-31 09:00\"),\r\n        \"temp_c\": 23.6,\r\n        \"temp_f\": 74.5,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 337,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.88,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 38,\r\n        \"cloud\": 3,\r\n        \"feelslike_c\": 24.5,\r\n        \"feelslike_f\": 76.1,\r\n        \"windchill_c\": 23.6,\r\n        \"windchill_f\": 74.5,\r\n        \"heatindex_c\": 24.5,\r\n        \"heatindex_f\": 76.1,\r\n        \"dewpoint_c\": 8.7,\r\n        \"dewpoint_f\": 47.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 3.8,\r\n        \"gust_kph\": 6.1,\r\n        \"uv\": 6.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659286800,\r\n        \"time\": new Date(\"2022-07-31 10:00\"),\r\n        \"temp_c\": 26.7,\r\n        \"temp_f\": 80.1,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 3.8,\r\n        \"wind_kph\": 6.1,\r\n        \"wind_degree\": 341,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.87,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 30,\r\n        \"cloud\": 5,\r\n        \"feelslike_c\": 25.9,\r\n        \"feelslike_f\": 78.6,\r\n        \"windchill_c\": 26.7,\r\n        \"windchill_f\": 80.1,\r\n        \"heatindex_c\": 25.9,\r\n        \"heatindex_f\": 78.6,\r\n        \"dewpoint_c\": 7.9,\r\n        \"dewpoint_f\": 46.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 4.5,\r\n        \"gust_kph\": 7.2,\r\n        \"uv\": 7.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659290400,\r\n        \"time\": new Date(\"2022-07-31 11:00\"),\r\n        \"temp_c\": 31.0,\r\n        \"temp_f\": 87.8,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 4.3,\r\n        \"wind_kph\": 6.8,\r\n        \"wind_degree\": 339,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 23,\r\n        \"cloud\": 19,\r\n        \"feelslike_c\": 29.1,\r\n        \"feelslike_f\": 84.4,\r\n        \"windchill_c\": 31.0,\r\n        \"windchill_f\": 87.8,\r\n        \"heatindex_c\": 29.1,\r\n        \"heatindex_f\": 84.4,\r\n        \"dewpoint_c\": 7.6,\r\n        \"dewpoint_f\": 45.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 4.9,\r\n        \"gust_kph\": 7.9,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659294000,\r\n        \"time\": new Date(\"2022-07-31 12:00\"),\r\n        \"temp_c\": 33.3,\r\n        \"temp_f\": 91.9,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Partly cloudy\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/116.png\",\r\n          \"code\": 1003\r\n        },\r\n        \"wind_mph\": 4.7,\r\n        \"wind_kph\": 7.6,\r\n        \"wind_degree\": 335,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.84,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 18,\r\n        \"cloud\": 27,\r\n        \"feelslike_c\": 31.2,\r\n        \"feelslike_f\": 88.2,\r\n        \"windchill_c\": 33.3,\r\n        \"windchill_f\": 91.9,\r\n        \"heatindex_c\": 31.2,\r\n        \"heatindex_f\": 88.2,\r\n        \"dewpoint_c\": 5.7,\r\n        \"dewpoint_f\": 42.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.4,\r\n        \"gust_kph\": 8.6,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659297600,\r\n        \"time\": new Date(\"2022-07-31 13:00\"),\r\n        \"temp_c\": 35.3,\r\n        \"temp_f\": 95.5,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 5.1,\r\n        \"wind_kph\": 8.3,\r\n        \"wind_degree\": 332,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.83,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 14,\r\n        \"cloud\": 23,\r\n        \"feelslike_c\": 33.5,\r\n        \"feelslike_f\": 92.3,\r\n        \"windchill_c\": 35.3,\r\n        \"windchill_f\": 95.5,\r\n        \"heatindex_c\": 33.5,\r\n        \"heatindex_f\": 92.3,\r\n        \"dewpoint_c\": 4.2,\r\n        \"dewpoint_f\": 39.6,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.8,\r\n        \"gust_kph\": 9.4,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659301200,\r\n        \"time\": new Date(\"2022-07-31 14:00\"),\r\n        \"temp_c\": 36.6,\r\n        \"temp_f\": 97.9,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 6.3,\r\n        \"wind_kph\": 10.1,\r\n        \"wind_degree\": 333,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.8,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 12,\r\n        \"cloud\": 24,\r\n        \"feelslike_c\": 35.2,\r\n        \"feelslike_f\": 95.4,\r\n        \"windchill_c\": 36.6,\r\n        \"windchill_f\": 97.9,\r\n        \"heatindex_c\": 35.2,\r\n        \"heatindex_f\": 95.4,\r\n        \"dewpoint_c\": 3.0,\r\n        \"dewpoint_f\": 37.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 7.2,\r\n        \"gust_kph\": 11.5,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659304800,\r\n        \"time\": new Date(\"2022-07-31 15:00\"),\r\n        \"temp_c\": 39.8,\r\n        \"temp_f\": 103.6,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 7.4,\r\n        \"wind_kph\": 11.9,\r\n        \"wind_degree\": 332,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1008.0,\r\n        \"pressure_in\": 29.77,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 12,\r\n        \"cloud\": 6,\r\n        \"feelslike_c\": 39.6,\r\n        \"feelslike_f\": 103.3,\r\n        \"windchill_c\": 39.8,\r\n        \"windchill_f\": 103.6,\r\n        \"heatindex_c\": 39.6,\r\n        \"heatindex_f\": 103.3,\r\n        \"dewpoint_c\": 4.8,\r\n        \"dewpoint_f\": 40.6,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 8.5,\r\n        \"gust_kph\": 13.7,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659308400,\r\n        \"time\": new Date(\"2022-07-31 16:00\"),\r\n        \"temp_c\": 39.7,\r\n        \"temp_f\": 103.5,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 7.6,\r\n        \"wind_kph\": 12.2,\r\n        \"wind_degree\": 337,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1008.0,\r\n        \"pressure_in\": 29.76,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 12,\r\n        \"cloud\": 0,\r\n        \"feelslike_c\": 39.5,\r\n        \"feelslike_f\": 103.1,\r\n        \"windchill_c\": 39.7,\r\n        \"windchill_f\": 103.5,\r\n        \"heatindex_c\": 39.5,\r\n        \"heatindex_f\": 103.1,\r\n        \"dewpoint_c\": 5.5,\r\n        \"dewpoint_f\": 41.9,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 8.7,\r\n        \"gust_kph\": 14.0,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659312000,\r\n        \"time\": new Date(\"2022-07-31 17:00\"),\r\n        \"temp_c\": 38.8,\r\n        \"temp_f\": 101.8,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 7.4,\r\n        \"wind_kph\": 11.9,\r\n        \"wind_degree\": 329,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1008.0,\r\n        \"pressure_in\": 29.76,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 14,\r\n        \"cloud\": 3,\r\n        \"feelslike_c\": 38.2,\r\n        \"feelslike_f\": 100.8,\r\n        \"windchill_c\": 38.8,\r\n        \"windchill_f\": 101.8,\r\n        \"heatindex_c\": 38.2,\r\n        \"heatindex_f\": 100.8,\r\n        \"dewpoint_c\": 6.8,\r\n        \"dewpoint_f\": 44.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 8.5,\r\n        \"gust_kph\": 13.7,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659315600,\r\n        \"time\": new Date(\"2022-07-31 18:00\"),\r\n        \"temp_c\": 36.7,\r\n        \"temp_f\": 98.1,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 8.9,\r\n        \"wind_kph\": 14.4,\r\n        \"wind_degree\": 323,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1008.0,\r\n        \"pressure_in\": 29.75,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 20,\r\n        \"cloud\": 8,\r\n        \"feelslike_c\": 35.3,\r\n        \"feelslike_f\": 95.5,\r\n        \"windchill_c\": 36.7,\r\n        \"windchill_f\": 98.1,\r\n        \"heatindex_c\": 35.3,\r\n        \"heatindex_f\": 95.5,\r\n        \"dewpoint_c\": 9.8,\r\n        \"dewpoint_f\": 49.6,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 10.3,\r\n        \"gust_kph\": 16.6,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659319200,\r\n        \"time\": new Date(\"2022-07-31 19:00\"),\r\n        \"temp_c\": 32.5,\r\n        \"temp_f\": 90.5,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Partly cloudy\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/116.png\",\r\n          \"code\": 1003\r\n        },\r\n        \"wind_mph\": 6.9,\r\n        \"wind_kph\": 11.2,\r\n        \"wind_degree\": 318,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1008.0,\r\n        \"pressure_in\": 29.78,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 29,\r\n        \"cloud\": 32,\r\n        \"feelslike_c\": 31.7,\r\n        \"feelslike_f\": 89.1,\r\n        \"windchill_c\": 32.5,\r\n        \"windchill_f\": 90.5,\r\n        \"heatindex_c\": 31.7,\r\n        \"heatindex_f\": 89.1,\r\n        \"dewpoint_c\": 12.2,\r\n        \"dewpoint_f\": 54.0,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 10.7,\r\n        \"gust_kph\": 17.3,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659322800,\r\n        \"time\": new Date(\"2022-07-31 20:00\"),\r\n        \"temp_c\": 28.1,\r\n        \"temp_f\": 82.6,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 6.7,\r\n        \"wind_kph\": 10.8,\r\n        \"wind_degree\": 329,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.79,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 41,\r\n        \"cloud\": 13,\r\n        \"feelslike_c\": 28.0,\r\n        \"feelslike_f\": 82.4,\r\n        \"windchill_c\": 28.1,\r\n        \"windchill_f\": 82.6,\r\n        \"heatindex_c\": 28.0,\r\n        \"heatindex_f\": 82.4,\r\n        \"dewpoint_c\": 13.5,\r\n        \"dewpoint_f\": 56.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 13.6,\r\n        \"gust_kph\": 22.0,\r\n        \"uv\": 7.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659326400,\r\n        \"time\": new Date(\"2022-07-31 21:00\"),\r\n        \"temp_c\": 24.3,\r\n        \"temp_f\": 75.7,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 5.8,\r\n        \"wind_kph\": 9.4,\r\n        \"wind_degree\": 334,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.81,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 49,\r\n        \"cloud\": 19,\r\n        \"feelslike_c\": 25.3,\r\n        \"feelslike_f\": 77.5,\r\n        \"windchill_c\": 24.3,\r\n        \"windchill_f\": 75.7,\r\n        \"heatindex_c\": 25.3,\r\n        \"heatindex_f\": 77.5,\r\n        \"dewpoint_c\": 13.0,\r\n        \"dewpoint_f\": 55.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 12.3,\r\n        \"gust_kph\": 19.8,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659330000,\r\n        \"time\": new Date(\"2022-07-31 22:00\"),\r\n        \"temp_c\": 22.2,\r\n        \"temp_f\": 72.0,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 5.1,\r\n        \"wind_kph\": 8.3,\r\n        \"wind_degree\": 337,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.83,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 57,\r\n        \"cloud\": 19,\r\n        \"feelslike_c\": 24.6,\r\n        \"feelslike_f\": 76.3,\r\n        \"windchill_c\": 22.2,\r\n        \"windchill_f\": 72.0,\r\n        \"heatindex_c\": 24.6,\r\n        \"heatindex_f\": 76.3,\r\n        \"dewpoint_c\": 13.3,\r\n        \"dewpoint_f\": 55.9,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 10.7,\r\n        \"gust_kph\": 17.3,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659333600,\r\n        \"time\": new Date(\"2022-07-31 23:00\"),\r\n        \"temp_c\": 21.0,\r\n        \"temp_f\": 69.8,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Partly cloudy\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/116.png\",\r\n          \"code\": 1003\r\n        },\r\n        \"wind_mph\": 4.5,\r\n        \"wind_kph\": 7.2,\r\n        \"wind_degree\": 325,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.83,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 60,\r\n        \"cloud\": 48,\r\n        \"feelslike_c\": 21.0,\r\n        \"feelslike_f\": 69.8,\r\n        \"windchill_c\": 21.0,\r\n        \"windchill_f\": 69.8,\r\n        \"heatindex_c\": 21.0,\r\n        \"heatindex_f\": 69.8,\r\n        \"dewpoint_c\": 13.0,\r\n        \"dewpoint_f\": 55.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 9.4,\r\n        \"gust_kph\": 15.1,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation\r\n    ]\r\n  ),\r\n  new ForecastDay(\r\n    new Date(\"2022-08-01\"),\r\n    1659312000,\r\n    {\r\n      \"maxtemp_c\": 35.6,\r\n      \"maxtemp_f\": 96.1,\r\n      \"mintemp_c\": 16.7,\r\n      \"mintemp_f\": 62.1,\r\n      \"avgtemp_c\": 24.6,\r\n      \"avgtemp_f\": 76.2,\r\n      \"maxwind_mph\": 8.5,\r\n      \"maxwind_kph\": 13.7,\r\n      \"totalprecip_mm\": 0.0,\r\n      \"totalprecip_in\": 0.0,\r\n      \"avgvis_km\": 10.0,\r\n      \"avgvis_miles\": 6.0,\r\n      \"avghumidity\": 55.0,\r\n      \"daily_will_it_rain\": 0,\r\n      \"daily_chance_of_rain\": 0,\r\n      \"daily_will_it_snow\": 0,\r\n      \"daily_chance_of_snow\": 0,\r\n      \"condition\": {\r\n        \"text\": \"Sunny\",\r\n        \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n        \"code\": 1000\r\n      },\r\n      \"uv\": 6.0\r\n    },\r\n    {\r\n      \"sunrise\": \"05:54 AM\",\r\n      \"sunset\": \"08:39 PM\",\r\n      \"moonrise\": \"09:50 AM\",\r\n      \"moonset\": \"10:48 PM\",\r\n      \"moon_phase\": \"Waxing Crescent\",\r\n      \"moon_illumination\": 22\r\n    } as AstroInformation,\r\n    [\r\n      {\r\n        \"time_epoch\": 1659337200,\r\n        \"time\": new Date(\"2022-08-01 00:00\"),\r\n        \"temp_c\": 20.6,\r\n        \"temp_f\": 69.1,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.9,\r\n        \"wind_kph\": 4.7,\r\n        \"wind_degree\": 309,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.84,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 60,\r\n        \"cloud\": 23,\r\n        \"feelslike_c\": 20.6,\r\n        \"feelslike_f\": 69.1,\r\n        \"windchill_c\": 20.6,\r\n        \"windchill_f\": 69.1,\r\n        \"heatindex_c\": 20.6,\r\n        \"heatindex_f\": 69.1,\r\n        \"dewpoint_c\": 12.5,\r\n        \"dewpoint_f\": 54.5,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.0,\r\n        \"gust_kph\": 9.7,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659340800,\r\n        \"time\": new Date(\"2022-08-01 01:00\"),\r\n        \"temp_c\": 19.0,\r\n        \"temp_f\": 66.2,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Partly cloudy\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/116.png\",\r\n          \"code\": 1003\r\n        },\r\n        \"wind_mph\": 3.4,\r\n        \"wind_kph\": 5.4,\r\n        \"wind_degree\": 331,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.85,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 65,\r\n        \"cloud\": 26,\r\n        \"feelslike_c\": 19.0,\r\n        \"feelslike_f\": 66.2,\r\n        \"windchill_c\": 19.0,\r\n        \"windchill_f\": 66.2,\r\n        \"heatindex_c\": 19.0,\r\n        \"heatindex_f\": 66.2,\r\n        \"dewpoint_c\": 12.3,\r\n        \"dewpoint_f\": 54.1,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659344400,\r\n        \"time\": new Date(\"2022-08-01 02:00\"),\r\n        \"temp_c\": 18.8,\r\n        \"temp_f\": 65.8,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Partly cloudy\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/116.png\",\r\n          \"code\": 1003\r\n        },\r\n        \"wind_mph\": 2.7,\r\n        \"wind_kph\": 4.3,\r\n        \"wind_degree\": 357,\r\n        \"wind_dir\": \"N\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 66,\r\n        \"cloud\": 34,\r\n        \"feelslike_c\": 18.8,\r\n        \"feelslike_f\": 65.8,\r\n        \"windchill_c\": 18.8,\r\n        \"windchill_f\": 65.8,\r\n        \"heatindex_c\": 18.8,\r\n        \"heatindex_f\": 65.8,\r\n        \"dewpoint_c\": 12.4,\r\n        \"dewpoint_f\": 54.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.6,\r\n        \"gust_kph\": 9.0,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659348000,\r\n        \"time\": new Date(\"2022-08-01 03:00\"),\r\n        \"temp_c\": 18.4,\r\n        \"temp_f\": 65.1,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Partly cloudy\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/116.png\",\r\n          \"code\": 1003\r\n        },\r\n        \"wind_mph\": 3.6,\r\n        \"wind_kph\": 5.8,\r\n        \"wind_degree\": 347,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 69,\r\n        \"cloud\": 27,\r\n        \"feelslike_c\": 18.4,\r\n        \"feelslike_f\": 65.1,\r\n        \"windchill_c\": 18.4,\r\n        \"windchill_f\": 65.1,\r\n        \"heatindex_c\": 18.4,\r\n        \"heatindex_f\": 65.1,\r\n        \"dewpoint_c\": 12.6,\r\n        \"dewpoint_f\": 54.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 7.4,\r\n        \"gust_kph\": 11.9,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659351600,\r\n        \"time\": new Date(\"2022-08-01 04:00\"),\r\n        \"temp_c\": 18.5,\r\n        \"temp_f\": 65.3,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 1.6,\r\n        \"wind_kph\": 2.5,\r\n        \"wind_degree\": 270,\r\n        \"wind_dir\": \"W\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.88,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 68,\r\n        \"cloud\": 20,\r\n        \"feelslike_c\": 18.5,\r\n        \"feelslike_f\": 65.3,\r\n        \"windchill_c\": 18.5,\r\n        \"windchill_f\": 65.3,\r\n        \"heatindex_c\": 18.5,\r\n        \"heatindex_f\": 65.3,\r\n        \"dewpoint_c\": 12.5,\r\n        \"dewpoint_f\": 54.5,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 3.1,\r\n        \"gust_kph\": 5.0,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659355200,\r\n        \"time\": new Date(\"2022-08-01 05:00\"),\r\n        \"temp_c\": 17.5,\r\n        \"temp_f\": 63.5,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.2,\r\n        \"wind_kph\": 3.6,\r\n        \"wind_degree\": 356,\r\n        \"wind_dir\": \"N\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.89,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 72,\r\n        \"cloud\": 8,\r\n        \"feelslike_c\": 17.5,\r\n        \"feelslike_f\": 63.5,\r\n        \"windchill_c\": 17.5,\r\n        \"windchill_f\": 63.5,\r\n        \"heatindex_c\": 17.5,\r\n        \"heatindex_f\": 63.5,\r\n        \"dewpoint_c\": 12.4,\r\n        \"dewpoint_f\": 54.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 4.7,\r\n        \"gust_kph\": 7.6,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659358800,\r\n        \"time\": new Date(\"2022-08-01 06:00\"),\r\n        \"temp_c\": 16.8,\r\n        \"temp_f\": 62.2,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.5,\r\n        \"wind_kph\": 4.0,\r\n        \"wind_degree\": 8,\r\n        \"wind_dir\": \"N\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.89,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 76,\r\n        \"cloud\": 8,\r\n        \"feelslike_c\": 16.8,\r\n        \"feelslike_f\": 62.2,\r\n        \"windchill_c\": 16.8,\r\n        \"windchill_f\": 62.2,\r\n        \"heatindex_c\": 16.8,\r\n        \"heatindex_f\": 62.2,\r\n        \"dewpoint_c\": 12.4,\r\n        \"dewpoint_f\": 54.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 5.1,\r\n        \"gust_kph\": 8.3,\r\n        \"uv\": 5.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659362400,\r\n        \"time\": new Date(\"2022-08-01 07:00\"),\r\n        \"temp_c\": 17.9,\r\n        \"temp_f\": 64.2,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 1.1,\r\n        \"wind_kph\": 1.8,\r\n        \"wind_degree\": 340,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1013.0,\r\n        \"pressure_in\": 29.9,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 73,\r\n        \"cloud\": 5,\r\n        \"feelslike_c\": 17.9,\r\n        \"feelslike_f\": 64.2,\r\n        \"windchill_c\": 17.9,\r\n        \"windchill_f\": 64.2,\r\n        \"heatindex_c\": 17.9,\r\n        \"heatindex_f\": 64.2,\r\n        \"dewpoint_c\": 12.9,\r\n        \"dewpoint_f\": 55.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 1.8,\r\n        \"gust_kph\": 2.9,\r\n        \"uv\": 5.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659366000,\r\n        \"time\": new Date(\"2022-08-01 08:00\"),\r\n        \"temp_c\": 20.2,\r\n        \"temp_f\": 68.4,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 1.3,\r\n        \"wind_kph\": 2.2,\r\n        \"wind_degree\": 321,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1013.0,\r\n        \"pressure_in\": 29.91,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 63,\r\n        \"cloud\": 5,\r\n        \"feelslike_c\": 20.2,\r\n        \"feelslike_f\": 68.4,\r\n        \"windchill_c\": 20.2,\r\n        \"windchill_f\": 68.4,\r\n        \"heatindex_c\": 20.2,\r\n        \"heatindex_f\": 68.4,\r\n        \"dewpoint_c\": 13.0,\r\n        \"dewpoint_f\": 55.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 1.6,\r\n        \"gust_kph\": 2.5,\r\n        \"uv\": 6.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659369600,\r\n        \"time\": new Date(\"2022-08-01 09:00\"),\r\n        \"temp_c\": 22.7,\r\n        \"temp_f\": 72.9,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 0.2,\r\n        \"wind_kph\": 0.4,\r\n        \"wind_degree\": 225,\r\n        \"wind_dir\": \"SW\",\r\n        \"pressure_mb\": 1013.0,\r\n        \"pressure_in\": 29.91,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 55,\r\n        \"cloud\": 5,\r\n        \"feelslike_c\": 24.7,\r\n        \"feelslike_f\": 76.5,\r\n        \"windchill_c\": 22.7,\r\n        \"windchill_f\": 72.9,\r\n        \"heatindex_c\": 24.7,\r\n        \"heatindex_f\": 76.5,\r\n        \"dewpoint_c\": 13.1,\r\n        \"dewpoint_f\": 55.6,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 0.2,\r\n        \"gust_kph\": 0.4,\r\n        \"uv\": 6.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659373200,\r\n        \"time\": new Date(\"2022-08-01 10:00\"),\r\n        \"temp_c\": 25.0,\r\n        \"temp_f\": 77.0,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.0,\r\n        \"wind_kph\": 3.2,\r\n        \"wind_degree\": 172,\r\n        \"wind_dir\": \"S\",\r\n        \"pressure_mb\": 1013.0,\r\n        \"pressure_in\": 29.91,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 47,\r\n        \"cloud\": 6,\r\n        \"feelslike_c\": 25.7,\r\n        \"feelslike_f\": 78.3,\r\n        \"windchill_c\": 25.0,\r\n        \"windchill_f\": 77.0,\r\n        \"heatindex_c\": 25.7,\r\n        \"heatindex_f\": 78.3,\r\n        \"dewpoint_c\": 13.1,\r\n        \"dewpoint_f\": 55.6,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 2.2,\r\n        \"gust_kph\": 3.6,\r\n        \"uv\": 7.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659376800,\r\n        \"time\": new Date(\"2022-08-01 11:00\"),\r\n        \"temp_c\": 30.2,\r\n        \"temp_f\": 86.4,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.0,\r\n        \"wind_kph\": 3.2,\r\n        \"wind_degree\": 192,\r\n        \"wind_dir\": \"SSW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.89,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 41,\r\n        \"cloud\": 6,\r\n        \"feelslike_c\": 30.6,\r\n        \"feelslike_f\": 87.1,\r\n        \"windchill_c\": 30.2,\r\n        \"windchill_f\": 86.4,\r\n        \"heatindex_c\": 30.6,\r\n        \"heatindex_f\": 87.1,\r\n        \"dewpoint_c\": 15.7,\r\n        \"dewpoint_f\": 60.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 2.2,\r\n        \"gust_kph\": 3.6,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659380400,\r\n        \"time\": new Date(\"2022-08-01 12:00\"),\r\n        \"temp_c\": 32.1,\r\n        \"temp_f\": 89.8,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.5,\r\n        \"wind_kph\": 4.0,\r\n        \"wind_degree\": 221,\r\n        \"wind_dir\": \"SW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.88,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 37,\r\n        \"cloud\": 6,\r\n        \"feelslike_c\": 32.5,\r\n        \"feelslike_f\": 90.5,\r\n        \"windchill_c\": 32.1,\r\n        \"windchill_f\": 89.8,\r\n        \"heatindex_c\": 32.5,\r\n        \"heatindex_f\": 90.5,\r\n        \"dewpoint_c\": 15.6,\r\n        \"dewpoint_f\": 60.1,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 2.9,\r\n        \"gust_kph\": 4.7,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659384000,\r\n        \"time\": new Date(\"2022-08-01 13:00\"),\r\n        \"temp_c\": 33.5,\r\n        \"temp_f\": 92.3,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.5,\r\n        \"wind_kph\": 4.0,\r\n        \"wind_degree\": 245,\r\n        \"wind_dir\": \"WSW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 34,\r\n        \"cloud\": 5,\r\n        \"feelslike_c\": 34.0,\r\n        \"feelslike_f\": 93.2,\r\n        \"windchill_c\": 33.5,\r\n        \"windchill_f\": 92.3,\r\n        \"heatindex_c\": 34.0,\r\n        \"heatindex_f\": 93.2,\r\n        \"dewpoint_c\": 15.6,\r\n        \"dewpoint_f\": 60.1,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 2.9,\r\n        \"gust_kph\": 4.7,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659387600,\r\n        \"time\": new Date(\"2022-08-01 14:00\"),\r\n        \"temp_c\": 34.8,\r\n        \"temp_f\": 94.6,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.0,\r\n        \"wind_kph\": 3.2,\r\n        \"wind_degree\": 257,\r\n        \"wind_dir\": \"WSW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.84,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 32,\r\n        \"cloud\": 4,\r\n        \"feelslike_c\": 35.5,\r\n        \"feelslike_f\": 95.9,\r\n        \"windchill_c\": 34.8,\r\n        \"windchill_f\": 94.6,\r\n        \"heatindex_c\": 35.5,\r\n        \"heatindex_f\": 95.9,\r\n        \"dewpoint_c\": 15.7,\r\n        \"dewpoint_f\": 60.3,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 2.2,\r\n        \"gust_kph\": 3.6,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659391200,\r\n        \"time\": new Date(\"2022-08-01 15:00\"),\r\n        \"temp_c\": 35.6,\r\n        \"temp_f\": 96.1,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.2,\r\n        \"wind_kph\": 3.6,\r\n        \"wind_degree\": 280,\r\n        \"wind_dir\": \"W\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.82,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 31,\r\n        \"cloud\": 5,\r\n        \"feelslike_c\": 36.4,\r\n        \"feelslike_f\": 97.5,\r\n        \"windchill_c\": 35.6,\r\n        \"windchill_f\": 96.1,\r\n        \"heatindex_c\": 36.4,\r\n        \"heatindex_f\": 97.5,\r\n        \"dewpoint_c\": 15.8,\r\n        \"dewpoint_f\": 60.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 2.5,\r\n        \"gust_kph\": 4.0,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659394800,\r\n        \"time\": new Date(\"2022-08-01 16:00\"),\r\n        \"temp_c\": 35.2,\r\n        \"temp_f\": 95.4,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 0.4,\r\n        \"wind_kph\": 0.7,\r\n        \"wind_degree\": 283,\r\n        \"wind_dir\": \"WNW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.8,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 30,\r\n        \"cloud\": 6,\r\n        \"feelslike_c\": 35.7,\r\n        \"feelslike_f\": 96.3,\r\n        \"windchill_c\": 35.2,\r\n        \"windchill_f\": 95.4,\r\n        \"heatindex_c\": 35.7,\r\n        \"heatindex_f\": 96.3,\r\n        \"dewpoint_c\": 15.2,\r\n        \"dewpoint_f\": 59.4,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 0.4,\r\n        \"gust_kph\": 0.7,\r\n        \"uv\": 9.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659398400,\r\n        \"time\": new Date(\"2022-08-01 17:00\"),\r\n        \"temp_c\": 34.2,\r\n        \"temp_f\": 93.6,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 4.0,\r\n        \"wind_kph\": 6.5,\r\n        \"wind_degree\": 327,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.78,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 32,\r\n        \"cloud\": 10,\r\n        \"feelslike_c\": 34.5,\r\n        \"feelslike_f\": 94.1,\r\n        \"windchill_c\": 34.2,\r\n        \"windchill_f\": 93.6,\r\n        \"heatindex_c\": 34.5,\r\n        \"heatindex_f\": 94.1,\r\n        \"dewpoint_c\": 14.9,\r\n        \"dewpoint_f\": 58.8,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 4.7,\r\n        \"gust_kph\": 7.6,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659402000,\r\n        \"time\": new Date(\"2022-08-01 18:00\"),\r\n        \"temp_c\": 31.4,\r\n        \"temp_f\": 88.5,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 8.5,\r\n        \"wind_kph\": 13.7,\r\n        \"wind_degree\": 326,\r\n        \"wind_dir\": \"NNW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.79,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 37,\r\n        \"cloud\": 10,\r\n        \"feelslike_c\": 31.6,\r\n        \"feelslike_f\": 88.9,\r\n        \"windchill_c\": 31.4,\r\n        \"windchill_f\": 88.5,\r\n        \"heatindex_c\": 31.6,\r\n        \"heatindex_f\": 88.9,\r\n        \"dewpoint_c\": 15.1,\r\n        \"dewpoint_f\": 59.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 9.8,\r\n        \"gust_kph\": 15.8,\r\n        \"uv\": 8.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659405600,\r\n        \"time\": new Date(\"2022-08-01 19:00\"),\r\n        \"temp_c\": 28.0,\r\n        \"temp_f\": 82.4,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 8.3,\r\n        \"wind_kph\": 13.3,\r\n        \"wind_degree\": 317,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1009.0,\r\n        \"pressure_in\": 29.8,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 45,\r\n        \"cloud\": 7,\r\n        \"feelslike_c\": 28.3,\r\n        \"feelslike_f\": 82.9,\r\n        \"windchill_c\": 28.0,\r\n        \"windchill_f\": 82.4,\r\n        \"heatindex_c\": 28.3,\r\n        \"heatindex_f\": 82.9,\r\n        \"dewpoint_c\": 15.1,\r\n        \"dewpoint_f\": 59.2,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 10.1,\r\n        \"gust_kph\": 16.2,\r\n        \"uv\": 7.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659409200,\r\n        \"time\": new Date(\"2022-08-01 20:00\"),\r\n        \"temp_c\": 23.8,\r\n        \"temp_f\": 74.8,\r\n        \"is_day\": 1,\r\n        \"condition\": {\r\n          \"text\": \"Sunny\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/day/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 8.1,\r\n        \"wind_kph\": 13.0,\r\n        \"wind_degree\": 306,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1010.0,\r\n        \"pressure_in\": 29.83,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 55,\r\n        \"cloud\": 12,\r\n        \"feelslike_c\": 25.2,\r\n        \"feelslike_f\": 77.4,\r\n        \"windchill_c\": 23.8,\r\n        \"windchill_f\": 74.8,\r\n        \"heatindex_c\": 25.2,\r\n        \"heatindex_f\": 77.4,\r\n        \"dewpoint_c\": 14.3,\r\n        \"dewpoint_f\": 57.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 11.9,\r\n        \"gust_kph\": 19.1,\r\n        \"uv\": 6.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659412800,\r\n        \"time\": new Date(\"2022-08-01 21:00\"),\r\n        \"temp_c\": 20.6,\r\n        \"temp_f\": 69.1,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 6.7,\r\n        \"wind_kph\": 10.8,\r\n        \"wind_degree\": 312,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1011.0,\r\n        \"pressure_in\": 29.86,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 65,\r\n        \"cloud\": 21,\r\n        \"feelslike_c\": 20.6,\r\n        \"feelslike_f\": 69.1,\r\n        \"windchill_c\": 20.6,\r\n        \"windchill_f\": 69.1,\r\n        \"heatindex_c\": 20.6,\r\n        \"heatindex_f\": 69.1,\r\n        \"dewpoint_c\": 13.9,\r\n        \"dewpoint_f\": 57.0,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 11.0,\r\n        \"gust_kph\": 17.6,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659416400,\r\n        \"time\": new Date(\"2022-08-01 22:00\"),\r\n        \"temp_c\": 18.5,\r\n        \"temp_f\": 65.3,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 4.0,\r\n        \"wind_kph\": 6.5,\r\n        \"wind_degree\": 320,\r\n        \"wind_dir\": \"NW\",\r\n        \"pressure_mb\": 1012.0,\r\n        \"pressure_in\": 29.9,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 74,\r\n        \"cloud\": 21,\r\n        \"feelslike_c\": 18.5,\r\n        \"feelslike_f\": 65.3,\r\n        \"windchill_c\": 18.5,\r\n        \"windchill_f\": 65.3,\r\n        \"heatindex_c\": 18.5,\r\n        \"heatindex_f\": 65.3,\r\n        \"dewpoint_c\": 13.7,\r\n        \"dewpoint_f\": 56.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 6.9,\r\n        \"gust_kph\": 11.2,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation,\r\n      {\r\n        \"time_epoch\": 1659420000,\r\n        \"time\": new Date(\"2022-08-01 23:00\"),\r\n        \"temp_c\": 16.7,\r\n        \"temp_f\": 62.1,\r\n        \"is_day\": 0,\r\n        \"condition\": {\r\n          \"text\": \"Clear\",\r\n          \"icon\": \"//cdn.weatherapi.com/weather/64x64/night/113.png\",\r\n          \"code\": 1000\r\n        },\r\n        \"wind_mph\": 2.0,\r\n        \"wind_kph\": 3.2,\r\n        \"wind_degree\": 290,\r\n        \"wind_dir\": \"WNW\",\r\n        \"pressure_mb\": 1013.0,\r\n        \"pressure_in\": 29.93,\r\n        \"precip_mm\": 0.0,\r\n        \"precip_in\": 0.0,\r\n        \"humidity\": 82,\r\n        \"cloud\": 6,\r\n        \"feelslike_c\": 16.7,\r\n        \"feelslike_f\": 62.1,\r\n        \"windchill_c\": 16.7,\r\n        \"windchill_f\": 62.1,\r\n        \"heatindex_c\": 16.7,\r\n        \"heatindex_f\": 62.1,\r\n        \"dewpoint_c\": 13.7,\r\n        \"dewpoint_f\": 56.7,\r\n        \"will_it_rain\": 0,\r\n        \"chance_of_rain\": 0,\r\n        \"will_it_snow\": 0,\r\n        \"chance_of_snow\": 0,\r\n        \"vis_km\": 10.0,\r\n        \"vis_miles\": 6.0,\r\n        \"gust_mph\": 3.6,\r\n        \"gust_kph\": 5.8,\r\n        \"uv\": 1.0\r\n      } as HourForecastInformation\r\n    ]\r\n  )\r\n])"
                }
            ],
            "src/stories/SearchableDropdown.stories.ts": [
                {
                    "name": "ObjectBasedSearch",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/SearchableDropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateTwo.bind({})"
                },
                {
                    "name": "StringBasedSearch",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/SearchableDropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/SearchableDropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SearchableDropdownComponent>",
                    "defaultValue": "(args: SearchableDropdownComponent) => ({\r\n  component: SearchableDropdownComponent,\r\n  props: args,\r\n})"
                },
                {
                    "name": "TemplateTwo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/SearchableDropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SearchableDropdownComponent>",
                    "defaultValue": "(args: SearchableDropdownComponent) => ({\r\n  component: SearchableDropdownComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/data/PrecipitationChances.ts": [
                {
                    "name": "precipitationChances",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/data/PrecipitationChances.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  new BasicGraphNode('', [\r\n    {\r\n      \"name\": \"2016-09-22T00:00:00.474Z\",\r\n      \"value\": .01,\r\n      \"extra\": {\r\n        \"code\": \"de\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T01:00:00.474Z\",\r\n      \"value\": .05,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T02:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T03:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T04:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T05:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T06:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T07:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T08:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T09:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T10:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T11:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T12:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T13:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T14:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T15:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T15:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T16:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T17:00:00.474Z\",\r\n      \"value\": .1,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T18:00:00.474Z\",\r\n      \"value\": 0,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T19:00:00.474Z\",\r\n      \"value\": .05,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T20:00:00.474Z\",\r\n      \"value\": .2,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"2016-09-22T21:00:00.474Z\",\r\n      \"value\": .3,\r\n      \"extra\": {\r\n        \"code\": \"us\"\r\n      }\r\n    }\r\n  ])\r\n]"
                }
            ],
            "src/stories/graphs/PrecipitationGraph.stories.ts": [
                {
                    "name": "PrecipitationGraphTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/graphs/PrecipitationGraph.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/graphs/PrecipitationGraph.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<PrecipitationGraphComponent>",
                    "defaultValue": "(args: PrecipitationGraphComponent) => ({\r\n  component: PrecipitationGraphComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/cards/AdvancedWeatherCard.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/cards/AdvancedWeatherCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/cards/AdvancedWeatherCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<AdvancedWeatherComponent>",
                    "defaultValue": "(args: AdvancedWeatherComponent) => ({\n  component: AdvancedWeatherComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/cards/BasicWeatherCard.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/cards/BasicWeatherCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/cards/BasicWeatherCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<BasicWeatherCardComponent>",
                    "defaultValue": "(args: BasicWeatherCardComponent) => ({\n  component: BasicWeatherCardComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/cards/WindDirectionCard.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/cards/WindDirectionCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/cards/WindDirectionCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<WindDirectionCardComponent>",
                    "defaultValue": "(args: WindDirectionCardComponent) => ({\n  component: WindDirectionCardComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/thumbnails/WeatherThumbnail.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/thumbnails/WeatherThumbnail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/thumbnails/WeatherThumbnail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<WeatherThumbnailComponent>",
                    "defaultValue": "(args: WeatherThumbnailComponent) => ({\n  component: WeatherThumbnailComponent,\n  props: args,\n})"
                }
            ],
            "src/stories/thumbnails/WindDirectionThumbnail.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/thumbnails/WindDirectionThumbnail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/thumbnails/WindDirectionThumbnail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<WindDirectionThumbnailComponent>",
                    "defaultValue": "(args: WindDirectionThumbnailComponent) => ({\r\n  component: WindDirectionThumbnailComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/graphs/TemperatureGraph.stories.ts": [
                {
                    "name": "TemperatureGraphTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/graphs/TemperatureGraph.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/graphs/TemperatureGraph.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TemperatureGraphComponent>",
                    "defaultValue": "(args: TemperatureGraphComponent) => ({\r\n  component: TemperatureGraphComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/data/Temperatures.ts": [
                {
                    "name": "temperatures",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/data/Temperatures.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    \"name\": \"\",\r\n    \"series\": [\r\n      {\r\n        \"value\": 80.0,\r\n        \"name\": \"2016-09-22T00:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 78.0,\r\n        \"name\": \"2016-09-22T01:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 75,\r\n        \"name\": \"2016-09-22T02:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 73,\r\n        \"name\": \"2016-09-22T03:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 70,\r\n        \"name\": \"2016-09-22T04:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 68,\r\n        \"name\": \"2016-09-22T04:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 64,\r\n        \"name\": \"2016-09-22T05:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 63,\r\n        \"name\": \"2016-09-22T06:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 65,\r\n        \"name\": \"2016-09-22T07:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 69,\r\n        \"name\": \"2016-09-22T08:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 71,\r\n        \"name\": \"2016-09-22T09:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 75,\r\n        \"name\": \"2016-09-22T10:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 78,\r\n        \"name\": \"2016-09-22T11:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 81,\r\n        \"name\": \"2016-09-22T12:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 85,\r\n        \"name\": \"2016-09-22T13:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 90,\r\n        \"name\": \"2016-09-22T14:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 92,\r\n        \"name\": \"2016-09-22T15:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 94,\r\n        \"name\": \"2016-09-22T15:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 98,\r\n        \"name\": \"2016-09-22T16:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 93,\r\n        \"name\": \"2016-09-22T17:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 93,\r\n        \"name\": \"2016-09-22T18:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 93,\r\n        \"name\": \"2016-09-22T19:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 93,\r\n        \"name\": \"2016-09-22T20:00:00.474Z\"\r\n      },\r\n      {\r\n        \"value\": 93,\r\n        \"name\": \"2016-09-22T21:00:00.474Z\"\r\n      },\r\n    ]\r\n  } as BasicGraphNode\r\n]"
                }
            ],
            "src/stories/data/WeatherLocation.ts": [
                {
                    "name": "weatherLocation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/data/WeatherLocation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WeatherLocation",
                    "defaultValue": "{\r\n  \"name\": \"Ridgefield\",\r\n  \"region\": \"Washington\",\r\n  \"country\": \"United States of America\",\r\n  \"lat\": 45.82,\r\n  \"lon\": -122.74,\r\n  \"tz_id\": \"America/Los_Angeles\",\r\n  \"localtime_epoch\": 1659195538,\r\n  \"localtime\": new Date(\"2022-07-30 8:38\")\r\n} as WeatherLocation"
                }
            ],
            "src/stories/data/WindDirection.ts": [
                {
                    "name": "windDirections",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/data/WindDirection.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  {\r\n    wind_mph: 15,\r\n    wind_kph: 32.5,\r\n    wind_dir: \"NE\",\r\n    time: new Date('2020-01-01T00:00:00')\r\n  } as IHasWindInformation,\r\n  {\r\n    wind_mph: 5,\r\n    wind_kph: 32.5,\r\n    wind_dir: \"E\",\r\n    time: new Date('2020-01-01T03:00:00')\r\n  } as IHasWindInformation,\r\n  {\r\n    wind_mph: 3,\r\n    wind_kph: 32.5,\r\n    wind_dir: \"E\",\r\n    time: new Date('2020-01-01T06:00:00')\r\n  } as IHasWindInformation,\r\n  {\r\n    wind_mph: 1,\r\n    wind_kph: 32.5,\r\n    wind_dir: \"NE\",\r\n    time: new Date('2020-01-01T09:00:00')\r\n  } as IHasWindInformation,\r\n  {\r\n    wind_mph: 5,\r\n    wind_kph: 32.5,\r\n    wind_dir: \"NE\",\r\n    time: new Date('2020-01-01T12:00:00')\r\n  } as IHasWindInformation,\r\n  {\r\n    wind_mph: 8,\r\n    wind_kph: 32.5,\r\n    wind_dir: \"NE\",\r\n    time: new Date('2020-01-01T15:00:00')\r\n  } as IHasWindInformation,\r\n  {\r\n    wind_mph: 12,\r\n    wind_kph: 32.5,\r\n    wind_dir: \"E\",\r\n    time: new Date('2020-01-01T18:00:00')\r\n  } as IHasWindInformation,\r\n  {\r\n    wind_mph: 18,\r\n    wind_kph: 32.5,\r\n    wind_dir: \"E\",\r\n    time: new Date('2020-01-01T21:00:00')\r\n  } as IHasWindInformation\r\n]"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/shared/utilities/ConvertTemp.ts": [
                {
                    "name": "convertTemp",
                    "file": "src/app/shared/utilities/ConvertTemp.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "temp",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "startingUnit",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "temp",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "startingUnit",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/modules/weather/components/basic-weather-card/basic-weather-card.component.ts": [
                {
                    "name": "getDateObj",
                    "file": "src/app/shared/modules/weather/components/basic-weather-card/basic-weather-card.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Date",
                    "jsdoctags": [
                        {
                            "name": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/modules/weather/components/weather-location-information/weather-location-information.component.ts": [
                {
                    "name": "getDateObj",
                    "file": "src/app/shared/modules/weather/components/weather-location-information/weather-location-information.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Date",
                    "jsdoctags": [
                        {
                            "name": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/shared/components/nav-menu/nav-menu.component.ts": [
                {
                    "name": "DrawerState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"open\" | \"closed\"",
                    "file": "src/app/shared/components/nav-menu/nav-menu.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/shared/modules/weather/components/wind-direction-thumbnail/wind-direction-thumbnail.component.ts": [
                {
                    "name": "SpeedUnits",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"mph\" | \"kph\"",
                    "file": "src/app/shared/modules/weather/components/wind-direction-thumbnail/wind-direction-thumbnail.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "WindDirection",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"E\" | \"ENE\" | \"NE\" | \"NNE\" | \"N\" | \"NNW\" | \"NW\" | \"WNW\" | \"W\" | \"WSW\" | \"SW\" | \"SSW\" | \"S\" | \"SSE\" | \"SE\" | \"ESE\"",
                    "file": "src/app/shared/modules/weather/components/wind-direction-thumbnail/wind-direction-thumbnail.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app.routing.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "home",
                        "component": "HomeComponent",
                        "data": {
                            "title": "WeatherHome"
                        }
                    },
                    {
                        "path": "**",
                        "component": "HomeComponent",
                        "data": {
                            "title": "WeatherHome"
                        }
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/home/home.component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AdvancedWeatherCard",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/nav-menu/nav-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/AdvancedViewGraphsData.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AdvancedViewGraphsData",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/AirQuality.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AirQuality",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/Alert.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Alert",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/AstroInformation.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AstroInformation",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/BasicGraphNode.ts",
                "type": "class",
                "linktype": "classe",
                "name": "BasicGraphNode",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/CurrentForecast.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CurrentForecast",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/CurrentForecastInformation.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CurrentForecastInformation",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/DayForecastInformation.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DayForecastInformation",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/Forecast.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Forecast",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/ForecastDay.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ForecastDay",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/Forecasts.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Forecasts",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/HourForecastInformation.ts",
                "type": "class",
                "linktype": "classe",
                "name": "HourForecastInformation",
                "coveragePercent": 0,
                "coverageCount": "0/37",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/IHasWindInformation.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IHasWindInformation",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/ILocationInformation.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ILocationInformation",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/IWeatherLocationInfo.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ILocationInformation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/IWeatherLocationInfo.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IWeatherLocationInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/IWeatherLocationInfo.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IWeatherThumbnailInfo",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/MinimumCurrentForecastInformation.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MinimumCurrentForecastInformation",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/Node.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Node",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/WeatherCondition.ts",
                "type": "class",
                "linktype": "classe",
                "name": "WeatherCondition",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/WeatherLocation.ts",
                "type": "class",
                "linktype": "classe",
                "name": "WeatherLocation",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/WeatherLocationSearchResult.ts",
                "type": "class",
                "linktype": "classe",
                "name": "WeatherLocationSearchResult",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/WeatherThumbnailInfo.ts",
                "type": "class",
                "linktype": "classe",
                "name": "WeatherThumbnailInfo",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/searchable-dropdown/searchable-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchableDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/weather/components/advanced-weather/advanced-weather.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AdvancedWeatherComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/weather/components/basic-weather-card/basic-weather-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BasicWeatherCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/weather/components/basic-weather-card/basic-weather-card.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getDateObj",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/weather/components/precipitation-graph/precipitation-graph.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PrecipitationGraphComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/weather/components/temperature-graph/temperature-graph.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TemperatureGraphComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/weather/components/weather-location-information/weather-location-information.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WeatherLocationInformationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/weather/components/weather-location-information/weather-location-information.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getDateObj",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/weather/components/weather-thumbnail/weather-thumbnail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WeatherThumbnailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/weather/components/wind-direction-card/wind-direction-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WindDirectionCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/weather/components/wind-direction-thumbnail/wind-direction-thumbnail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WindDirectionThumbnailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/weather/pipes/leading-zeros.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "LeadingZerosPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/weather/pipes/long-hand-day.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "LongHandDayPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/weather/pipes/short-hand-day.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ShortHandDayPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/weather/services/weather.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LocationLookup",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modules/weather/services/weather.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "WeatherService",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/loading.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LoadingService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utilities/AutoBehaviorSubject.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AutoBehaviorSubject",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utilities/ConvertTemp.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "convertTemp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utilities/IAutoBehaviorSubject.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAutoBehaviorSubject",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utilities/LocalStorageAutoBehaviorSubject.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LocalStorageAutoBehaviorSubject",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/SearchableDropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ObjectBasedSearch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/SearchableDropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "StringBasedSearch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/SearchableDropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/SearchableDropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateTwo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/cards/AdvancedWeatherCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/cards/AdvancedWeatherCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/cards/BasicWeatherCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/cards/BasicWeatherCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/cards/WindDirectionCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/cards/WindDirectionCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/data/CurrentForecastInformation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "currentForecastInformation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/data/Forecasts.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "forecasts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/data/PrecipitationChances.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "precipitationChances",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/data/Temperatures.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "temperatures",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/data/WeatherLocation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "weatherLocation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/data/WindDirection.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "windDirections",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/graphs/PrecipitationGraph.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrecipitationGraphTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/graphs/PrecipitationGraph.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/graphs/TemperatureGraph.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemperatureGraphTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/graphs/TemperatureGraph.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/thumbnails/WeatherThumbnail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/thumbnails/WeatherThumbnail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/thumbnails/WindDirectionThumbnail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/thumbnails/WindDirectionThumbnail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}